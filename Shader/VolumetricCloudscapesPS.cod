//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   bool enableSSAO;                   // Offset:    0 Size:     4 [unused]
//   float reflectionIntensity;         // Offset:    4 Size:     4 [unused]
//   float time;                        // Offset:    8 Size:     4
//   bool enableCascadedShadowMaps;     // Offset:   12 Size:     4 [unused]
//   bool enableSSR;                    // Offset:   16 Size:     4 [unused]
//   bool enableFog;                    // Offset:   20 Size:     4 [unused]
//   bool enableBloom;                  // Offset:   24 Size:     4 [unused]
//   float elapsedTime;                 // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer VOLUMETRIC_CLOUDSCAPES_CONSTANT_BUFFER
// {
//
//   float2 windDirection;              // Offset:    0 Size:     8
//   float2 cloudAltitudesMinMax;       // Offset:    8 Size:     8
//   float windSpeed;                   // Offset:   16 Size:     4
//   float densityScale;                // Offset:   20 Size:     4
//   float cloudCoverageScale;          // Offset:   24 Size:     4
//   float rainCloudAbsorptionScale;    // Offset:   28 Size:     4
//   float cloudTypeScale;              // Offset:   32 Size:     4
//   float earthRadius;                 // Offset:   36 Size:     4
//   float horizonDistanceScale;        // Offset:   40 Size:     4
//   float lowFreqyentlyPerlinWorleySamplingScale;// Offset:   44 Size:     4
//   float highFreqyentlyWorleySamplingScale;// Offset:   48 Size:     4
//   float cloudDensityLongDistanceScale;// Offset:   52 Size:     4
//   bool enablePowderedSugarEffect;    // Offset:   56 Size:     4
//   uint rayMarchingSteps;             // Offset:   60 Size:     4
//   bool autoRayMarchingSteps;         // Offset:   64 Size:     4
//
// }
//
// cbuffer VIEW_CONSTANTS_BUFFER
// {
//
//   row_major float4x4 vviewProjection;// Offset:    0 Size:    64 [unused]
//   float4 vcameraPositon;             // Offset:   64 Size:    16
//   row_major float4x4 vview;          // Offset:   80 Size:    64 [unused]
//   row_major float4x4 vprojection;    // Offset:  144 Size:    64 [unused]
//   row_major float4x4 vinverseProjection;// Offset:  208 Size:    64 [unused]
//   row_major float4x4 vinverseViewProjection;// Offset:  272 Size:    64
//   row_major float4x4 vinvView;       // Offset:  336 Size:    64 [unused]
//
// }
//
// cbuffer LIGHT_CONSTANT_BUFFER
// {
//
//   float4 lightDirection;             // Offset:    0 Size:    16
//   float4 colorLight;                 // Offset:   16 Size:    16 [unused]
//   float iblIntensity;                // Offset:   32 Size:     4 [unused]
//   int directionalLightEnable;        // Offset:   36 Size:     4 [unused]
//   int pointLightEnable;              // Offset:   40 Size:     4 [unused]
//   int pointLightCount;               // Offset:   44 Size:     4 [unused]
//   
//   struct PointLights
//   {
//       
//       float4 position;               // Offset:   48
//       float4 color;                  // Offset:   64
//       float range;                   // Offset:   80
//       float3 pads;                   // Offset:   84
//
//   } pointLights[8];                  // Offset:   48 Size:   384 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// linearMirrorSamplerState          sampler      NA          NA             s6      1 
// lowFrequencyPerlinWorleyTexture    texture  float4          3d             t0      1 
// highFrequencyWorleyTexture        texture  float3          3d             t1      1 
// weatherTexture                    texture  float3          2d             t2      1 
// curlNoiseTexture                  texture  float3          2d             t3      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
// VOLUMETRIC_CLOUDSCAPES_CONSTANT_BUFFER    cbuffer      NA          NA            cb5      1 
// VIEW_CONSTANTS_BUFFER             cbuffer      NA          NA            cb8      1 
// LIGHT_CONSTANT_BUFFER             cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB5[5], immediateIndexed
dcl_constantbuffer CB8[21], immediateIndexed
dcl_constantbuffer CB11[1], immediateIndexed
dcl_sampler s6, mode_default
dcl_resource_texture3d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 19
dcl_indexableTemp x0[6], 4
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 37 "C:\Users\2240225\Desktop\graphicEngine4\Shader\VolumetricCloudscapesPS.hlsl"
mov r0.x, l(10000.000000)  // r0.x <- timeOffset

#line 329
mov x0[0].xyz, l(0.380513,0.924534,-0.021113,0)
mov x0[1].xyz, l(-0.506258,-0.035908,-0.861634,0)
mov x0[2].xyz, l(-0.325092,-0.945574,0.014288,0)
mov x0[3].xyz, l(0.090262,-0.273765,0.957552,0)
mov x0[4].xyz, l(0.281286,0.424436,-0.860658,0)
mov x0[5].xyz, l(-0.168524,0.147487,0.974601,0)

#line 485
mul r0.y, v1.x, l(2.000000)
mov r0.z, l(-1.000000)
add r0.y, r0.z, r0.y  // r0.y <- ndc.x
mul r0.z, v1.y, l(2.000000)
mov r0.z, -r0.z
add r0.z, r0.z, l(1.000000)  // r0.z <- ndc.y
mov r1.xy, l(0,1.000000,0,0)  // r1.x <- ndc.z; r1.y <- ndc.w

#line 488
mul r2.xyzw, r0.yyyy, cb8[17].xyzw
mul r3.xyzw, r0.zzzz, cb8[18].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r1.xxxx, cb8[19].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r1.xyzw, r1.yyyy, cb8[20].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- pos.x; r1.y <- pos.y; r1.z <- pos.z; r1.w <- pos.w

#line 489
div r0.yzw, r1.xxyz, r1.wwww  // r0.y <- pos.x; r0.z <- pos.y; r0.w <- pos.z

#line 491
mov r1.xyz, -cb8[4].xyzx
add r0.yzw, r0.yyzw, r1.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx  // r0.y <- rayDir.x; r0.z <- rayDir.y; r0.w <- rayDir.z

#line 506
lt r1.x, l(0.000000), r0.z
if_nz r1.x

#line 509
  mov r1.xz, l(0,0,0,0)
  mov r1.y, cb5[2].y
  add r1.xyz, r1.xyzx, cb8[4].xyzx  // r1.x <- eyePos.x; r1.y <- eyePos.y; r1.z <- eyePos.z

#line 510
  nop 
  mov r1.xyz, r1.xyzx
  mov r0.yzw, r0.yyzw
  mov r1.w, cb5[0].z

#line 237
  dp3 r2.x, r0.yzwy, r0.yzwy  // r2.x <- a

#line 238
  dp3 r2.y, r0.yzwy, r1.xyzx
  mul r2.y, r2.y, l(2.000000)  // r2.y <- b

#line 239
  dp3 r2.z, r1.xyzx, r1.xyzx
  mul r1.w, r1.w, r1.w
  mov r1.w, -r1.w
  add r1.w, r1.w, r2.z  // r1.w <- c

#line 240
  mul r2.z, r2.y, r2.y
  mul r2.w, r2.x, l(4.000000)
  mul r1.w, r1.w, r2.w
  mov r1.w, -r1.w
  add r1.w, r1.w, r2.z
  sqrt r1.w, r1.w  // r1.w <- d

#line 241
  mov r2.z, -r2.y
  mov r2.w, -r1.w
  add r2.z, r2.w, r2.z  // r2.z <- p

#line 242
  mov r2.y, -r2.y
  add r1.w, r1.w, r2.y  // r1.w <- p2

#line 243
  max r1.w, r1.w, r2.z
  mul r2.x, r2.x, l(2.000000)
  div r1.w, r1.w, r2.x  // r1.w <- <IntersectSphere return value>

#line 510
  mul r2.xyz, r0.yzwy, r1.wwww
  add r2.xyz, r1.xyzx, r2.xyzx  // r2.x <- rayOrigin.x; r2.y <- rayOrigin.y; r2.z <- rayOrigin.z

#line 511
  nop 
  mov r0.yzw, r0.yyzw
  mov r1.w, cb5[0].w

#line 237
  dp3 r2.w, r0.yzwy, r0.yzwy  // r2.w <- a

#line 238
  dp3 r3.x, r0.yzwy, r1.xyzx
  mul r3.x, r3.x, l(2.000000)  // r3.x <- b

#line 239
  dp3 r3.y, r1.xyzx, r1.xyzx
  mul r1.w, r1.w, r1.w
  mov r1.w, -r1.w
  add r1.w, r1.w, r3.y  // r1.w <- c

#line 240
  mul r3.y, r3.x, r3.x
  mul r3.z, r2.w, l(4.000000)
  mul r1.w, r1.w, r3.z
  mov r1.w, -r1.w
  add r1.w, r1.w, r3.y
  sqrt r1.w, r1.w  // r1.w <- d

#line 241
  mov r3.y, -r3.x
  mov r3.z, -r1.w
  add r3.y, r3.z, r3.y  // r3.y <- p

#line 242
  mov r3.x, -r3.x
  add r1.w, r1.w, r3.x  // r1.w <- p2

#line 243
  max r1.w, r1.w, r3.y
  mul r2.w, r2.w, l(2.000000)
  div r1.w, r1.w, r2.w  // r1.w <- <IntersectSphere return value>

#line 511
  mul r3.xyz, r0.yzwy, r1.wwww
  add r1.xyz, r1.xyzx, r3.xyzx  // r1.x <- rayEndpoint.x; r1.y <- rayEndpoint.y; r1.z <- rayEndpoint.z

#line 512
  mov r3.xyz, -r2.xyzx
  add r1.xyz, r1.xyzx, r3.xyzx
  dp3 r1.x, r1.xyzx, r1.xyzx
  sqrt r1.x, r1.x  // r1.x <- shellDist

#line 514
  utof r1.y, cb5[3].w  // r1.y <- steps

#line 515
  ine r1.z, l(0, 0, 0, 0), cb5[4].x
  if_nz r1.z

#line 517
    mov r1.z, l(0.562500)  // r1.z <- attenuation

#line 520
    utof r1.w, cb5[3].w
    mul r1.z, r1.z, r1.w
    utof r1.w, cb5[3].w
    dp3 r2.w, r0.ywzy, l(0.000000, 0.000000, 1.000000, 0.000000)
    max r2.w, r2.w, l(0.000000)
    min r2.w, r2.w, l(1.000000)
    mov r3.x, -r1.z
    add r1.w, r1.w, r3.x
    mul r1.w, r1.w, r2.w
    add r1.y, r1.w, r1.z

#line 525
  endif 

#line 528
  mul r1.xzw, r0.yyzw, r1.xxxx
  div r1.xzw, r1.xxzw, r1.yyyy  // r1.x <- rayStep.x; r1.z <- rayStep.y; r1.w <- rayStep.z

#line 529
  nop 
  mov r2.xyz, r2.xyzx
  mov r1.xzw, r1.xxzw
  ftoi r1.y, r1.y

#line 382
  dp3 r2.w, r1.xzwx, r1.xzwx
  sqrt r2.w, r2.w  // r2.w <- stepSize

#line 388
  nop 
  mul r3.xyz, r2.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)

#line 63
  mul r3.xyz, r3.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
  add r3.xyz, r3.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000)
  frc r3.xyz, r3.xyzx  // r3.x <- p.x; r3.y <- p.y; r3.z <- p.z

#line 64
  add r3.xyz, r3.xyzx, l(17.000000, 17.000000, 17.000000, 0.000000)

#line 65
  mul r3.w, r3.y, r3.x
  mul r3.w, r3.z, r3.w
  add r3.x, r3.y, r3.x
  add r3.x, r3.z, r3.x
  mul r3.x, r3.x, r3.w
  frc r3.x, r3.x  // r3.x <- <Hash return value>

#line 388
  mul r3.xyz, r1.xzwx, r3.xxxx
  add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- samplePoint.x; r2.y <- samplePoint.y; r2.z <- samplePoint.z

#line 391
  mov r3.xyz, -cb11[0].xyzx
  dp3 r3.w, r3.xyzx, r3.xyzx
  rsq r3.w, r3.w
  mul r3.xyz, r3.wwww, r3.xyzx  // r3.x <- sunDirection.x; r3.y <- sunDirection.y; r3.z <- sunDirection.z

#line 393
  dp3 r3.w, r1.xzwx, r1.xzwx
  rsq r3.w, r3.w
  mul r4.xyz, r1.xzwx, r3.wwww
  dp3 r3.w, r3.xyzx, r4.xyzx  // r3.w <- cosTheta

#line 396
  mov r4.x, l(0.200000)  // r4.x <- g

#line 397
  nop 
  mov r3.w, r3.w
  mov r4.x, r4.x

#line 77
  mul r4.y, r4.x, r4.x
  mov r4.y, -r4.y
  add r4.y, r4.y, l(1.000000)
  mul r4.z, r4.x, r4.x
  add r4.z, r4.z, l(1.000000)
  mul r4.x, r4.x, l(2.000000)
  mul r3.w, r3.w, r4.x
  mov r3.w, -r3.w
  add r3.w, r3.w, r4.z
  log r3.w, r3.w
  mul r3.w, r3.w, l(1.500000)
  exp r3.w, r3.w
  itof r4.x, l(4)
  mul r3.w, r3.w, r4.x
  mul r3.w, r3.w, l(3.141593)
  div r3.w, r4.y, r3.w  // r3.w <- <HenyeyGreenstein return value>

#line 397
  mov r3.w, r3.w  // r3.w <- henyeyGreensteinPhase

#line 403
  nop 
  mov r3.xyz, r3.xyzx

#line 87
  mov r4.x, l(1000.000000)  // r4.x <- distanceToSun

#line 88
  mov r4.yzw, -cb11[0].xxyz
  dp3 r5.x, r4.yzwy, r4.yzwy
  rsq r5.x, r5.x
  mul r4.yzw, r4.yyzw, r5.xxxx
  mul r4.xyz, r4.xxxx, r4.yzwy
  mov r5.xyz, -cb8[4].xyzx
  add r4.xyz, r4.xyzx, r5.xyzx
  dp3 r4.w, r4.xyzx, r4.xyzx
  rsq r4.w, r4.w
  mul r4.xyz, r4.wwww, r4.xyzx  // r4.x <- sunDirection.x; r4.y <- sunDirection.y; r4.z <- sunDirection.z

#line 90
  mov r5.xyz, l(1.000000,1.000000,1.000000,0)  // r5.x <- lightColor.x; r5.y <- lightColor.y; r5.z <- lightColor.z

#line 91
  mov r6.xyz, l(1.000000,1.000000,1.000000,0)  // r6.x <- groundColor.x; r6.y <- groundColor.y; r6.z <- groundColor.z

#line 94
  mov r4.w, l(8400.000000)  // r4.w <- rayleighZenithSize

#line 95
  mov r5.w, l(1250.000000)  // r5.w <- mieZenithSize

#line 97
  mov r6.w, l(1.000000)  // r6.w <- rayleigh

#line 98
  mov r7.xyz, l(0.260000,0.410000,0.580000,0)  // r7.x <- rayleighColor.x; r7.y <- rayleighColor.y; r7.z <- rayleighColor.z

#line 101
  mov r7.w, l(0.900000)  // r7.w <- mieEccentricity

#line 105
  mov r8.x, l(0.100000)  // r8.x <- exposure

#line 107
  dp3 r8.y, l(0.000000, 1.000000, 0.000000, 0.000000), r4.xyzx
  max r8.y, r8.y, l(-1.000000)
  min r8.y, r8.y, l(1.000000)  // r8.y <- zenithAngle

#line 108
  mov r8.z, -r8.y
  max r8.w, r8.z, r8.y
  mov r9.x, -r8.w
  add r9.x, r9.x, l(1.000000)
  sqrt r9.x, r9.x
  mul r9.y, r8.w, l(-0.018729)
  add r9.y, r9.y, l(0.074261)
  mul r9.y, r8.w, r9.y
  add r9.y, r9.y, l(-0.212114)
  mul r8.w, r8.w, r9.y
  add r8.w, r8.w, l(1.570729)
  mul r8.w, r9.x, r8.w
  mul r9.x, r8.w, l(-2.000000)
  add r9.x, r9.x, l(3.141593)
  lt r8.z, r8.y, r8.z
  and r8.z, r8.z, r9.x
  add r8.z, r8.z, r8.w
  mov r8.z, -r8.z
  add r8.z, r8.z, l(1.570796)
  mov r8.z, -r8.z
  mul r8.z, r8.z, l(1.442695)
  exp r8.z, r8.z
  mov r8.z, -r8.z
  add r8.z, r8.z, l(1.000000)
  max r8.z, r8.z, l(0.000000)
  mul r8.z, r8.z, l(1000.000000)  // r8.z <- sunEnergy

#line 109
  mul r8.w, r4.y, l(1.442695)
  exp r8.w, r8.w
  mov r8.w, -r8.w
  add r8.w, r8.w, l(1.000000)
  max r8.w, r8.w, l(0.000000)
  min r8.w, r8.w, l(1.000000)
  mov r8.w, -r8.w
  add r8.w, r8.w, l(1.000000)  // r8.w <- sunFade

#line 112
  mov r9.x, -r8.w
  add r9.x, r9.x, l(1.000000)
  mul r9.x, r9.x, l(1.000000)
  mov r9.x, -r9.x
  add r6.w, r6.w, r9.x  // r6.w <- rayleighCoefficient

#line 113
  mul r7.xyz, r7.xyzx, r6.wwww
  mul r7.xyz, r7.xyzx, l(0.000100, 0.000100, 0.000100, 0.000000)  // r7.x <- rayleighBeta.x; r7.y <- rayleighBeta.y; r7.z <- rayleighBeta.z

#line 115
  mov r9.xyz, l(0.000014,0.000017,0.000020,0)  // r9.x <- mieBeta.x; r9.y <- mieBeta.y; r9.z <- mieBeta.z

#line 118
  dp3 r6.w, l(0.000000, 1.000000, 0.000000, 0.000000), r3.xyzx
  max r6.w, r6.w, l(0.000000)
  min r6.w, r6.w, l(1.000000)
  mov r9.w, -r6.w
  max r10.x, r6.w, r9.w
  mov r10.y, -r10.x
  add r10.y, r10.y, l(1.000000)
  sqrt r10.y, r10.y
  mul r10.z, r10.x, l(-0.018729)
  add r10.z, r10.z, l(0.074261)
  mul r10.z, r10.x, r10.z
  add r10.z, r10.z, l(-0.212114)
  mul r10.x, r10.x, r10.z
  add r10.x, r10.x, l(1.570729)
  mul r10.x, r10.y, r10.x
  mul r10.y, r10.x, l(-2.000000)
  add r10.y, r10.y, l(3.141593)
  lt r6.w, r6.w, r9.w
  and r6.w, r6.w, r10.y
  add r6.w, r6.w, r10.x  // r6.w <- zenith

#line 120
  sincos null, r9.w, r6.w
  mul r6.w, r6.w, l(57.295780)
  mov r6.w, -r6.w
  add r6.w, r6.w, l(93.885002)
  log r6.w, r6.w
  mul r6.w, r6.w, l(-1.253000)
  exp r6.w, r6.w
  mul r6.w, r6.w, l(0.150000)
  add r6.w, r6.w, r9.w
  div r6.w, l(1.000000), r6.w  // r6.w <- opticalMass

#line 121
  mul r4.w, r4.w, r6.w  // r4.w <- rayleighScatter

#line 122
  mul r5.w, r5.w, r6.w  // r5.w <- mieScatter

#line 125
  mul r10.xyz, r4.wwww, r7.xyzx
  mul r11.xyz, r5.wwww, r9.xyzx
  add r10.xyz, r10.xyzx, r11.xyzx
  mov r10.xyz, -r10.xyzx
  mul r10.xyz, r10.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
  exp r10.xyz, r10.xyzx  // r10.x <- extinction.x; r10.y <- extinction.y; r10.z <- extinction.z

#line 128
  dp3 r4.x, r3.xyzx, r4.xyzx  // r4.x <- cosTheta

#line 130
  mul r4.y, r4.x, l(0.500000)
  add r4.y, r4.y, l(0.500000)
  mov r4.z, l(1.000000)
  mul r4.y, r4.y, r4.y
  mul r4.y, r4.y, r4.z
  add r4.y, r4.y, l(1.000000)
  mul r4.y, r4.y, l(0.059683)  // r4.y <- rayleighPhase

#line 131
  mul r4.yzw, r4.yyyy, r7.xxyz  // r4.y <- rayleighBetaTheta.x; r4.z <- rayleighBetaTheta.y; r4.w <- rayleighBetaTheta.z

#line 133
  nop 
  mov r4.x, r4.x
  mov r7.w, r7.w

#line 77
  mul r5.w, r7.w, r7.w
  mov r5.w, -r5.w
  add r5.w, r5.w, l(1.000000)
  mul r6.w, r7.w, r7.w
  add r6.w, r6.w, l(1.000000)
  mul r7.w, r7.w, l(2.000000)
  mul r7.w, r4.x, r7.w
  mov r7.w, -r7.w
  add r6.w, r6.w, r7.w
  log r6.w, r6.w
  mul r6.w, r6.w, l(1.500000)
  exp r6.w, r6.w
  itof r7.w, l(4)
  mul r6.w, r6.w, r7.w
  mul r6.w, r6.w, l(3.141593)
  div r5.w, r5.w, r6.w  // r5.w <- <HenyeyGreenstein return value>

#line 133
  mov r5.w, r5.w  // r5.w <- miePhase

#line 134
  mul r11.xyz, r5.wwww, r9.xyzx  // r11.x <- mieBetaTheta.x; r11.y <- mieBetaTheta.y; r11.z <- mieBetaTheta.z

#line 136
  add r12.xyz, r4.yzwy, r11.xyzx
  add r13.xyz, r7.xyzx, r9.xyzx
  div r12.xyz, r12.xyzx, r13.xyzx
  mul r12.xyz, r8.zzzz, r12.xyzx
  mov r13.xyz, -r10.xyzx
  add r13.xyz, r13.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r12.xyz, r12.xyzx, r13.xyzx
  log r12.xyz, r12.xyzx
  mul r12.xyz, r12.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)
  exp r12.xyz, r12.xyzx  // r12.x <- Li.x; r12.y <- Li.y; r12.z <- Li.z

#line 138
  add r4.yzw, r4.yyzw, r11.xxyz
  add r7.xyz, r7.xyzx, r9.xyzx
  div r4.yzw, r4.yyzw, r7.xxyz
  mul r4.yzw, r4.yyzw, r8.zzzz
  mul r4.yzw, r10.xxyz, r4.yyzw
  rsq r4.yzw, r4.yyzw
  div r4.yzw, l(1.000000, 1.000000, 1.000000, 1.000000), r4.yyzw
  mov r5.w, -r8.y
  add r5.w, r5.w, l(1.000000)
  mov r6.w, l(1.000000)
  mul r6.w, r5.w, r6.w
  mul r5.w, r5.w, r5.w
  mul r5.w, r5.w, r5.w
  mul r5.w, r5.w, r6.w
  max r5.w, r5.w, l(0.000000)
  min r5.w, r5.w, l(1.000000)
  mov r7.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
  add r4.yzw, r4.yyzw, r7.xxyz
  mul r4.yzw, r4.yyzw, r5.wwww
  add r4.yzw, r4.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
  mul r4.yzw, r4.yyzw, r12.xxyz  // r4.y <- Li.x; r4.z <- Li.y; r4.w <- Li.z

#line 141
  dp3 r5.w, l(0.000000, 1.000000, 0.000000, 0.000000), r3.xyzx
  mov r6.w, l(0.100000)
  add r7.x, r6.w, l(0.100000)
  add r5.w, r5.w, r6.w
  div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.x
  mul r5.w, r5.w, r6.w
  max r5.w, r5.w, l(0.000000)
  min r5.w, r5.w, l(1.000000)
  mul r6.w, r5.w, l(-2.000000)
  add r6.w, r6.w, l(3.000000)
  mul r5.w, r5.w, r5.w
  mul r5.w, r5.w, r6.w
  mov r7.xyz, -r6.xyzx
  add r7.xyz, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r7.xyz, r5.wwww, r7.xyzx
  add r6.xyz, r6.xyzx, r7.xyzx
  mul r4.yzw, r4.yyzw, r6.xxyz

#line 149
  mov r5.w, l(0.999848)  // r5.w <- sunAngularDiameterCosMin

#line 150
  mov r6.x, l(0.999962)  // r6.x <- sunAngularDiameterCosMax

#line 151
  mov r5.w, -r5.w
  add r6.x, r5.w, r6.x
  add r4.x, r4.x, r5.w
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.x
  mul r4.x, r4.x, r5.w
  max r4.x, r4.x, l(0.000000)
  min r4.x, r4.x, l(1.000000)
  mul r5.w, r4.x, l(-2.000000)
  add r5.w, r5.w, l(3.000000)
  mul r4.x, r4.x, r4.x
  mul r4.x, r4.x, r5.w  // r4.x <- sunDisk

#line 152
  mul r5.w, r8.z, l(1900.000000)
  mul r6.xyz, r10.xyzx, r5.wwww
  mul r6.xyz, r4.xxxx, r6.xyzx
  mul r5.xyz, r5.xyzx, r6.xyzx  // r5.x <- Lo.x; r5.y <- Lo.y; r5.z <- Lo.z

#line 156
  add r4.xyz, r4.yzwy, r5.xyzx
  mul r4.xyz, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)  // r4.x <- color.x; r4.y <- color.y; r4.z <- color.z

#line 157
  mul r4.w, r8.w, l(1.200000)
  add r4.w, r4.w, l(1.200000)
  div r4.w, l(1.000000), r4.w
  log r4.xyz, r4.xyzx
  mul r4.xyz, r4.xyzx, r4.wwww
  exp r4.xyz, r4.xyzx  // r4.x <- color.x; r4.y <- color.y; r4.z <- color.z

#line 158
  mul r4.xyz, r8.xxxx, r4.xyzx

#line 160
  mov r4.xyz, r4.xyzx  // r4.x <- <Atmosphere return value>.x; r4.y <- <Atmosphere return value>.y; r4.z <- <Atmosphere return value>.z

#line 403
  mul r4.xyz, r2.wwww, r4.xyzx
  mul r4.xyz, r4.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000)  // r4.x <- atmosphereColor.x; r4.y <- atmosphereColor.y; r4.z <- atmosphereColor.z

#line 405
  mov r4.w, -cb5[0].z
  add r4.w, r4.w, cb5[0].w
  div r4.w, r4.w, l(36.000000)  // r4.w <- coneSpreadMultplier

#line 407
  mov r5.xyz, l(0,0,0,0)  // r5.x <- color.x; r5.y <- color.y; r5.z <- color.z

#line 409
  mov r5.w, l(1.000000)  // r5.w <- transmittence

#line 410
  itof r6.x, l(0)  // r6.x <- cloudTest

#line 411
  mov r6.y, l(0)  // r6.y <- zeroDensitySampleCount

#line 415
  mov r6.z, l(0)  // r6.z <- i
  mov r7.xyz, r5.xyzx  // r7.x <- color.x; r7.y <- color.y; r7.z <- color.z
  mov r8.xy, r2.xzxx  // r8.x <- samplePoint.x; r8.y <- samplePoint.z
  mov r8.z, r2.y  // r8.z <- samplePoint.y
  mov r6.w, r5.w  // r6.w <- transmittence
  mov r8.w, r6.x  // r8.w <- cloudTest
  mov r9.x, r6.y  // r9.x <- zeroDensitySampleCount
  mov r9.y, r6.z  // r9.y <- i
  loop 
    ilt r9.z, r9.y, r1.y
    breakc_z r9.z

#line 418
    lt r9.z, l(0.000000), r8.w
    if_nz r9.z

#line 421
      nop 
      mov r8.xy, r8.xyxx

#line 51
      add r9.z, r0.x, cb1[0].z
      mul r9.z, r9.z, l(0.001000)
      mov r10.xy, -cb5[0].xyxx
      dp2 r9.w, r10.xyxx, r10.xyxx
      rsq r9.w, r9.w
      mul r10.xy, r9.wwww, r10.xyxx
      mul r9.zw, r9.zzzz, r10.xxxy
      mul r9.zw, r9.zzzw, cb5[1].xxxx  // r9.z <- offset.x; r9.w <- offset.y

#line 53
      add r10.x, cb5[0].z, cb5[0].z
      mul r10.y, cb5[2].y, cb5[2].y
      mov r10.y, -r10.y
      add r10.x, r10.y, r10.x
      sqrt r10.x, r10.x
      mul r10.x, r10.x, cb5[2].z  // r10.x <- horizonDistance

#line 54
      add r11.x, r8.x, r10.x
      mov r10.y, -r8.y
      add r11.y, r10.y, r10.x
      mul r10.x, r10.x, l(2.000000)
      div r10.xy, r11.xyxx, r10.xxxx
      add r9.zw, r9.zzzw, r10.xxxy
      sample_indexable(texture2d)(float,float,float,float) r10.xyz, r9.zwzz, t2.xzyw, s6  // r10.x <- <SampleWeatherData return value>.x; r10.z <- <SampleWeatherData return value>.y; r10.y <- <SampleWeatherData return value>.z

#line 421
      mov r10.xyz, r10.xyzx  // r10.x <- weatherData.x; r10.y <- weatherData.z; r10.z <- weatherData.y

#line 422
      nop 
      mov r11.xz, r8.xxyx
      mov r11.y, r8.z
      mov r10.xy, r10.xyxx
      mov r9.z, l(0)
      mov r9.w, l(0)

#line 252
      nop 
      dp3 r10.w, r11.xyzx, r11.xyzx
      sqrt r10.w, r10.w

#line 167
      mov r11.w, -cb5[0].z
      add r10.w, r10.w, r11.w
      mov r11.w, -cb5[0].z
      add r11.w, r11.w, cb5[0].w
      div r10.w, r10.w, r11.w  // r10.w <- heightFraction

#line 168
      max r10.w, r10.w, l(0.000000)
      min r10.w, r10.w, l(1.000000)  // r10.w <- <GetHeightFractionForPoint return value>

#line 252
      mov r10.w, r10.w  // r10.w <- heightFraction

#line 255
      add r11.w, r0.x, cb1[0].z
      mul r11.w, r11.w, l(20.000000)
      mov r12.xy, -cb5[0].xyxx
      dp2 r12.z, r12.xyxx, r12.xyxx
      rsq r12.z, r12.z
      mul r12.xy, r12.zzzz, r12.xyxx
      mul r12.xy, r11.wwww, r12.xyxx
      mul r12.xy, r12.xyxx, cb5[1].xxxx
      mul r12.xy, r12.xyxx, l(0.600000, 0.600000, 0.000000, 0.000000)
      add r11.xz, r11.xxzx, r12.xxyx

#line 260
      nop 
      mov r11.xz, r11.xxzx
      mov r11.y, r11.y
      mov r11.w, l(-2.000000)
      add r11.w, r9.z, r11.w

#line 41
      mul r12.xyz, r11.xyzx, cb5[2].wwww
      sample_l_indexable(texture3d)(float,float,float,float) r12.xyzw, r12.xyzx, t0.xyzw, s6, r11.w  // r12.x <- <SampleLowFrequencyNoises return value>.x; r12.y <- <SampleLowFrequencyNoises return value>.y; r12.z <- <SampleLowFrequencyNoises return value>.z; r12.w <- <SampleLowFrequencyNoises return value>.w

#line 260
      mov r12.xyzw, r12.xyzw  // r12.x <- lowFrequencyNoises.x; r12.y <- lowFrequencyNoises.y; r12.z <- lowFrequencyNoises.z; r12.w <- lowFrequencyNoises.w

#line 263
      mul r11.w, r12.y, l(0.625000)
      mul r12.y, r12.z, l(0.250000)
      add r11.w, r11.w, r12.y
      mul r12.y, r12.w, l(0.125000)
      add r11.w, r11.w, r12.y  // r11.w <- lowFrequencyFbm

#line 266
      nop 
      mov r12.x, r12.x
      mov r11.w, -r11.w
      add r11.w, r11.w, l(1.000000)
      mov r11.w, -r11.w
      mov r12.y, l(1.000000)
      mov r12.z, l(0)
      mov r12.w, l(1.000000)

#line 71
      mov r13.x, -r11.w
      add r12.x, r12.x, r13.x
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.y
      div r11.w, r12.x, r11.w
      mov r12.x, -r12.z
      add r12.x, r12.x, r12.w
      mul r11.w, r11.w, r12.x
      add r11.w, r11.w, r12.z  // r11.w <- <Remap return value>

#line 266
      mov r11.w, r11.w  // r11.w <- baseCloud

#line 269
      mul r10.y, r10.y, cb5[2].x
      max r10.y, r10.y, l(0.000000)
      min r10.y, r10.y, l(1.000000)  // r10.y <- cloudType

#line 270
      nop 
      mov r10.w, r10.w
      mov r10.y, r10.y

#line 219
      mov r12.xyzw, l(0.020000,0.050000,0.090000,0.110000)  // r12.x <- stratusGradient.x; r12.y <- stratusGradient.y; r12.z <- stratusGradient.z; r12.w <- stratusGradient.w

#line 220
      mov r13.xyzw, l(0.020000,0.200000,0.480000,0.625000)  // r13.x <- stratocumulusGradient.x; r13.y <- stratocumulusGradient.y; r13.z <- stratocumulusGradient.z; r13.w <- stratocumulusGradient.w

#line 221
      mov r14.xyzw, l(0.010000,0.062500,0.780000,1.000000)  // r14.x <- cumulusGradient.x; r14.y <- cumulusGradient.y; r14.z <- cumulusGradient.z; r14.w <- cumulusGradient.w

#line 223
      mul r15.x, r10.y, l(2.000000)
      max r15.x, r15.x, l(0.000000)
      min r15.x, r15.x, l(1.000000)
      mov r15.x, -r15.x
      add r15.x, r15.x, l(1.000000)  // r15.x <- stratus

#line 224
      mov r15.y, l(-0.500000)
      add r15.y, r10.y, r15.y
      mov r15.z, -r15.y
      max r15.y, r15.z, r15.y
      mul r15.y, r15.y, l(2.000000)
      mov r15.y, -r15.y
      add r15.y, r15.y, l(1.000000)  // r15.y <- stratocumulus

#line 225
      mov r15.z, l(-0.500000)
      add r10.y, r10.y, r15.z
      max r10.y, r10.y, l(0.000000)
      min r10.y, r10.y, l(1.000000)
      mul r10.y, r10.y, l(2.000000)  // r10.y <- cumulus

#line 227
      mul r12.xyzw, r12.xyzw, r15.xxxx
      mul r13.xyzw, r13.xyzw, r15.yyyy
      add r12.xyzw, r12.xyzw, r13.xyzw
      mul r13.xyzw, r10.yyyy, r14.xyzw
      add r12.xyzw, r12.xyzw, r13.xyzw  // r12.x <- cloudGradient.x; r12.y <- cloudGradient.y; r12.z <- cloudGradient.z; r12.w <- cloudGradient.w

#line 228
      mov r10.y, -r12.x
      add r12.x, r10.y, r12.y
      add r10.y, r10.y, r10.w
      div r12.x, l(1.000000, 1.000000, 1.000000, 1.000000), r12.x
      mul r10.y, r10.y, r12.x
      max r10.y, r10.y, l(0.000000)
      min r10.y, r10.y, l(1.000000)
      mul r12.x, r10.y, l(-2.000000)
      add r12.x, r12.x, l(3.000000)
      mul r10.y, r10.y, r10.y
      mul r10.y, r10.y, r12.x
      mov r12.x, -r12.z
      add r12.y, r12.x, r12.w
      add r12.x, r10.w, r12.x
      div r12.y, l(1.000000, 1.000000, 1.000000, 1.000000), r12.y
      mul r12.x, r12.y, r12.x
      max r12.x, r12.x, l(0.000000)
      min r12.x, r12.x, l(1.000000)
      mul r12.y, r12.x, l(-2.000000)
      add r12.y, r12.y, l(3.000000)
      mul r12.x, r12.x, r12.x
      mul r12.x, r12.x, r12.y
      mov r12.x, -r12.x
      add r10.y, r10.y, r12.x  // r10.y <- densityGradient

#line 230
      mov r10.y, r10.y  // r10.y <- <GetDensityHeightGradient return value>

#line 270
      mov r10.y, r10.y  // r10.y <- densityHeightGradient

#line 273
      mul r10.y, r10.y, r11.w  // r10.y <- baseCloud

#line 276
      mul r10.x, r10.x, cb5[1].z  // r10.x <- cloudCoverage

#line 279
      nop 
      mov r10.y, r10.y
      mov r11.w, -r10.x
      add r11.w, r11.w, l(1.000000)
      mov r12.x, l(1.000000)
      mov r12.y, l(0)
      mov r12.z, l(1.000000)

#line 71
      mov r12.w, -r11.w
      add r10.y, r10.y, r12.w
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x
      div r10.y, r10.y, r11.w
      mov r11.w, -r12.y
      add r11.w, r11.w, r12.z
      mul r10.y, r10.y, r11.w
      add r10.y, r10.y, r12.y  // r10.y <- <Remap return value>

#line 279
      mov r10.y, r10.y  // r10.y <- baseCloudWithCoverage

#line 280
      mul r10.x, r10.x, r10.y  // r10.x <- baseCloudWithCoverage

#line 282
      mov r10.x, r10.x  // r10.x <- finalCloud

#line 283
      not r9.w, r9.w
      lt r10.y, l(0.000000), r10.x
      and r9.w, r9.w, r10.y
      if_nz r9.w

#line 288
        ne r9.w, cb5[1].x, l(0.000000)
        if_nz r9.w

#line 290
          add r9.w, r0.x, cb1[0].z
          mov r12.xy, -cb5[0].xyxx
          dp2 r10.y, r12.xyxx, r12.xyxx
          rsq r10.y, r10.y
          mul r12.xy, r10.yyyy, r12.xyxx
          mul r12.xy, r9.wwww, r12.xyxx
          mul r12.xy, r12.xyxx, l(40.000000, 40.000000, 0.000000, 0.000000)
          mov r12.xy, -r12.xyxx
          add r11.xz, r11.xxzx, r12.xxyx

#line 291
          add r9.w, r0.x, cb1[0].z
          mul r9.w, r9.w, l(40.000000)
          mov r9.w, -r9.w
          add r11.y, r9.w, r11.y

#line 292
        else 
          mov r11.xy, r11.xyxx
        endif 

#line 297
        mul r12.xy, r11.xyxx, l(0.000080, 0.000080, 0.000000, 0.000000)
        itof r9.w, l(0)
        sample_l_indexable(texture2d)(float,float,float,float) r12.xy, r12.xyxx, t3.xyzw, s6, r9.w  // r12.x <- curlNoise.x; r12.y <- curlNoise.y

#line 298
        mov r9.w, -r10.w
        add r9.w, r9.w, l(1.000000)
        mul r12.xy, r9.wwww, r12.xyxx
        add r11.xy, r11.xyxx, r12.xyxx

#line 302
        nop 
        mov r11.xy, r11.xyxx
        mov r11.z, r11.z
        mov r9.z, r9.z

#line 46
        mul r11.xyz, r11.xyzx, cb5[3].xxxx
        sample_l_indexable(texture3d)(float,float,float,float) r11.xyz, r11.xyzx, t1.xyzw, s6, r9.z  // r11.x <- <SampleHighFrequencyNoises return value>.x; r11.y <- <SampleHighFrequencyNoises return value>.y; r11.z <- <SampleHighFrequencyNoises return value>.z

#line 302
        mov r11.xyz, r11.xyzx  // r11.x <- highFrequencyNoises.x; r11.y <- highFrequencyNoises.y; r11.z <- highFrequencyNoises.z

#line 305
        mul r9.z, r11.x, l(0.625000)
        mul r9.w, r11.y, l(0.250000)
        add r9.z, r9.w, r9.z
        mul r9.w, r11.z, l(0.125000)
        add r9.z, r9.w, r9.z  // r9.z <- highFrequencyFbm

#line 311
        mov r9.w, -r9.z
        add r9.w, r9.w, l(1.000000)
        mul r10.y, r10.w, l(4.000000)
        max r10.y, r10.y, l(0.000000)
        min r10.y, r10.y, l(1.000000)
        mov r11.x, -r9.z
        add r9.w, r9.w, r11.x
        mul r9.w, r9.w, r10.y
        add r9.z, r9.w, r9.z  // r9.z <- highFrequencyNoiseModifier

#line 316
        nop 
        mov r10.x, r10.x
        mul r9.z, r9.z, l(0.200000)
        mov r9.w, l(1.000000)
        mov r10.y, l(0)
        mov r11.x, l(1.000000)

#line 71
        mov r11.y, -r9.z
        add r11.y, r10.x, r11.y
        mov r9.z, -r9.z
        add r9.z, r9.z, r9.w
        div r9.z, r11.y, r9.z
        mov r9.w, -r10.y
        add r9.w, r9.w, r11.x
        mul r9.z, r9.w, r9.z
        add r10.x, r9.z, r10.y  // r10.x <- <Remap return value>

#line 316
        mov r10.x, r10.x  // r10.x <- finalCloud

#line 320
      endif 

#line 325
      max r9.z, r10.x, l(0.000000)
      min r9.z, r9.z, l(1.000000)
      mov r9.w, -r10.w
      add r9.w, r9.w, l(1.000000)
      mul r9.w, r9.w, l(0.800000)
      add r9.w, r9.w, l(0.500000)
      log r9.z, r9.z
      mul r9.z, r9.z, r9.w
      exp r9.z, r9.z  // r9.z <- <SampleCloudDensity return value>

#line 422
      mov r9.z, r9.z  // r9.z <- sampledDensity

#line 424
      eq r9.w, r9.z, l(0.000000)
      if_nz r9.w

#line 426
        iadd r9.x, r9.x, l(1)

#line 427
      endif 

#line 429
      ine r9.w, r9.x, l(6)
      if_nz r9.w

#line 432
        ne r9.w, r9.z, l(0.000000)
        if_nz r9.w

#line 435
          mov r9.w, -cb5[1].y
          mul r9.w, r9.z, r9.w
          mul r9.w, r2.w, r9.w
          mul r9.w, r9.w, l(1.442695)
          exp r9.w, r9.w
          mul r6.w, r6.w, r9.w

#line 438
          mov r9.w, l(0)  // r9.w <- densityAlongLightRay

#line 439
          nop 
          mov r11.xz, r8.xxyx
          mov r11.y, r8.z
          mov r10.xyw, r3.xyxz
          mov r11.w, r4.w

#line 343
          mov r11.xyz, r11.xyzx  // r11.x <- samplePoint.x; r11.y <- samplePoint.y; r11.z <- samplePoint.z

#line 346
          mov r12.x, l(0)  // r12.x <- densityAlongCone

#line 350
          mov r12.y, l(0)  // r12.y <- i

#line 353
          mov r13.xyz, x0[0].xyzx
          itof r12.z, r12.y
          mul r13.xyz, r12.zzzz, r13.xyzx
          add r13.xyz, r10.xywx, r13.xyzx
          mul r13.xyz, r11.wwww, r13.xyzx
          add r11.xyz, r11.xzyx, r13.xzyx  // r11.y <- samplePoint.z; r11.z <- samplePoint.y

#line 354
          nop 
          mov r11.xy, r11.xyxx

#line 51
          add r12.z, r0.x, cb1[0].z
          mul r12.z, r12.z, l(0.001000)
          mov r13.xy, -cb5[0].xyxx
          dp2 r12.w, r13.xyxx, r13.xyxx
          rsq r12.w, r12.w
          mul r13.xy, r12.wwww, r13.xyxx
          mul r12.zw, r12.zzzz, r13.xxxy
          mul r12.zw, r12.zzzw, cb5[1].xxxx  // r12.z <- offset.x; r12.w <- offset.y

#line 53
          add r13.x, cb5[0].z, cb5[0].z
          mul r13.y, cb5[2].y, cb5[2].y
          mov r13.y, -r13.y
          add r13.x, r13.y, r13.x
          sqrt r13.x, r13.x
          mul r13.x, r13.x, cb5[2].z  // r13.x <- horizonDistance

#line 54
          add r14.x, r11.x, r13.x
          mov r13.y, -r11.y
          add r14.y, r13.y, r13.x
          mul r13.x, r13.x, l(2.000000)
          div r13.xy, r14.xyxx, r13.xxxx
          add r12.zw, r12.zzzw, r13.xxxy
          sample_indexable(texture2d)(float,float,float,float) r12.zw, r12.zwzz, t2.ywxz, s6
          mov r12.zw, r12.zzzw  // r12.z <- <SampleWeatherData return value>.x; r12.w <- <SampleWeatherData return value>.z

#line 354
          mov r12.zw, r12.zzzw  // r12.z <- weatherData.x; r12.w <- weatherData.z

#line 360
          nop 
          mov r11.xyz, r11.xyzx
          mov r12.zw, r12.zzzw
          itof r13.x, r12.y
          mov r13.y, l(0)

#line 252
          nop 
          dp3 r13.z, r11.xyzx, r11.xyzx
          sqrt r13.z, r13.z

#line 167
          mov r13.w, -cb5[0].z
          add r13.z, r13.w, r13.z
          mov r13.w, -cb5[0].z
          add r13.w, r13.w, cb5[0].w
          div r13.z, r13.z, r13.w  // r13.z <- heightFraction

#line 168
          max r13.z, r13.z, l(0.000000)
          min r13.z, r13.z, l(1.000000)  // r13.z <- <GetHeightFractionForPoint return value>

#line 252
          mov r13.z, r13.z  // r13.z <- heightFraction

#line 255
          add r13.w, r0.x, cb1[0].z
          mul r13.w, r13.w, l(20.000000)
          mov r14.xy, -cb5[0].xyxx
          dp2 r14.z, r14.xyxx, r14.xyxx
          rsq r14.z, r14.z
          mul r14.xy, r14.zzzz, r14.xyxx
          mul r14.xy, r13.wwww, r14.xyxx
          mul r14.xy, r14.xyxx, cb5[1].xxxx
          mul r14.xy, r14.xyxx, l(0.600000, 0.600000, 0.000000, 0.000000)
          add r14.xz, r11.xxyx, r14.xxyx  // r14.x <- samplePoint.x; r14.z <- samplePoint.z

#line 260
          nop 
          mov r14.xz, r14.xxzx
          mov r14.y, r11.z
          mov r13.w, l(-2.000000)
          add r13.w, r13.w, r13.x

#line 41
          mul r15.xyz, r14.xyzx, cb5[2].wwww
          sample_l_indexable(texture3d)(float,float,float,float) r15.xyzw, r15.xyzx, t0.xyzw, s6, r13.w  // r15.x <- <SampleLowFrequencyNoises return value>.x; r15.y <- <SampleLowFrequencyNoises return value>.y; r15.z <- <SampleLowFrequencyNoises return value>.z; r15.w <- <SampleLowFrequencyNoises return value>.w

#line 260
          mov r15.xyzw, r15.xyzw  // r15.x <- lowFrequencyNoises.x; r15.y <- lowFrequencyNoises.y; r15.z <- lowFrequencyNoises.z; r15.w <- lowFrequencyNoises.w

#line 263
          mul r13.w, r15.y, l(0.625000)
          mul r14.w, r15.z, l(0.250000)
          add r13.w, r13.w, r14.w
          mul r14.w, r15.w, l(0.125000)
          add r13.w, r13.w, r14.w  // r13.w <- lowFrequencyFbm

#line 266
          nop 
          mov r15.x, r15.x
          mov r13.w, -r13.w
          add r13.w, r13.w, l(1.000000)
          mov r13.w, -r13.w
          mov r14.w, l(1.000000)
          mov r15.y, l(0)
          mov r15.z, l(1.000000)

#line 71
          mov r15.w, -r13.w
          add r15.x, r15.w, r15.x
          mov r13.w, -r13.w
          add r13.w, r13.w, r14.w
          div r13.w, r15.x, r13.w
          mov r14.w, -r15.y
          add r14.w, r14.w, r15.z
          mul r13.w, r13.w, r14.w
          add r13.w, r13.w, r15.y  // r13.w <- <Remap return value>

#line 266
          mov r13.w, r13.w  // r13.w <- baseCloud

#line 269
          mul r12.w, r12.w, cb5[2].x
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)  // r12.w <- cloudType

#line 270
          nop 
          mov r13.z, r13.z
          mov r12.w, r12.w

#line 219
          mov r15.xyzw, l(0.020000,0.050000,0.090000,0.110000)  // r15.x <- stratusGradient.x; r15.y <- stratusGradient.y; r15.z <- stratusGradient.z; r15.w <- stratusGradient.w

#line 220
          mov r16.xyzw, l(0.020000,0.200000,0.480000,0.625000)  // r16.x <- stratocumulusGradient.x; r16.y <- stratocumulusGradient.y; r16.z <- stratocumulusGradient.z; r16.w <- stratocumulusGradient.w

#line 221
          mov r17.xyzw, l(0.010000,0.062500,0.780000,1.000000)  // r17.x <- cumulusGradient.x; r17.y <- cumulusGradient.y; r17.z <- cumulusGradient.z; r17.w <- cumulusGradient.w

#line 223
          mul r14.w, r12.w, l(2.000000)
          max r14.w, r14.w, l(0.000000)
          min r14.w, r14.w, l(1.000000)
          mov r14.w, -r14.w
          add r14.w, r14.w, l(1.000000)  // r14.w <- stratus

#line 224
          mov r18.x, l(-0.500000)
          add r18.x, r12.w, r18.x
          mov r18.y, -r18.x
          max r18.x, r18.y, r18.x
          mul r18.x, r18.x, l(2.000000)
          mov r18.x, -r18.x
          add r18.x, r18.x, l(1.000000)  // r18.x <- stratocumulus

#line 225
          mov r18.y, l(-0.500000)
          add r12.w, r12.w, r18.y
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)
          mul r12.w, r12.w, l(2.000000)  // r12.w <- cumulus

#line 227
          mul r15.xyzw, r14.wwww, r15.xyzw
          mul r16.xyzw, r16.xyzw, r18.xxxx
          add r15.xyzw, r15.xyzw, r16.xyzw
          mul r16.xyzw, r12.wwww, r17.xyzw
          add r15.xyzw, r15.xyzw, r16.xyzw  // r15.x <- cloudGradient.x; r15.y <- cloudGradient.y; r15.z <- cloudGradient.z; r15.w <- cloudGradient.w

#line 228
          mov r12.w, -r15.x
          add r14.w, r12.w, r15.y
          add r12.w, r12.w, r13.z
          div r14.w, l(1.000000, 1.000000, 1.000000, 1.000000), r14.w
          mul r12.w, r12.w, r14.w
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)
          mul r14.w, r12.w, l(-2.000000)
          add r14.w, r14.w, l(3.000000)
          mul r12.w, r12.w, r12.w
          mul r12.w, r12.w, r14.w
          mov r14.w, -r15.z
          add r15.x, r14.w, r15.w
          add r14.w, r13.z, r14.w
          div r15.x, l(1.000000, 1.000000, 1.000000, 1.000000), r15.x
          mul r14.w, r14.w, r15.x
          max r14.w, r14.w, l(0.000000)
          min r14.w, r14.w, l(1.000000)
          mul r15.x, r14.w, l(-2.000000)
          add r15.x, r15.x, l(3.000000)
          mul r14.w, r14.w, r14.w
          mul r14.w, r14.w, r15.x
          mov r14.w, -r14.w
          add r12.w, r12.w, r14.w  // r12.w <- densityGradient

#line 230
          mov r12.w, r12.w  // r12.w <- <GetDensityHeightGradient return value>

#line 270
          mov r12.w, r12.w  // r12.w <- densityHeightGradient

#line 273
          mul r12.w, r12.w, r13.w  // r12.w <- baseCloud

#line 276
          mul r12.z, r12.z, cb5[1].z  // r12.z <- cloudCoverage

#line 279
          nop 
          mov r12.w, r12.w  // r12.w <- originalValue
          mov r13.w, -r12.z
          add r13.w, r13.w, l(1.000000)  // r13.w <- originalMin
          mov r14.w, l(1.000000)  // r14.w <- originalMax
          mov r15.x, l(0)  // r15.x <- newMin
          mov r15.y, l(1.000000)  // r15.y <- newMax

#line 71
          mov r15.z, -r13.w
          add r12.w, r12.w, r15.z
          mov r13.w, -r13.w
          add r13.w, r13.w, r14.w
          div r12.w, r12.w, r13.w
          mov r13.w, -r15.x
          add r13.w, r13.w, r15.y
          mul r12.w, r12.w, r13.w
          add r12.w, r12.w, r15.x  // r12.w <- <Remap return value>; r12.w <- <Remap return value>

#line 279
          mov r12.w, r12.w  // r12.w <- baseCloudWithCoverage

#line 280
          mul r12.z, r12.z, r12.w  // r12.z <- baseCloudWithCoverage

#line 282
          mov r12.z, r12.z  // r12.z <- finalCloud

#line 283
          not r12.w, r13.y
          lt r13.y, l(0.000000), r12.z
          and r12.w, r12.w, r13.y
          if_nz r12.w

#line 288
            ne r12.w, cb5[1].x, l(0.000000)
            if_nz r12.w

#line 290
              add r12.w, r0.x, cb1[0].z
              mov r13.yw, -cb5[0].xxxy
              dp2 r14.w, r13.ywyy, r13.ywyy
              rsq r14.w, r14.w
              mul r13.yw, r13.yyyw, r14.wwww
              mul r13.yw, r12.wwww, r13.yyyw
              mul r13.yw, r13.yyyw, l(0.000000, 40.000000, 0.000000, 40.000000)
              mov r13.yw, -r13.yyyw
              add r14.xz, r13.yywy, r14.xxzx

#line 291
              add r12.w, r0.x, cb1[0].z
              mul r12.w, r12.w, l(40.000000)
              mov r12.w, -r12.w
              add r14.y, r12.w, r14.y  // r14.y <- samplePoint.y

#line 292
            else   // Prior locations: r11.z <- samplePoint.y; r14.y <- samplePoint.y; r14.w <- originalMax; r14.w <- originalMax
              mov r14.xy, r14.xyxx  // r14.y <- samplePoint.y
            endif 

#line 297
            mul r13.yw, r14.xxxy, l(0.000000, 0.000080, 0.000000, 0.000080)
            itof r12.w, l(0)
            sample_l_indexable(texture2d)(float,float,float,float) r13.yw, r13.ywyy, t3.zxwy, s6, r12.w  // r13.y <- curlNoise.x; r13.w <- curlNoise.y

#line 298
            mov r12.w, -r13.z
            add r12.w, r12.w, l(1.000000)
            mul r13.yw, r12.wwww, r13.yyyw
            add r14.xy, r13.ywyy, r14.xyxx

#line 302
            nop 
            mov r14.xy, r14.xyxx
            mov r14.z, r14.z
            mov r13.x, r13.x

#line 46
            mul r14.xyz, r14.xyzx, cb5[3].xxxx
            sample_l_indexable(texture3d)(float,float,float,float) r13.xyw, r14.xyzx, t1.xywz, s6, r13.x  // r13.x <- <SampleHighFrequencyNoises return value>.x; r13.y <- <SampleHighFrequencyNoises return value>.y; r13.w <- <SampleHighFrequencyNoises return value>.z

#line 302
            mov r13.xyw, r13.xyxw  // r13.x <- highFrequencyNoises.x; r13.y <- highFrequencyNoises.y; r13.w <- highFrequencyNoises.z

#line 305
            mul r12.w, r13.x, l(0.625000)
            mul r13.x, r13.y, l(0.250000)
            add r12.w, r12.w, r13.x
            mul r13.x, r13.w, l(0.125000)
            add r12.w, r12.w, r13.x  // r12.w <- highFrequencyFbm

#line 311
            mov r13.x, -r12.w
            add r13.x, r13.x, l(1.000000)
            mul r13.y, r13.z, l(4.000000)
            max r13.y, r13.y, l(0.000000)
            min r13.y, r13.y, l(1.000000)
            mov r13.w, -r12.w
            add r13.x, r13.w, r13.x
            mul r13.x, r13.x, r13.y
            add r12.w, r12.w, r13.x  // r12.w <- highFrequencyNoiseModifier

#line 316
            nop 
            mov r12.z, r12.z  // r12.z <- originalValue; r12.z <- originalValue
            mul r12.w, r12.w, l(0.200000)  // r12.w <- originalMin; r12.w <- originalMin
            mov r13.x, l(1.000000)  // r13.x <- originalMax; r13.x <- originalMax
            mov r13.y, l(0)  // r13.y <- newMin; r13.y <- newMin
            mov r13.w, l(1.000000)  // r13.w <- newMax; r13.w <- newMax

#line 71
            mov r14.x, -r12.w
            add r14.x, r12.z, r14.x
            mov r12.w, -r12.w
            add r12.w, r12.w, r13.x
            div r12.w, r14.x, r12.w
            mov r13.x, -r13.y
            add r13.x, r13.x, r13.w
            mul r12.w, r12.w, r13.x
            add r12.z, r12.w, r13.y  // r12.z <- <Remap return value>; r12.z <- <Remap return value>; r12.z <- <Remap return value>

#line 316
            mov r12.z, r12.z  // r12.z <- finalCloud

#line 320
          endif 

#line 325
          max r12.z, r12.z, l(0.000000)
          min r12.z, r12.z, l(1.000000)
          mov r12.w, -r13.z
          add r12.w, r12.w, l(1.000000)
          mul r12.w, r12.w, l(0.800000)
          add r12.w, r12.w, l(0.500000)
          log r12.z, r12.z
          mul r12.z, r12.z, r12.w
          exp r12.z, r12.z  // r12.z <- <SampleCloudDensity return value>

#line 360
          add r12.x, r12.z, r12.x

#line 362
          iadd r12.y, r12.y, l(1)

#line 353
          mov r13.xyz, x0[1].xyzx
          itof r12.z, r12.y
          mul r13.xyz, r12.zzzz, r13.xyzx
          add r13.xyz, r10.xywx, r13.xyzx
          mul r13.xyz, r11.wwww, r13.xyzx
          add r11.xyz, r11.xyzx, r13.xzyx  // r11.x <- samplePoint.x; r11.y <- samplePoint.z; r11.z <- samplePoint.y

#line 354
          nop 
          mov r11.xy, r11.xyxx  // r11.x <- samplePoint.x; r11.y <- samplePoint.y

#line 51
          add r12.z, r0.x, cb1[0].z
          mul r12.z, r12.z, l(0.001000)
          mov r13.xy, -cb5[0].xyxx
          dp2 r12.w, r13.xyxx, r13.xyxx
          rsq r12.w, r12.w
          mul r13.xy, r12.wwww, r13.xyxx
          mul r12.zw, r12.zzzz, r13.xxxy
          mul r12.zw, r12.zzzw, cb5[1].xxxx  // r12.z <- offset.x; r12.w <- offset.y

#line 53
          add r13.x, cb5[0].z, cb5[0].z
          mul r13.y, cb5[2].y, cb5[2].y
          mov r13.y, -r13.y
          add r13.x, r13.y, r13.x
          sqrt r13.x, r13.x
          mul r13.x, r13.x, cb5[2].z  // r13.x <- horizonDistance

#line 54
          add r14.x, r11.x, r13.x
          mov r13.y, -r11.y
          add r14.y, r13.y, r13.x
          mul r13.x, r13.x, l(2.000000)
          div r13.xy, r14.xyxx, r13.xxxx
          add r12.zw, r12.zzzw, r13.xxxy
          sample_indexable(texture2d)(float,float,float,float) r12.zw, r12.zwzz, t2.ywxz, s6
          mov r12.zw, r12.zzzw  // r12.z <- <SampleWeatherData return value>.x; r12.w <- <SampleWeatherData return value>.z

#line 354
          mov r12.zw, r12.zzzw  // r12.z <- weatherData.x; r12.w <- weatherData.z

#line 360
          nop 
          mov r11.xyz, r11.xyzx  // r11.x <- samplePoint.x; r11.y <- samplePoint.z; r11.z <- samplePoint.y
          mov r12.zw, r12.zzzw  // r12.z <- weatherData.x; r12.w <- weatherData.z
          itof r13.x, r12.y  // r13.x <- mipLevel
          mov r13.y, l(0)  // r13.y <- cheapSample

#line 252
          nop 
          dp3 r13.z, r11.xyzx, r11.xyzx
          sqrt r13.z, r13.z  // r13.z <- position

#line 167
          mov r13.w, -cb5[0].z
          add r13.z, r13.w, r13.z
          mov r13.w, -cb5[0].z
          add r13.w, r13.w, cb5[0].w
          div r13.z, r13.z, r13.w  // r13.z <- heightFraction

#line 168
          max r13.z, r13.z, l(0.000000)
          min r13.z, r13.z, l(1.000000)  // r13.z <- <GetHeightFractionForPoint return value>

#line 252
          mov r13.z, r13.z  // r13.z <- heightFraction

#line 255
          add r13.w, r0.x, cb1[0].z
          mul r13.w, r13.w, l(20.000000)
          mov r14.xy, -cb5[0].xyxx
          dp2 r14.z, r14.xyxx, r14.xyxx
          rsq r14.z, r14.z
          mul r14.xy, r14.zzzz, r14.xyxx
          mul r14.xy, r13.wwww, r14.xyxx
          mul r14.xy, r14.xyxx, cb5[1].xxxx
          mul r14.xy, r14.xyxx, l(0.600000, 0.600000, 0.000000, 0.000000)
          add r14.xz, r11.xxyx, r14.xxyx  // r14.x <- samplePoint.x; r14.z <- samplePoint.z

#line 260
          nop 
          mov r14.xz, r14.xxzx  // r14.x <- samplePoint.x; r14.z <- samplePoint.z
          mov r14.y, r11.z  // r14.y <- samplePoint.y
          mov r13.w, l(-2.000000)
          add r13.w, r13.w, r13.x  // r13.w <- mipLevel

#line 41
          mul r15.xyz, r14.xyzx, cb5[2].wwww
          sample_l_indexable(texture3d)(float,float,float,float) r15.xyzw, r15.xyzx, t0.xyzw, s6, r13.w  // r15.x <- <SampleLowFrequencyNoises return value>.x; r15.y <- <SampleLowFrequencyNoises return value>.y; r15.z <- <SampleLowFrequencyNoises return value>.z; r15.w <- <SampleLowFrequencyNoises return value>.w

#line 260
          mov r15.xyzw, r15.xyzw  // r15.x <- lowFrequencyNoises.x; r15.y <- lowFrequencyNoises.y; r15.z <- lowFrequencyNoises.z; r15.w <- lowFrequencyNoises.w

#line 263
          mul r13.w, r15.y, l(0.625000)
          mul r14.w, r15.z, l(0.250000)
          add r13.w, r13.w, r14.w
          mul r14.w, r15.w, l(0.125000)
          add r13.w, r13.w, r14.w  // r13.w <- lowFrequencyFbm

#line 266
          nop 
          mov r15.x, r15.x  // r15.x <- originalValue; r15.x <- originalValue; r15.x <- originalValue
          mov r13.w, -r13.w
          add r13.w, r13.w, l(1.000000)
          mov r13.w, -r13.w  // r13.w <- originalMin; r13.w <- originalMin; r13.w <- originalMin
          mov r14.w, l(1.000000)  // r14.w <- originalMax; r14.w <- originalMax; r14.w <- originalMax
          mov r15.y, l(0)  // r15.y <- newMin; r15.y <- newMin; r15.y <- newMin
          mov r15.z, l(1.000000)  // r15.z <- newMax; r15.z <- newMax; r15.z <- newMax

#line 71
          mov r15.w, -r13.w
          add r15.x, r15.w, r15.x
          mov r13.w, -r13.w
          add r13.w, r13.w, r14.w
          div r13.w, r15.x, r13.w
          mov r14.w, -r15.y
          add r14.w, r14.w, r15.z
          mul r13.w, r13.w, r14.w
          add r13.w, r13.w, r15.y  // r13.w <- <Remap return value>; r13.w <- <Remap return value>; r13.w <- <Remap return value>

#line 266
          mov r13.w, r13.w  // r13.w <- baseCloud

#line 269
          mul r12.w, r12.w, cb5[2].x
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)  // r12.w <- cloudType

#line 270
          nop 
          mov r13.z, r13.z  // r13.z <- heightFraction
          mov r12.w, r12.w  // r12.w <- cloudType

#line 219
          mov r15.xyzw, l(0.020000,0.050000,0.090000,0.110000)  // r15.x <- stratusGradient.x; r15.y <- stratusGradient.y; r15.z <- stratusGradient.z; r15.w <- stratusGradient.w

#line 220
          mov r16.xyzw, l(0.020000,0.200000,0.480000,0.625000)  // r16.x <- stratocumulusGradient.x; r16.y <- stratocumulusGradient.y; r16.z <- stratocumulusGradient.z; r16.w <- stratocumulusGradient.w

#line 221
          mov r17.xyzw, l(0.010000,0.062500,0.780000,1.000000)

#line 223
          mul r14.w, r12.w, l(2.000000)
          max r14.w, r14.w, l(0.000000)
          min r14.w, r14.w, l(1.000000)
          mov r14.w, -r14.w
          add r14.w, r14.w, l(1.000000)  // r14.w <- stratus

#line 224
          mov r18.x, l(-0.500000)
          add r18.x, r12.w, r18.x
          mov r18.y, -r18.x
          max r18.x, r18.y, r18.x
          mul r18.x, r18.x, l(2.000000)
          mov r18.x, -r18.x
          add r18.x, r18.x, l(1.000000)  // r18.x <- stratocumulus

#line 225
          mov r18.y, l(-0.500000)
          add r12.w, r12.w, r18.y
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)
          mul r12.w, r12.w, l(2.000000)  // r12.w <- cumulus

#line 227
          mul r15.xyzw, r14.wwww, r15.xyzw
          mul r16.xyzw, r16.xyzw, r18.xxxx
          add r15.xyzw, r15.xyzw, r16.xyzw
          mul r16.xyzw, r12.wwww, r17.xyzw
          add r15.xyzw, r15.xyzw, r16.xyzw  // r15.x <- cloudGradient.x; r15.y <- cloudGradient.y; r15.z <- cloudGradient.z; r15.w <- cloudGradient.w

#line 228
          mov r12.w, -r15.x
          add r14.w, r12.w, r15.y
          add r12.w, r12.w, r13.z
          div r14.w, l(1.000000, 1.000000, 1.000000, 1.000000), r14.w
          mul r12.w, r12.w, r14.w
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)
          mul r14.w, r12.w, l(-2.000000)
          add r14.w, r14.w, l(3.000000)
          mul r12.w, r12.w, r12.w
          mul r12.w, r12.w, r14.w
          mov r14.w, -r15.z
          add r15.x, r14.w, r15.w
          add r14.w, r13.z, r14.w
          div r15.x, l(1.000000, 1.000000, 1.000000, 1.000000), r15.x
          mul r14.w, r14.w, r15.x
          max r14.w, r14.w, l(0.000000)
          min r14.w, r14.w, l(1.000000)
          mul r15.x, r14.w, l(-2.000000)
          add r15.x, r15.x, l(3.000000)
          mul r14.w, r14.w, r14.w
          mul r14.w, r14.w, r15.x
          mov r14.w, -r14.w
          add r12.w, r12.w, r14.w  // r12.w <- densityGradient

#line 230
          mov r12.w, r12.w  // r12.w <- <GetDensityHeightGradient return value>

#line 270
          mov r12.w, r12.w  // r12.w <- densityHeightGradient

#line 273
          mul r12.w, r12.w, r13.w  // r12.w <- baseCloud

#line 276
          mul r12.z, r12.z, cb5[1].z  // r12.z <- cloudCoverage

#line 279
          nop 
          mov r12.w, r12.w  // r12.w <- originalValue; r12.w <- originalValue; r12.w <- originalValue
          mov r13.w, -r12.z
          add r13.w, r13.w, l(1.000000)  // r13.w <- originalMin; r13.w <- originalMin; r13.w <- originalMin
          mov r14.w, l(1.000000)  // r14.w <- originalMax; r14.w <- originalMax; r14.w <- originalMax
          mov r15.x, l(0)  // r15.x <- newMin; r15.x <- newMin; r15.x <- newMin
          mov r15.y, l(1.000000)  // r15.y <- newMax; r15.y <- newMax; r15.y <- newMax

#line 71
          mov r15.z, -r13.w
          add r12.w, r12.w, r15.z
          mov r13.w, -r13.w
          add r13.w, r13.w, r14.w
          div r12.w, r12.w, r13.w
          mov r13.w, -r15.x
          add r13.w, r13.w, r15.y
          mul r12.w, r12.w, r13.w
          add r12.w, r12.w, r15.x  // r12.w <- <Remap return value>; r12.w <- <Remap return value>; r12.w <- <Remap return value>

#line 279
          mov r12.w, r12.w  // r12.w <- baseCloudWithCoverage

#line 280
          mul r12.z, r12.z, r12.w  // r12.z <- baseCloudWithCoverage

#line 282
          mov r12.z, r12.z  // r12.z <- finalCloud

#line 283
          not r12.w, r13.y
          lt r13.y, l(0.000000), r12.z
          and r12.w, r12.w, r13.y
          if_nz r12.w

#line 288
            ne r12.w, cb5[1].x, l(0.000000)
            if_nz r12.w

#line 290
              add r12.w, r0.x, cb1[0].z
              mov r13.yw, -cb5[0].xxxy
              dp2 r14.w, r13.ywyy, r13.ywyy
              rsq r14.w, r14.w
              mul r13.yw, r13.yyyw, r14.wwww
              mul r13.yw, r12.wwww, r13.yyyw
              mul r13.yw, r13.yyyw, l(0.000000, 40.000000, 0.000000, 40.000000)
              mov r13.yw, -r13.yyyw
              add r14.xz, r13.yywy, r14.xxzx

#line 291
              add r12.w, r0.x, cb1[0].z
              mul r12.w, r12.w, l(40.000000)
              mov r12.w, -r12.w
              add r14.y, r12.w, r14.y  // r14.y <- samplePoint.y

#line 292
            else   // Prior locations: r11.z <- samplePoint.y; r14.y <- samplePoint.y; r14.w <- originalMax; r14.w <- originalMax; r14.w <- originalMax
              mov r14.xy, r14.xyxx  // r14.y <- samplePoint.y
            endif 

#line 297
            mul r13.yw, r14.xxxy, l(0.000000, 0.000080, 0.000000, 0.000080)
            itof r12.w, l(0)
            sample_l_indexable(texture2d)(float,float,float,float) r13.yw, r13.ywyy, t3.zxwy, s6, r12.w  // r13.y <- curlNoise.x; r13.w <- curlNoise.y

#line 298
            mov r12.w, -r13.z
            add r12.w, r12.w, l(1.000000)
            mul r13.yw, r12.wwww, r13.yyyw
            add r14.xy, r13.ywyy, r14.xyxx

#line 302
            nop 
            mov r14.xy, r14.xyxx  // r14.x <- samplePoint.x; r14.y <- samplePoint.y
            mov r14.z, r14.z  // r14.z <- samplePoint.z
            mov r13.x, r13.x  // r13.x <- mipLevel

#line 46
            mul r14.xyz, r14.xyzx, cb5[3].xxxx
            sample_l_indexable(texture3d)(float,float,float,float) r13.xyw, r14.xyzx, t1.xywz, s6, r13.x  // r13.x <- <SampleHighFrequencyNoises return value>.x; r13.y <- <SampleHighFrequencyNoises return value>.y; r13.w <- <SampleHighFrequencyNoises return value>.z

#line 302
            mov r13.xyw, r13.xyxw  // r13.x <- highFrequencyNoises.x; r13.y <- highFrequencyNoises.y; r13.w <- highFrequencyNoises.z

#line 305
            mul r12.w, r13.x, l(0.625000)
            mul r13.x, r13.y, l(0.250000)
            add r12.w, r12.w, r13.x
            mul r13.x, r13.w, l(0.125000)
            add r12.w, r12.w, r13.x  // r12.w <- highFrequencyFbm

#line 311
            mov r13.x, -r12.w
            add r13.x, r13.x, l(1.000000)
            mul r13.y, r13.z, l(4.000000)
            max r13.y, r13.y, l(0.000000)
            min r13.y, r13.y, l(1.000000)
            mov r13.w, -r12.w
            add r13.x, r13.w, r13.x
            mul r13.x, r13.x, r13.y
            add r12.w, r12.w, r13.x  // r12.w <- highFrequencyNoiseModifier

#line 316
            nop 
            mov r12.z, r12.z  // r12.z <- originalValue; r12.z <- originalValue; r12.z <- originalValue
            mul r12.w, r12.w, l(0.200000)  // r12.w <- originalMin; r12.w <- originalMin; r12.w <- originalMin
            mov r13.x, l(1.000000)  // r13.x <- originalMax; r13.x <- originalMax; r13.x <- originalMax
            mov r13.y, l(0)  // r13.y <- newMin; r13.y <- newMin; r13.y <- newMin
            mov r13.w, l(1.000000)  // r13.w <- newMax; r13.w <- newMax; r13.w <- newMax

#line 71
            mov r14.x, -r12.w
            add r14.x, r12.z, r14.x
            mov r12.w, -r12.w
            add r12.w, r12.w, r13.x
            div r12.w, r14.x, r12.w
            mov r13.x, -r13.y
            add r13.x, r13.x, r13.w
            mul r12.w, r12.w, r13.x
            add r12.z, r12.w, r13.y  // r12.z <- <Remap return value>; r12.z <- <Remap return value>; r12.z <- <Remap return value>

#line 316
            mov r12.z, r12.z  // r12.z <- finalCloud

#line 320
          endif 

#line 325
          max r12.z, r12.z, l(0.000000)
          min r12.z, r12.z, l(1.000000)
          mov r12.w, -r13.z
          add r12.w, r12.w, l(1.000000)
          mul r12.w, r12.w, l(0.800000)
          add r12.w, r12.w, l(0.500000)
          log r12.z, r12.z
          mul r12.z, r12.z, r12.w
          exp r12.z, r12.z  // r12.z <- <SampleCloudDensity return value>

#line 360
          add r12.x, r12.z, r12.x

#line 362
          iadd r12.y, r12.y, l(1)

#line 353
          mov r13.xyz, x0[2].xyzx
          itof r12.z, r12.y
          mul r13.xyz, r12.zzzz, r13.xyzx
          add r13.xyz, r10.xywx, r13.xyzx
          mul r13.xyz, r11.wwww, r13.xyzx
          add r11.xyz, r11.xyzx, r13.xzyx  // r11.x <- samplePoint.x; r11.y <- samplePoint.z; r11.z <- samplePoint.y

#line 354
          nop 
          mov r11.xy, r11.xyxx  // r11.x <- samplePoint.x; r11.y <- samplePoint.y

#line 51
          add r12.z, r0.x, cb1[0].z
          mul r12.z, r12.z, l(0.001000)
          mov r13.xy, -cb5[0].xyxx
          dp2 r12.w, r13.xyxx, r13.xyxx
          rsq r12.w, r12.w
          mul r13.xy, r12.wwww, r13.xyxx
          mul r12.zw, r12.zzzz, r13.xxxy
          mul r12.zw, r12.zzzw, cb5[1].xxxx  // r12.z <- offset.x; r12.w <- offset.y

#line 53
          add r13.x, cb5[0].z, cb5[0].z
          mul r13.y, cb5[2].y, cb5[2].y
          mov r13.y, -r13.y
          add r13.x, r13.y, r13.x
          sqrt r13.x, r13.x
          mul r13.x, r13.x, cb5[2].z  // r13.x <- horizonDistance

#line 54
          add r14.x, r11.x, r13.x
          mov r13.y, -r11.y
          add r14.y, r13.y, r13.x
          mul r13.x, r13.x, l(2.000000)
          div r13.xy, r14.xyxx, r13.xxxx
          add r12.zw, r12.zzzw, r13.xxxy
          sample_indexable(texture2d)(float,float,float,float) r12.zw, r12.zwzz, t2.ywxz, s6
          mov r12.zw, r12.zzzw  // r12.z <- <SampleWeatherData return value>.x; r12.w <- <SampleWeatherData return value>.z

#line 354
          mov r12.zw, r12.zzzw  // r12.z <- weatherData.x; r12.w <- weatherData.z

#line 360
          nop 
          mov r11.xyz, r11.xyzx  // r11.x <- samplePoint.x; r11.y <- samplePoint.z; r11.z <- samplePoint.y
          mov r12.zw, r12.zzzw  // r12.z <- weatherData.x; r12.w <- weatherData.z
          itof r13.x, r12.y  // r13.x <- mipLevel
          mov r13.y, l(0)  // r13.y <- cheapSample

#line 252
          nop 
          dp3 r13.z, r11.xyzx, r11.xyzx
          sqrt r13.z, r13.z  // r13.z <- position

#line 167
          mov r13.w, -cb5[0].z
          add r13.z, r13.w, r13.z
          mov r13.w, -cb5[0].z
          add r13.w, r13.w, cb5[0].w
          div r13.z, r13.z, r13.w  // r13.z <- heightFraction

#line 168
          max r13.z, r13.z, l(0.000000)
          min r13.z, r13.z, l(1.000000)  // r13.z <- <GetHeightFractionForPoint return value>

#line 252
          mov r13.z, r13.z  // r13.z <- heightFraction

#line 255
          add r13.w, r0.x, cb1[0].z
          mul r13.w, r13.w, l(20.000000)
          mov r14.xy, -cb5[0].xyxx
          dp2 r14.z, r14.xyxx, r14.xyxx
          rsq r14.z, r14.z
          mul r14.xy, r14.zzzz, r14.xyxx
          mul r14.xy, r13.wwww, r14.xyxx
          mul r14.xy, r14.xyxx, cb5[1].xxxx
          mul r14.xy, r14.xyxx, l(0.600000, 0.600000, 0.000000, 0.000000)
          add r14.xz, r11.xxyx, r14.xxyx  // r14.x <- samplePoint.x; r14.z <- samplePoint.z

#line 260
          nop 
          mov r14.xz, r14.xxzx  // r14.x <- samplePoint.x; r14.z <- samplePoint.z
          mov r14.y, r11.z  // r14.y <- samplePoint.y
          mov r13.w, l(-2.000000)
          add r13.w, r13.w, r13.x  // r13.w <- mipLevel

#line 41
          mul r15.xyz, r14.xyzx, cb5[2].wwww
          sample_l_indexable(texture3d)(float,float,float,float) r15.xyzw, r15.xyzx, t0.xyzw, s6, r13.w  // r15.x <- <SampleLowFrequencyNoises return value>.x; r15.y <- <SampleLowFrequencyNoises return value>.y; r15.z <- <SampleLowFrequencyNoises return value>.z; r15.w <- <SampleLowFrequencyNoises return value>.w

#line 260
          mov r15.xyzw, r15.xyzw  // r15.x <- lowFrequencyNoises.x; r15.y <- lowFrequencyNoises.y; r15.z <- lowFrequencyNoises.z; r15.w <- lowFrequencyNoises.w

#line 263
          mul r13.w, r15.y, l(0.625000)
          mul r14.w, r15.z, l(0.250000)
          add r13.w, r13.w, r14.w
          mul r14.w, r15.w, l(0.125000)
          add r13.w, r13.w, r14.w  // r13.w <- lowFrequencyFbm

#line 266
          nop 
          mov r15.x, r15.x  // r15.x <- originalValue; r15.x <- originalValue; r15.x <- originalValue
          mov r13.w, -r13.w
          add r13.w, r13.w, l(1.000000)
          mov r13.w, -r13.w  // r13.w <- originalMin; r13.w <- originalMin; r13.w <- originalMin
          mov r14.w, l(1.000000)  // r14.w <- originalMax; r14.w <- originalMax; r14.w <- originalMax
          mov r15.y, l(0)  // r15.y <- newMin; r15.y <- newMin; r15.y <- newMin
          mov r15.z, l(1.000000)  // r15.z <- newMax; r15.z <- newMax; r15.z <- newMax

#line 71
          mov r15.w, -r13.w
          add r15.x, r15.w, r15.x
          mov r13.w, -r13.w
          add r13.w, r13.w, r14.w
          div r13.w, r15.x, r13.w
          mov r14.w, -r15.y
          add r14.w, r14.w, r15.z
          mul r13.w, r13.w, r14.w
          add r13.w, r13.w, r15.y  // r13.w <- <Remap return value>; r13.w <- <Remap return value>; r13.w <- <Remap return value>

#line 266
          mov r13.w, r13.w  // r13.w <- baseCloud

#line 269
          mul r12.w, r12.w, cb5[2].x
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)  // r12.w <- cloudType

#line 270
          nop 
          mov r13.z, r13.z  // r13.z <- heightFraction
          mov r12.w, r12.w  // r12.w <- cloudType

#line 219
          mov r15.xyzw, l(0.020000,0.050000,0.090000,0.110000)  // r15.x <- stratusGradient.x; r15.y <- stratusGradient.y; r15.z <- stratusGradient.z; r15.w <- stratusGradient.w

#line 220
          mov r16.xyzw, l(0.020000,0.200000,0.480000,0.625000)  // r16.x <- stratocumulusGradient.x; r16.y <- stratocumulusGradient.y; r16.z <- stratocumulusGradient.z; r16.w <- stratocumulusGradient.w

#line 221
          mov r17.xyzw, l(0.010000,0.062500,0.780000,1.000000)

#line 223
          mul r14.w, r12.w, l(2.000000)
          max r14.w, r14.w, l(0.000000)
          min r14.w, r14.w, l(1.000000)
          mov r14.w, -r14.w
          add r14.w, r14.w, l(1.000000)  // r14.w <- stratus

#line 224
          mov r18.x, l(-0.500000)
          add r18.x, r12.w, r18.x
          mov r18.y, -r18.x
          max r18.x, r18.y, r18.x
          mul r18.x, r18.x, l(2.000000)
          mov r18.x, -r18.x
          add r18.x, r18.x, l(1.000000)  // r18.x <- stratocumulus

#line 225
          mov r18.y, l(-0.500000)
          add r12.w, r12.w, r18.y
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)
          mul r12.w, r12.w, l(2.000000)  // r12.w <- cumulus

#line 227
          mul r15.xyzw, r14.wwww, r15.xyzw
          mul r16.xyzw, r16.xyzw, r18.xxxx
          add r15.xyzw, r15.xyzw, r16.xyzw
          mul r16.xyzw, r12.wwww, r17.xyzw
          add r15.xyzw, r15.xyzw, r16.xyzw  // r15.x <- cloudGradient.x; r15.y <- cloudGradient.y; r15.z <- cloudGradient.z; r15.w <- cloudGradient.w

#line 228
          mov r12.w, -r15.x
          add r14.w, r12.w, r15.y
          add r12.w, r12.w, r13.z
          div r14.w, l(1.000000, 1.000000, 1.000000, 1.000000), r14.w
          mul r12.w, r12.w, r14.w
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)
          mul r14.w, r12.w, l(-2.000000)
          add r14.w, r14.w, l(3.000000)
          mul r12.w, r12.w, r12.w
          mul r12.w, r12.w, r14.w
          mov r14.w, -r15.z
          add r15.x, r14.w, r15.w
          add r14.w, r13.z, r14.w
          div r15.x, l(1.000000, 1.000000, 1.000000, 1.000000), r15.x
          mul r14.w, r14.w, r15.x
          max r14.w, r14.w, l(0.000000)
          min r14.w, r14.w, l(1.000000)
          mul r15.x, r14.w, l(-2.000000)
          add r15.x, r15.x, l(3.000000)
          mul r14.w, r14.w, r14.w
          mul r14.w, r14.w, r15.x
          mov r14.w, -r14.w
          add r12.w, r12.w, r14.w  // r12.w <- densityGradient

#line 230
          mov r12.w, r12.w  // r12.w <- <GetDensityHeightGradient return value>

#line 270
          mov r12.w, r12.w  // r12.w <- densityHeightGradient

#line 273
          mul r12.w, r12.w, r13.w  // r12.w <- baseCloud

#line 276
          mul r12.z, r12.z, cb5[1].z  // r12.z <- cloudCoverage

#line 279
          nop 
          mov r12.w, r12.w  // r12.w <- originalValue; r12.w <- originalValue; r12.w <- originalValue
          mov r13.w, -r12.z
          add r13.w, r13.w, l(1.000000)  // r13.w <- originalMin; r13.w <- originalMin; r13.w <- originalMin
          mov r14.w, l(1.000000)  // r14.w <- originalMax; r14.w <- originalMax; r14.w <- originalMax
          mov r15.x, l(0)  // r15.x <- newMin; r15.x <- newMin; r15.x <- newMin
          mov r15.y, l(1.000000)  // r15.y <- newMax; r15.y <- newMax; r15.y <- newMax

#line 71
          mov r15.z, -r13.w
          add r12.w, r12.w, r15.z
          mov r13.w, -r13.w
          add r13.w, r13.w, r14.w
          div r12.w, r12.w, r13.w
          mov r13.w, -r15.x
          add r13.w, r13.w, r15.y
          mul r12.w, r12.w, r13.w
          add r12.w, r12.w, r15.x  // r12.w <- <Remap return value>; r12.w <- <Remap return value>; r12.w <- <Remap return value>

#line 279
          mov r12.w, r12.w  // r12.w <- baseCloudWithCoverage

#line 280
          mul r12.z, r12.z, r12.w  // r12.z <- baseCloudWithCoverage

#line 282
          mov r12.z, r12.z  // r12.z <- finalCloud

#line 283
          not r12.w, r13.y
          lt r13.y, l(0.000000), r12.z
          and r12.w, r12.w, r13.y
          if_nz r12.w

#line 288
            ne r12.w, cb5[1].x, l(0.000000)
            if_nz r12.w

#line 290
              add r12.w, r0.x, cb1[0].z
              mov r13.yw, -cb5[0].xxxy
              dp2 r14.w, r13.ywyy, r13.ywyy
              rsq r14.w, r14.w
              mul r13.yw, r13.yyyw, r14.wwww
              mul r13.yw, r12.wwww, r13.yyyw
              mul r13.yw, r13.yyyw, l(0.000000, 40.000000, 0.000000, 40.000000)
              mov r13.yw, -r13.yyyw
              add r14.xz, r13.yywy, r14.xxzx

#line 291
              add r12.w, r0.x, cb1[0].z
              mul r12.w, r12.w, l(40.000000)
              mov r12.w, -r12.w
              add r14.y, r12.w, r14.y  // r14.y <- samplePoint.y

#line 292
            else   // Prior locations: r11.z <- samplePoint.y; r14.y <- samplePoint.y; r14.w <- originalMax; r14.w <- originalMax; r14.w <- originalMax
              mov r14.xy, r14.xyxx  // r14.y <- samplePoint.y
            endif 

#line 297
            mul r13.yw, r14.xxxy, l(0.000000, 0.000080, 0.000000, 0.000080)
            itof r12.w, l(0)
            sample_l_indexable(texture2d)(float,float,float,float) r13.yw, r13.ywyy, t3.zxwy, s6, r12.w  // r13.y <- curlNoise.x; r13.w <- curlNoise.y

#line 298
            mov r12.w, -r13.z
            add r12.w, r12.w, l(1.000000)
            mul r13.yw, r12.wwww, r13.yyyw
            add r14.xy, r13.ywyy, r14.xyxx

#line 302
            nop 
            mov r14.xy, r14.xyxx  // r14.x <- samplePoint.x; r14.y <- samplePoint.y
            mov r14.z, r14.z  // r14.z <- samplePoint.z
            mov r13.x, r13.x  // r13.x <- mipLevel

#line 46
            mul r14.xyz, r14.xyzx, cb5[3].xxxx
            sample_l_indexable(texture3d)(float,float,float,float) r13.xyw, r14.xyzx, t1.xywz, s6, r13.x  // r13.x <- <SampleHighFrequencyNoises return value>.x; r13.y <- <SampleHighFrequencyNoises return value>.y; r13.w <- <SampleHighFrequencyNoises return value>.z

#line 302
            mov r13.xyw, r13.xyxw  // r13.x <- highFrequencyNoises.x; r13.y <- highFrequencyNoises.y; r13.w <- highFrequencyNoises.z

#line 305
            mul r12.w, r13.x, l(0.625000)
            mul r13.x, r13.y, l(0.250000)
            add r12.w, r12.w, r13.x
            mul r13.x, r13.w, l(0.125000)
            add r12.w, r12.w, r13.x  // r12.w <- highFrequencyFbm

#line 311
            mov r13.x, -r12.w
            add r13.x, r13.x, l(1.000000)
            mul r13.y, r13.z, l(4.000000)
            max r13.y, r13.y, l(0.000000)
            min r13.y, r13.y, l(1.000000)
            mov r13.w, -r12.w
            add r13.x, r13.w, r13.x
            mul r13.x, r13.x, r13.y
            add r12.w, r12.w, r13.x  // r12.w <- highFrequencyNoiseModifier

#line 316
            nop 
            mov r12.z, r12.z  // r12.z <- originalValue; r12.z <- originalValue; r12.z <- originalValue
            mul r12.w, r12.w, l(0.200000)  // r12.w <- originalMin; r12.w <- originalMin; r12.w <- originalMin
            mov r13.x, l(1.000000)  // r13.x <- originalMax; r13.x <- originalMax; r13.x <- originalMax
            mov r13.y, l(0)  // r13.y <- newMin; r13.y <- newMin; r13.y <- newMin
            mov r13.w, l(1.000000)  // r13.w <- newMax; r13.w <- newMax; r13.w <- newMax

#line 71
            mov r14.x, -r12.w
            add r14.x, r12.z, r14.x
            mov r12.w, -r12.w
            add r12.w, r12.w, r13.x
            div r12.w, r14.x, r12.w
            mov r13.x, -r13.y
            add r13.x, r13.x, r13.w
            mul r12.w, r12.w, r13.x
            add r12.z, r12.w, r13.y  // r12.z <- <Remap return value>; r12.z <- <Remap return value>; r12.z <- <Remap return value>

#line 316
            mov r12.z, r12.z  // r12.z <- finalCloud

#line 320
          endif 

#line 325
          max r12.z, r12.z, l(0.000000)
          min r12.z, r12.z, l(1.000000)
          mov r12.w, -r13.z
          add r12.w, r12.w, l(1.000000)
          mul r12.w, r12.w, l(0.800000)
          add r12.w, r12.w, l(0.500000)
          log r12.z, r12.z
          mul r12.z, r12.z, r12.w
          exp r12.z, r12.z  // r12.z <- <SampleCloudDensity return value>

#line 360
          add r12.x, r12.z, r12.x

#line 362
          iadd r12.y, r12.y, l(1)

#line 353
          mov r13.xyz, x0[3].xyzx
          itof r12.z, r12.y
          mul r13.xyz, r12.zzzz, r13.xyzx
          add r13.xyz, r10.xywx, r13.xyzx
          mul r13.xyz, r11.wwww, r13.xyzx
          add r11.xyz, r11.xyzx, r13.xzyx  // r11.x <- samplePoint.x; r11.y <- samplePoint.z; r11.z <- samplePoint.y

#line 354
          nop 
          mov r11.xy, r11.xyxx  // r11.x <- samplePoint.x; r11.y <- samplePoint.y

#line 51
          add r12.z, r0.x, cb1[0].z
          mul r12.z, r12.z, l(0.001000)
          mov r13.xy, -cb5[0].xyxx
          dp2 r12.w, r13.xyxx, r13.xyxx
          rsq r12.w, r12.w
          mul r13.xy, r12.wwww, r13.xyxx
          mul r12.zw, r12.zzzz, r13.xxxy
          mul r12.zw, r12.zzzw, cb5[1].xxxx  // r12.z <- offset.x; r12.w <- offset.y

#line 53
          add r13.x, cb5[0].z, cb5[0].z
          mul r13.y, cb5[2].y, cb5[2].y
          mov r13.y, -r13.y
          add r13.x, r13.y, r13.x
          sqrt r13.x, r13.x
          mul r13.x, r13.x, cb5[2].z  // r13.x <- horizonDistance

#line 54
          add r14.x, r11.x, r13.x
          mov r13.y, -r11.y
          add r14.y, r13.y, r13.x
          mul r13.x, r13.x, l(2.000000)
          div r13.xy, r14.xyxx, r13.xxxx
          add r12.zw, r12.zzzw, r13.xxxy
          sample_indexable(texture2d)(float,float,float,float) r12.zw, r12.zwzz, t2.ywxz, s6
          mov r12.zw, r12.zzzw  // r12.z <- <SampleWeatherData return value>.x; r12.w <- <SampleWeatherData return value>.z

#line 354
          mov r12.zw, r12.zzzw  // r12.z <- weatherData.x; r12.w <- weatherData.z

#line 360
          nop 
          mov r11.xyz, r11.xyzx  // r11.x <- samplePoint.x; r11.y <- samplePoint.z; r11.z <- samplePoint.y
          mov r12.zw, r12.zzzw  // r12.z <- weatherData.x; r12.w <- weatherData.z
          itof r13.x, r12.y  // r13.x <- mipLevel
          mov r13.y, l(0)  // r13.y <- cheapSample

#line 252
          nop 
          dp3 r13.z, r11.xyzx, r11.xyzx
          sqrt r13.z, r13.z  // r13.z <- position

#line 167
          mov r13.w, -cb5[0].z
          add r13.z, r13.w, r13.z
          mov r13.w, -cb5[0].z
          add r13.w, r13.w, cb5[0].w
          div r13.z, r13.z, r13.w  // r13.z <- heightFraction

#line 168
          max r13.z, r13.z, l(0.000000)
          min r13.z, r13.z, l(1.000000)  // r13.z <- <GetHeightFractionForPoint return value>

#line 252
          mov r13.z, r13.z  // r13.z <- heightFraction

#line 255
          add r13.w, r0.x, cb1[0].z
          mul r13.w, r13.w, l(20.000000)
          mov r14.xy, -cb5[0].xyxx
          dp2 r14.z, r14.xyxx, r14.xyxx
          rsq r14.z, r14.z
          mul r14.xy, r14.zzzz, r14.xyxx
          mul r14.xy, r13.wwww, r14.xyxx
          mul r14.xy, r14.xyxx, cb5[1].xxxx
          mul r14.xy, r14.xyxx, l(0.600000, 0.600000, 0.000000, 0.000000)
          add r14.xz, r11.xxyx, r14.xxyx  // r14.x <- samplePoint.x; r14.z <- samplePoint.z

#line 260
          nop 
          mov r14.xz, r14.xxzx  // r14.x <- samplePoint.x; r14.z <- samplePoint.z
          mov r14.y, r11.z  // r14.y <- samplePoint.y
          mov r13.w, l(-2.000000)
          add r13.w, r13.w, r13.x  // r13.w <- mipLevel

#line 41
          mul r15.xyz, r14.xyzx, cb5[2].wwww
          sample_l_indexable(texture3d)(float,float,float,float) r15.xyzw, r15.xyzx, t0.xyzw, s6, r13.w  // r15.x <- <SampleLowFrequencyNoises return value>.x; r15.y <- <SampleLowFrequencyNoises return value>.y; r15.z <- <SampleLowFrequencyNoises return value>.z; r15.w <- <SampleLowFrequencyNoises return value>.w

#line 260
          mov r15.xyzw, r15.xyzw  // r15.x <- lowFrequencyNoises.x; r15.y <- lowFrequencyNoises.y; r15.z <- lowFrequencyNoises.z; r15.w <- lowFrequencyNoises.w

#line 263
          mul r13.w, r15.y, l(0.625000)
          mul r14.w, r15.z, l(0.250000)
          add r13.w, r13.w, r14.w
          mul r14.w, r15.w, l(0.125000)
          add r13.w, r13.w, r14.w  // r13.w <- lowFrequencyFbm

#line 266
          nop 
          mov r15.x, r15.x  // r15.x <- originalValue; r15.x <- originalValue; r15.x <- originalValue
          mov r13.w, -r13.w
          add r13.w, r13.w, l(1.000000)
          mov r13.w, -r13.w  // r13.w <- originalMin; r13.w <- originalMin; r13.w <- originalMin
          mov r14.w, l(1.000000)  // r14.w <- originalMax; r14.w <- originalMax; r14.w <- originalMax
          mov r15.y, l(0)  // r15.y <- newMin; r15.y <- newMin; r15.y <- newMin
          mov r15.z, l(1.000000)  // r15.z <- newMax; r15.z <- newMax; r15.z <- newMax

#line 71
          mov r15.w, -r13.w
          add r15.x, r15.w, r15.x
          mov r13.w, -r13.w
          add r13.w, r13.w, r14.w
          div r13.w, r15.x, r13.w
          mov r14.w, -r15.y
          add r14.w, r14.w, r15.z
          mul r13.w, r13.w, r14.w
          add r13.w, r13.w, r15.y  // r13.w <- <Remap return value>; r13.w <- <Remap return value>; r13.w <- <Remap return value>

#line 266
          mov r13.w, r13.w  // r13.w <- baseCloud

#line 269
          mul r12.w, r12.w, cb5[2].x
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)  // r12.w <- cloudType

#line 270
          nop 
          mov r13.z, r13.z  // r13.z <- heightFraction
          mov r12.w, r12.w  // r12.w <- cloudType

#line 219
          mov r15.xyzw, l(0.020000,0.050000,0.090000,0.110000)  // r15.x <- stratusGradient.x; r15.y <- stratusGradient.y; r15.z <- stratusGradient.z; r15.w <- stratusGradient.w

#line 220
          mov r16.xyzw, l(0.020000,0.200000,0.480000,0.625000)  // r16.x <- stratocumulusGradient.x; r16.y <- stratocumulusGradient.y; r16.z <- stratocumulusGradient.z; r16.w <- stratocumulusGradient.w

#line 221
          mov r17.xyzw, l(0.010000,0.062500,0.780000,1.000000)

#line 223
          mul r14.w, r12.w, l(2.000000)
          max r14.w, r14.w, l(0.000000)
          min r14.w, r14.w, l(1.000000)
          mov r14.w, -r14.w
          add r14.w, r14.w, l(1.000000)  // r14.w <- stratus

#line 224
          mov r18.x, l(-0.500000)
          add r18.x, r12.w, r18.x
          mov r18.y, -r18.x
          max r18.x, r18.y, r18.x
          mul r18.x, r18.x, l(2.000000)
          mov r18.x, -r18.x
          add r18.x, r18.x, l(1.000000)  // r18.x <- stratocumulus

#line 225
          mov r18.y, l(-0.500000)
          add r12.w, r12.w, r18.y
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)
          mul r12.w, r12.w, l(2.000000)  // r12.w <- cumulus

#line 227
          mul r15.xyzw, r14.wwww, r15.xyzw
          mul r16.xyzw, r16.xyzw, r18.xxxx
          add r15.xyzw, r15.xyzw, r16.xyzw
          mul r16.xyzw, r12.wwww, r17.xyzw
          add r15.xyzw, r15.xyzw, r16.xyzw  // r15.x <- cloudGradient.x; r15.y <- cloudGradient.y; r15.z <- cloudGradient.z; r15.w <- cloudGradient.w

#line 228
          mov r12.w, -r15.x
          add r14.w, r12.w, r15.y
          add r12.w, r12.w, r13.z
          div r14.w, l(1.000000, 1.000000, 1.000000, 1.000000), r14.w
          mul r12.w, r12.w, r14.w
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)
          mul r14.w, r12.w, l(-2.000000)
          add r14.w, r14.w, l(3.000000)
          mul r12.w, r12.w, r12.w
          mul r12.w, r12.w, r14.w
          mov r14.w, -r15.z
          add r15.x, r14.w, r15.w
          add r14.w, r13.z, r14.w
          div r15.x, l(1.000000, 1.000000, 1.000000, 1.000000), r15.x
          mul r14.w, r14.w, r15.x
          max r14.w, r14.w, l(0.000000)
          min r14.w, r14.w, l(1.000000)
          mul r15.x, r14.w, l(-2.000000)
          add r15.x, r15.x, l(3.000000)
          mul r14.w, r14.w, r14.w
          mul r14.w, r14.w, r15.x
          mov r14.w, -r14.w
          add r12.w, r12.w, r14.w  // r12.w <- densityGradient

#line 230
          mov r12.w, r12.w  // r12.w <- <GetDensityHeightGradient return value>

#line 270
          mov r12.w, r12.w  // r12.w <- densityHeightGradient

#line 273
          mul r12.w, r12.w, r13.w  // r12.w <- baseCloud

#line 276
          mul r12.z, r12.z, cb5[1].z  // r12.z <- cloudCoverage

#line 279
          nop 
          mov r12.w, r12.w  // r12.w <- originalValue; r12.w <- originalValue; r12.w <- originalValue
          mov r13.w, -r12.z
          add r13.w, r13.w, l(1.000000)  // r13.w <- originalMin; r13.w <- originalMin; r13.w <- originalMin
          mov r14.w, l(1.000000)  // r14.w <- originalMax; r14.w <- originalMax; r14.w <- originalMax
          mov r15.x, l(0)  // r15.x <- newMin; r15.x <- newMin; r15.x <- newMin
          mov r15.y, l(1.000000)  // r15.y <- newMax; r15.y <- newMax; r15.y <- newMax

#line 71
          mov r15.z, -r13.w
          add r12.w, r12.w, r15.z
          mov r13.w, -r13.w
          add r13.w, r13.w, r14.w
          div r12.w, r12.w, r13.w
          mov r13.w, -r15.x
          add r13.w, r13.w, r15.y
          mul r12.w, r12.w, r13.w
          add r12.w, r12.w, r15.x  // r12.w <- <Remap return value>; r12.w <- <Remap return value>; r12.w <- <Remap return value>

#line 279
          mov r12.w, r12.w  // r12.w <- baseCloudWithCoverage

#line 280
          mul r12.z, r12.z, r12.w  // r12.z <- baseCloudWithCoverage

#line 282
          mov r12.z, r12.z  // r12.z <- finalCloud

#line 283
          not r12.w, r13.y
          lt r13.y, l(0.000000), r12.z
          and r12.w, r12.w, r13.y
          if_nz r12.w

#line 288
            ne r12.w, cb5[1].x, l(0.000000)
            if_nz r12.w

#line 290
              add r12.w, r0.x, cb1[0].z
              mov r13.yw, -cb5[0].xxxy
              dp2 r14.w, r13.ywyy, r13.ywyy
              rsq r14.w, r14.w
              mul r13.yw, r13.yyyw, r14.wwww
              mul r13.yw, r12.wwww, r13.yyyw
              mul r13.yw, r13.yyyw, l(0.000000, 40.000000, 0.000000, 40.000000)
              mov r13.yw, -r13.yyyw
              add r14.xz, r13.yywy, r14.xxzx

#line 291
              add r12.w, r0.x, cb1[0].z
              mul r12.w, r12.w, l(40.000000)
              mov r12.w, -r12.w
              add r14.y, r12.w, r14.y  // r14.y <- samplePoint.y

#line 292
            else   // Prior locations: r11.z <- samplePoint.y; r14.y <- samplePoint.y; r14.w <- originalMax; r14.w <- originalMax; r14.w <- originalMax
              mov r14.xy, r14.xyxx  // r14.y <- samplePoint.y
            endif 

#line 297
            mul r13.yw, r14.xxxy, l(0.000000, 0.000080, 0.000000, 0.000080)
            itof r12.w, l(0)
            sample_l_indexable(texture2d)(float,float,float,float) r13.yw, r13.ywyy, t3.zxwy, s6, r12.w  // r13.y <- curlNoise.x; r13.w <- curlNoise.y

#line 298
            mov r12.w, -r13.z
            add r12.w, r12.w, l(1.000000)
            mul r13.yw, r12.wwww, r13.yyyw
            add r14.xy, r13.ywyy, r14.xyxx

#line 302
            nop 
            mov r14.xy, r14.xyxx  // r14.x <- samplePoint.x; r14.y <- samplePoint.y
            mov r14.z, r14.z  // r14.z <- samplePoint.z
            mov r13.x, r13.x  // r13.x <- mipLevel

#line 46
            mul r14.xyz, r14.xyzx, cb5[3].xxxx
            sample_l_indexable(texture3d)(float,float,float,float) r13.xyw, r14.xyzx, t1.xywz, s6, r13.x  // r13.x <- <SampleHighFrequencyNoises return value>.x; r13.y <- <SampleHighFrequencyNoises return value>.y; r13.w <- <SampleHighFrequencyNoises return value>.z

#line 302
            mov r13.xyw, r13.xyxw  // r13.x <- highFrequencyNoises.x; r13.y <- highFrequencyNoises.y; r13.w <- highFrequencyNoises.z

#line 305
            mul r12.w, r13.x, l(0.625000)
            mul r13.x, r13.y, l(0.250000)
            add r12.w, r12.w, r13.x
            mul r13.x, r13.w, l(0.125000)
            add r12.w, r12.w, r13.x  // r12.w <- highFrequencyFbm

#line 311
            mov r13.x, -r12.w
            add r13.x, r13.x, l(1.000000)
            mul r13.y, r13.z, l(4.000000)
            max r13.y, r13.y, l(0.000000)
            min r13.y, r13.y, l(1.000000)
            mov r13.w, -r12.w
            add r13.x, r13.w, r13.x
            mul r13.x, r13.x, r13.y
            add r12.w, r12.w, r13.x  // r12.w <- highFrequencyNoiseModifier

#line 316
            nop 
            mov r12.z, r12.z  // r12.z <- originalValue; r12.z <- originalValue; r12.z <- originalValue
            mul r12.w, r12.w, l(0.200000)  // r12.w <- originalMin; r12.w <- originalMin; r12.w <- originalMin
            mov r13.x, l(1.000000)  // r13.x <- originalMax; r13.x <- originalMax; r13.x <- originalMax
            mov r13.y, l(0)  // r13.y <- newMin; r13.y <- newMin; r13.y <- newMin
            mov r13.w, l(1.000000)  // r13.w <- newMax; r13.w <- newMax; r13.w <- newMax

#line 71
            mov r14.x, -r12.w
            add r14.x, r12.z, r14.x
            mov r12.w, -r12.w
            add r12.w, r12.w, r13.x
            div r12.w, r14.x, r12.w
            mov r13.x, -r13.y
            add r13.x, r13.x, r13.w
            mul r12.w, r12.w, r13.x
            add r12.z, r12.w, r13.y  // r12.z <- <Remap return value>; r12.z <- <Remap return value>; r12.z <- <Remap return value>

#line 316
            mov r12.z, r12.z  // r12.z <- finalCloud

#line 320
          endif 

#line 325
          max r12.z, r12.z, l(0.000000)
          min r12.z, r12.z, l(1.000000)
          mov r12.w, -r13.z
          add r12.w, r12.w, l(1.000000)
          mul r12.w, r12.w, l(0.800000)
          add r12.w, r12.w, l(0.500000)
          log r12.z, r12.z
          mul r12.z, r12.z, r12.w
          exp r12.z, r12.z  // r12.z <- <SampleCloudDensity return value>

#line 360
          add r12.x, r12.z, r12.x

#line 362
          iadd r12.y, r12.y, l(1)

#line 353
          mov r13.xyz, x0[4].xyzx
          itof r12.z, r12.y
          mul r13.xyz, r12.zzzz, r13.xyzx
          add r13.xyz, r10.xywx, r13.xyzx
          mul r13.xyz, r11.wwww, r13.xyzx
          add r11.xyz, r11.xyzx, r13.xzyx  // r11.x <- samplePoint.x; r11.y <- samplePoint.z; r11.z <- samplePoint.y

#line 354
          nop 
          mov r11.xy, r11.xyxx  // r11.x <- samplePoint.x; r11.y <- samplePoint.y

#line 51
          add r12.z, r0.x, cb1[0].z
          mul r12.z, r12.z, l(0.001000)
          mov r13.xy, -cb5[0].xyxx
          dp2 r12.w, r13.xyxx, r13.xyxx
          rsq r12.w, r12.w
          mul r13.xy, r12.wwww, r13.xyxx
          mul r12.zw, r12.zzzz, r13.xxxy
          mul r12.zw, r12.zzzw, cb5[1].xxxx  // r12.z <- offset.x; r12.w <- offset.y

#line 53
          add r13.x, cb5[0].z, cb5[0].z
          mul r13.y, cb5[2].y, cb5[2].y
          mov r13.y, -r13.y
          add r13.x, r13.y, r13.x
          sqrt r13.x, r13.x
          mul r13.x, r13.x, cb5[2].z  // r13.x <- horizonDistance

#line 54
          add r14.x, r11.x, r13.x
          mov r13.y, -r11.y
          add r14.y, r13.y, r13.x
          mul r13.x, r13.x, l(2.000000)
          div r13.xy, r14.xyxx, r13.xxxx
          add r12.zw, r12.zzzw, r13.xxxy
          sample_indexable(texture2d)(float,float,float,float) r12.zw, r12.zwzz, t2.ywxz, s6
          mov r12.zw, r12.zzzw  // r12.z <- <SampleWeatherData return value>.x; r12.w <- <SampleWeatherData return value>.z

#line 354
          mov r12.zw, r12.zzzw  // r12.z <- weatherData.x; r12.w <- weatherData.z

#line 360
          nop 
          mov r11.xyz, r11.xyzx  // r11.x <- samplePoint.x; r11.y <- samplePoint.z; r11.z <- samplePoint.y
          mov r12.zw, r12.zzzw  // r12.z <- weatherData.x; r12.w <- weatherData.z
          itof r13.x, r12.y  // r13.x <- mipLevel
          mov r13.y, l(0)  // r13.y <- cheapSample

#line 252
          nop 
          dp3 r13.z, r11.xyzx, r11.xyzx
          sqrt r13.z, r13.z  // r13.z <- position

#line 167
          mov r13.w, -cb5[0].z
          add r13.z, r13.w, r13.z
          mov r13.w, -cb5[0].z
          add r13.w, r13.w, cb5[0].w
          div r13.z, r13.z, r13.w  // r13.z <- heightFraction

#line 168
          max r13.z, r13.z, l(0.000000)
          min r13.z, r13.z, l(1.000000)  // r13.z <- <GetHeightFractionForPoint return value>

#line 252
          mov r13.z, r13.z  // r13.z <- heightFraction

#line 255
          add r13.w, r0.x, cb1[0].z
          mul r13.w, r13.w, l(20.000000)
          mov r14.xy, -cb5[0].xyxx
          dp2 r14.z, r14.xyxx, r14.xyxx
          rsq r14.z, r14.z
          mul r14.xy, r14.zzzz, r14.xyxx
          mul r14.xy, r13.wwww, r14.xyxx
          mul r14.xy, r14.xyxx, cb5[1].xxxx
          mul r14.xy, r14.xyxx, l(0.600000, 0.600000, 0.000000, 0.000000)
          add r14.xz, r11.xxyx, r14.xxyx  // r14.x <- samplePoint.x; r14.z <- samplePoint.z

#line 260
          nop 
          mov r14.xz, r14.xxzx  // r14.x <- samplePoint.x; r14.z <- samplePoint.z
          mov r14.y, r11.z  // r14.y <- samplePoint.y
          mov r13.w, l(-2.000000)
          add r13.w, r13.w, r13.x  // r13.w <- mipLevel

#line 41
          mul r15.xyz, r14.xyzx, cb5[2].wwww
          sample_l_indexable(texture3d)(float,float,float,float) r15.xyzw, r15.xyzx, t0.xyzw, s6, r13.w  // r15.x <- <SampleLowFrequencyNoises return value>.x; r15.y <- <SampleLowFrequencyNoises return value>.y; r15.z <- <SampleLowFrequencyNoises return value>.z; r15.w <- <SampleLowFrequencyNoises return value>.w

#line 260
          mov r15.xyzw, r15.xyzw  // r15.x <- lowFrequencyNoises.x; r15.y <- lowFrequencyNoises.y; r15.z <- lowFrequencyNoises.z; r15.w <- lowFrequencyNoises.w

#line 263
          mul r13.w, r15.y, l(0.625000)
          mul r14.w, r15.z, l(0.250000)
          add r13.w, r13.w, r14.w
          mul r14.w, r15.w, l(0.125000)
          add r13.w, r13.w, r14.w  // r13.w <- lowFrequencyFbm

#line 266
          nop 
          mov r15.x, r15.x  // r15.x <- originalValue; r15.x <- originalValue; r15.x <- originalValue
          mov r13.w, -r13.w
          add r13.w, r13.w, l(1.000000)
          mov r13.w, -r13.w  // r13.w <- originalMin; r13.w <- originalMin; r13.w <- originalMin
          mov r14.w, l(1.000000)  // r14.w <- originalMax; r14.w <- originalMax; r14.w <- originalMax
          mov r15.y, l(0)  // r15.y <- newMin; r15.y <- newMin; r15.y <- newMin
          mov r15.z, l(1.000000)  // r15.z <- newMax; r15.z <- newMax; r15.z <- newMax

#line 71
          mov r15.w, -r13.w
          add r15.x, r15.w, r15.x
          mov r13.w, -r13.w
          add r13.w, r13.w, r14.w
          div r13.w, r15.x, r13.w
          mov r14.w, -r15.y
          add r14.w, r14.w, r15.z
          mul r13.w, r13.w, r14.w
          add r13.w, r13.w, r15.y  // r13.w <- <Remap return value>; r13.w <- <Remap return value>; r13.w <- <Remap return value>

#line 266
          mov r13.w, r13.w  // r13.w <- baseCloud

#line 269
          mul r12.w, r12.w, cb5[2].x
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)  // r12.w <- cloudType

#line 270
          nop 
          mov r13.z, r13.z  // r13.z <- heightFraction
          mov r12.w, r12.w  // r12.w <- cloudType

#line 219
          mov r15.xyzw, l(0.020000,0.050000,0.090000,0.110000)  // r15.x <- stratusGradient.x; r15.y <- stratusGradient.y; r15.z <- stratusGradient.z; r15.w <- stratusGradient.w

#line 220
          mov r16.xyzw, l(0.020000,0.200000,0.480000,0.625000)  // r16.x <- stratocumulusGradient.x; r16.y <- stratocumulusGradient.y; r16.z <- stratocumulusGradient.z; r16.w <- stratocumulusGradient.w

#line 221
          mov r17.xyzw, l(0.010000,0.062500,0.780000,1.000000)

#line 223
          mul r14.w, r12.w, l(2.000000)
          max r14.w, r14.w, l(0.000000)
          min r14.w, r14.w, l(1.000000)
          mov r14.w, -r14.w
          add r14.w, r14.w, l(1.000000)  // r14.w <- stratus

#line 224
          mov r18.x, l(-0.500000)
          add r18.x, r12.w, r18.x
          mov r18.y, -r18.x
          max r18.x, r18.y, r18.x
          mul r18.x, r18.x, l(2.000000)
          mov r18.x, -r18.x
          add r18.x, r18.x, l(1.000000)  // r18.x <- stratocumulus

#line 225
          mov r18.y, l(-0.500000)
          add r12.w, r12.w, r18.y
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)
          mul r12.w, r12.w, l(2.000000)  // r12.w <- cumulus

#line 227
          mul r15.xyzw, r14.wwww, r15.xyzw
          mul r16.xyzw, r16.xyzw, r18.xxxx
          add r15.xyzw, r15.xyzw, r16.xyzw
          mul r16.xyzw, r12.wwww, r17.xyzw
          add r15.xyzw, r15.xyzw, r16.xyzw  // r15.x <- cloudGradient.x; r15.y <- cloudGradient.y; r15.z <- cloudGradient.z; r15.w <- cloudGradient.w

#line 228
          mov r12.w, -r15.x
          add r14.w, r12.w, r15.y
          add r12.w, r12.w, r13.z
          div r14.w, l(1.000000, 1.000000, 1.000000, 1.000000), r14.w
          mul r12.w, r12.w, r14.w
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)
          mul r14.w, r12.w, l(-2.000000)
          add r14.w, r14.w, l(3.000000)
          mul r12.w, r12.w, r12.w
          mul r12.w, r12.w, r14.w
          mov r14.w, -r15.z
          add r15.x, r14.w, r15.w
          add r14.w, r13.z, r14.w
          div r15.x, l(1.000000, 1.000000, 1.000000, 1.000000), r15.x
          mul r14.w, r14.w, r15.x
          max r14.w, r14.w, l(0.000000)
          min r14.w, r14.w, l(1.000000)
          mul r15.x, r14.w, l(-2.000000)
          add r15.x, r15.x, l(3.000000)
          mul r14.w, r14.w, r14.w
          mul r14.w, r14.w, r15.x
          mov r14.w, -r14.w
          add r12.w, r12.w, r14.w  // r12.w <- densityGradient

#line 230
          mov r12.w, r12.w  // r12.w <- <GetDensityHeightGradient return value>

#line 270
          mov r12.w, r12.w  // r12.w <- densityHeightGradient

#line 273
          mul r12.w, r12.w, r13.w  // r12.w <- baseCloud

#line 276
          mul r12.z, r12.z, cb5[1].z  // r12.z <- cloudCoverage

#line 279
          nop 
          mov r12.w, r12.w  // r12.w <- originalValue; r12.w <- originalValue; r12.w <- originalValue
          mov r13.w, -r12.z
          add r13.w, r13.w, l(1.000000)  // r13.w <- originalMin; r13.w <- originalMin; r13.w <- originalMin
          mov r14.w, l(1.000000)  // r14.w <- originalMax; r14.w <- originalMax; r14.w <- originalMax
          mov r15.x, l(0)  // r15.x <- newMin; r15.x <- newMin; r15.x <- newMin
          mov r15.y, l(1.000000)  // r15.y <- newMax; r15.y <- newMax; r15.y <- newMax

#line 71
          mov r15.z, -r13.w
          add r12.w, r12.w, r15.z
          mov r13.w, -r13.w
          add r13.w, r13.w, r14.w
          div r12.w, r12.w, r13.w
          mov r13.w, -r15.x
          add r13.w, r13.w, r15.y
          mul r12.w, r12.w, r13.w
          add r12.w, r12.w, r15.x  // r12.w <- <Remap return value>; r12.w <- <Remap return value>; r12.w <- <Remap return value>

#line 279
          mov r12.w, r12.w  // r12.w <- baseCloudWithCoverage

#line 280
          mul r12.z, r12.z, r12.w  // r12.z <- baseCloudWithCoverage

#line 282
          mov r12.z, r12.z  // r12.z <- finalCloud

#line 283
          not r12.w, r13.y
          lt r13.y, l(0.000000), r12.z
          and r12.w, r12.w, r13.y
          if_nz r12.w

#line 288
            ne r12.w, cb5[1].x, l(0.000000)
            if_nz r12.w

#line 290
              add r12.w, r0.x, cb1[0].z
              mov r13.yw, -cb5[0].xxxy
              dp2 r14.w, r13.ywyy, r13.ywyy
              rsq r14.w, r14.w
              mul r13.yw, r13.yyyw, r14.wwww
              mul r13.yw, r12.wwww, r13.yyyw
              mul r13.yw, r13.yyyw, l(0.000000, 40.000000, 0.000000, 40.000000)
              mov r13.yw, -r13.yyyw
              add r14.xz, r13.yywy, r14.xxzx

#line 291
              add r12.w, r0.x, cb1[0].z
              mul r12.w, r12.w, l(40.000000)
              mov r12.w, -r12.w
              add r14.y, r12.w, r14.y  // r14.y <- samplePoint.y

#line 292
            else   // Prior locations: r11.z <- samplePoint.y; r14.y <- samplePoint.y; r14.w <- originalMax; r14.w <- originalMax; r14.w <- originalMax
              mov r14.xy, r14.xyxx  // r14.y <- samplePoint.y
            endif 

#line 297
            mul r13.yw, r14.xxxy, l(0.000000, 0.000080, 0.000000, 0.000080)
            itof r12.w, l(0)
            sample_l_indexable(texture2d)(float,float,float,float) r13.yw, r13.ywyy, t3.zxwy, s6, r12.w  // r13.y <- curlNoise.x; r13.w <- curlNoise.y

#line 298
            mov r12.w, -r13.z
            add r12.w, r12.w, l(1.000000)
            mul r13.yw, r12.wwww, r13.yyyw
            add r14.xy, r13.ywyy, r14.xyxx

#line 302
            nop 
            mov r14.xy, r14.xyxx  // r14.x <- samplePoint.x; r14.y <- samplePoint.y
            mov r14.z, r14.z  // r14.z <- samplePoint.z
            mov r13.x, r13.x  // r13.x <- mipLevel

#line 46
            mul r14.xyz, r14.xyzx, cb5[3].xxxx
            sample_l_indexable(texture3d)(float,float,float,float) r13.xyw, r14.xyzx, t1.xywz, s6, r13.x  // r13.x <- <SampleHighFrequencyNoises return value>.x; r13.y <- <SampleHighFrequencyNoises return value>.y; r13.w <- <SampleHighFrequencyNoises return value>.z

#line 302
            mov r13.xyw, r13.xyxw  // r13.x <- highFrequencyNoises.x; r13.y <- highFrequencyNoises.y; r13.w <- highFrequencyNoises.z

#line 305
            mul r12.w, r13.x, l(0.625000)
            mul r13.x, r13.y, l(0.250000)
            add r12.w, r12.w, r13.x
            mul r13.x, r13.w, l(0.125000)
            add r12.w, r12.w, r13.x  // r12.w <- highFrequencyFbm

#line 311
            mov r13.x, -r12.w
            add r13.x, r13.x, l(1.000000)
            mul r13.y, r13.z, l(4.000000)
            max r13.y, r13.y, l(0.000000)
            min r13.y, r13.y, l(1.000000)
            mov r13.w, -r12.w
            add r13.x, r13.w, r13.x
            mul r13.x, r13.x, r13.y
            add r12.w, r12.w, r13.x  // r12.w <- highFrequencyNoiseModifier

#line 316
            nop 
            mov r12.z, r12.z  // r12.z <- originalValue; r12.z <- originalValue; r12.z <- originalValue
            mul r12.w, r12.w, l(0.200000)  // r12.w <- originalMin; r12.w <- originalMin; r12.w <- originalMin
            mov r13.x, l(1.000000)  // r13.x <- originalMax; r13.x <- originalMax; r13.x <- originalMax
            mov r13.y, l(0)  // r13.y <- newMin; r13.y <- newMin; r13.y <- newMin
            mov r13.w, l(1.000000)  // r13.w <- newMax; r13.w <- newMax; r13.w <- newMax

#line 71
            mov r14.x, -r12.w
            add r14.x, r12.z, r14.x
            mov r12.w, -r12.w
            add r12.w, r12.w, r13.x
            div r12.w, r14.x, r12.w
            mov r13.x, -r13.y
            add r13.x, r13.x, r13.w
            mul r12.w, r12.w, r13.x
            add r12.z, r12.w, r13.y  // r12.z <- <Remap return value>; r12.z <- <Remap return value>; r12.z <- <Remap return value>

#line 316
            mov r12.z, r12.z  // r12.z <- finalCloud

#line 320
          endif 

#line 325
          max r12.z, r12.z, l(0.000000)
          min r12.z, r12.z, l(1.000000)
          mov r12.w, -r13.z
          add r12.w, r12.w, l(1.000000)
          mul r12.w, r12.w, l(0.800000)
          add r12.w, r12.w, l(0.500000)
          log r12.z, r12.z
          mul r12.z, r12.z, r12.w
          exp r12.z, r12.z  // r12.z <- <SampleCloudDensity return value>

#line 360
          add r12.x, r12.z, r12.x

#line 362
          iadd r12.y, r12.y, l(1)

#line 353
          mov r13.xyz, x0[5].xyzx
          itof r12.z, r12.y
          mul r13.xyz, r12.zzzz, r13.xyzx
          add r10.xyw, r10.xyxw, r13.xyxz
          mul r10.xyw, r11.wwww, r10.xyxw
          add r10.xyw, r10.xwxy, r11.xyxz  // r10.x <- samplePoint.x; r10.y <- samplePoint.z; r10.w <- samplePoint.y

#line 354
          nop 
          mov r10.xy, r10.xyxx  // r10.x <- samplePoint.x; r10.y <- samplePoint.y

#line 51
          add r11.x, r0.x, cb1[0].z
          mul r11.x, r11.x, l(0.001000)
          mov r11.yz, -cb5[0].xxyx
          dp2 r11.w, r11.yzyy, r11.yzyy
          rsq r11.w, r11.w
          mul r11.yz, r11.wwww, r11.yyzy
          mul r11.xy, r11.yzyy, r11.xxxx
          mul r11.xy, r11.xyxx, cb5[1].xxxx  // r11.x <- offset.x; r11.y <- offset.y

#line 53
          add r11.z, cb5[0].z, cb5[0].z
          mul r11.w, cb5[2].y, cb5[2].y
          mov r11.w, -r11.w
          add r11.z, r11.w, r11.z
          sqrt r11.z, r11.z
          mul r11.z, r11.z, cb5[2].z  // r11.z <- horizonDistance

#line 54
          add r13.x, r10.x, r11.z
          mov r11.w, -r10.y
          add r13.y, r11.w, r11.z
          mul r11.z, r11.z, l(2.000000)
          div r11.zw, r13.xxxy, r11.zzzz
          add r11.xy, r11.xyxx, r11.zwzz
          sample_indexable(texture2d)(float,float,float,float) r11.xy, r11.xyxx, t2.xzyw, s6  // r11.x <- <SampleWeatherData return value>.x; r11.y <- <SampleWeatherData return value>.z

#line 354
          mov r11.xy, r11.xyxx  // r11.x <- weatherData.x; r11.y <- weatherData.z

#line 360
          nop 
          mov r10.xyw, r10.xyxw  // r10.x <- samplePoint.x; r10.y <- samplePoint.z; r10.w <- samplePoint.y
          mov r11.xy, r11.xyxx  // r11.x <- weatherData.x; r11.y <- weatherData.z
          itof r11.z, r12.y  // r11.z <- mipLevel
          mov r11.w, l(0)  // r11.w <- cheapSample

#line 252
          nop 
          dp3 r12.y, r10.xywx, r10.xywx
          sqrt r12.y, r12.y  // r12.y <- position

#line 167
          mov r12.z, -cb5[0].z
          add r12.y, r12.z, r12.y
          mov r12.z, -cb5[0].z
          add r12.z, r12.z, cb5[0].w
          div r12.y, r12.y, r12.z  // r12.y <- heightFraction

#line 168
          max r12.y, r12.y, l(0.000000)
          min r12.y, r12.y, l(1.000000)  // r12.y <- <GetHeightFractionForPoint return value>

#line 252
          mov r12.y, r12.y  // r12.y <- heightFraction

#line 255
          add r12.z, r0.x, cb1[0].z
          mul r12.z, r12.z, l(20.000000)
          mov r13.xy, -cb5[0].xyxx
          dp2 r12.w, r13.xyxx, r13.xyxx
          rsq r12.w, r12.w
          mul r13.xy, r12.wwww, r13.xyxx
          mul r12.zw, r12.zzzz, r13.xxxy
          mul r12.zw, r12.zzzw, cb5[1].xxxx
          mul r12.zw, r12.zzzw, l(0.000000, 0.000000, 0.600000, 0.600000)
          add r10.xy, r10.xyxx, r12.zwzz

#line 260
          nop 
          mov r10.xy, r10.xyxx  // r10.x <- samplePoint.x; r10.y <- samplePoint.z
          mov r10.w, r10.w  // r10.w <- samplePoint.y
          mov r12.z, l(-2.000000)
          add r12.z, r11.z, r12.z  // r12.z <- mipLevel

#line 41
          mul r13.xyz, r10.xwyx, cb5[2].wwww
          sample_l_indexable(texture3d)(float,float,float,float) r13.xyzw, r13.xyzx, t0.xyzw, s6, r12.z  // r13.x <- <SampleLowFrequencyNoises return value>.x; r13.y <- <SampleLowFrequencyNoises return value>.y; r13.z <- <SampleLowFrequencyNoises return value>.z; r13.w <- <SampleLowFrequencyNoises return value>.w

#line 260
          mov r13.xyzw, r13.xyzw  // r13.x <- lowFrequencyNoises.x; r13.y <- lowFrequencyNoises.y; r13.z <- lowFrequencyNoises.z; r13.w <- lowFrequencyNoises.w

#line 263
          mul r12.z, r13.y, l(0.625000)
          mul r12.w, r13.z, l(0.250000)
          add r12.z, r12.w, r12.z
          mul r12.w, r13.w, l(0.125000)
          add r12.z, r12.w, r12.z  // r12.z <- lowFrequencyFbm

#line 266
          nop 
          mov r13.x, r13.x  // r13.x <- originalValue; r13.x <- originalValue; r13.x <- originalValue
          mov r12.z, -r12.z
          add r12.z, r12.z, l(1.000000)
          mov r12.z, -r12.z  // r12.z <- originalMin; r12.z <- originalMin; r12.z <- originalMin
          mov r12.w, l(1.000000)  // r12.w <- originalMax; r12.w <- originalMax; r12.w <- originalMax
          mov r13.y, l(0)  // r13.y <- newMin; r13.y <- newMin; r13.y <- newMin
          mov r13.z, l(1.000000)  // r13.z <- newMax; r13.z <- newMax; r13.z <- newMax

#line 71
          mov r13.w, -r12.z
          add r13.x, r13.w, r13.x
          mov r12.z, -r12.z
          add r12.z, r12.z, r12.w
          div r12.z, r13.x, r12.z
          mov r12.w, -r13.y
          add r12.w, r12.w, r13.z
          mul r12.z, r12.w, r12.z
          add r12.z, r12.z, r13.y  // r12.z <- <Remap return value>; r12.z <- <Remap return value>; r12.z <- <Remap return value>

#line 266
          mov r12.z, r12.z  // r12.z <- baseCloud

#line 269
          mul r11.y, r11.y, cb5[2].x
          max r11.y, r11.y, l(0.000000)
          min r11.y, r11.y, l(1.000000)  // r11.y <- cloudType

#line 270
          nop 
          mov r12.y, r12.y  // r12.y <- heightFraction
          mov r11.y, r11.y  // r11.y <- cloudType

#line 219
          mov r13.xyzw, l(0.020000,0.050000,0.090000,0.110000)  // r13.x <- stratusGradient.x; r13.y <- stratusGradient.y; r13.z <- stratusGradient.z; r13.w <- stratusGradient.w

#line 220
          mov r14.xyzw, l(0.020000,0.200000,0.480000,0.625000)  // r14.x <- stratocumulusGradient.x; r14.y <- stratocumulusGradient.y; r14.z <- stratocumulusGradient.z; r14.w <- stratocumulusGradient.w

#line 221
          mov r15.xyzw, l(0.010000,0.062500,0.780000,1.000000)  // r15.x <- cumulusGradient.x; r15.y <- cumulusGradient.y; r15.z <- cumulusGradient.z; r15.w <- cumulusGradient.w

#line 223
          mul r12.w, r11.y, l(2.000000)
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)
          mov r12.w, -r12.w
          add r12.w, r12.w, l(1.000000)  // r12.w <- stratus

#line 224
          mov r16.x, l(-0.500000)
          add r16.x, r11.y, r16.x
          mov r16.y, -r16.x
          max r16.x, r16.y, r16.x
          mul r16.x, r16.x, l(2.000000)
          mov r16.x, -r16.x
          add r16.x, r16.x, l(1.000000)  // r16.x <- stratocumulus

#line 225
          mov r16.y, l(-0.500000)
          add r11.y, r11.y, r16.y
          max r11.y, r11.y, l(0.000000)
          min r11.y, r11.y, l(1.000000)
          mul r11.y, r11.y, l(2.000000)  // r11.y <- cumulus

#line 227
          mul r13.xyzw, r12.wwww, r13.xyzw
          mul r14.xyzw, r14.xyzw, r16.xxxx
          add r13.xyzw, r13.xyzw, r14.xyzw
          mul r14.xyzw, r11.yyyy, r15.xyzw
          add r13.xyzw, r13.xyzw, r14.xyzw  // r13.x <- cloudGradient.x; r13.y <- cloudGradient.y; r13.z <- cloudGradient.z; r13.w <- cloudGradient.w

#line 228
          mov r11.y, -r13.x
          add r12.w, r11.y, r13.y
          add r11.y, r11.y, r12.y
          div r12.w, l(1.000000, 1.000000, 1.000000, 1.000000), r12.w
          mul r11.y, r11.y, r12.w
          max r11.y, r11.y, l(0.000000)
          min r11.y, r11.y, l(1.000000)
          mul r12.w, r11.y, l(-2.000000)
          add r12.w, r12.w, l(3.000000)
          mul r11.y, r11.y, r11.y
          mul r11.y, r11.y, r12.w
          mov r12.w, -r13.z
          add r13.x, r12.w, r13.w
          add r12.w, r12.w, r12.y
          div r13.x, l(1.000000, 1.000000, 1.000000, 1.000000), r13.x
          mul r12.w, r12.w, r13.x
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)
          mul r13.x, r12.w, l(-2.000000)
          add r13.x, r13.x, l(3.000000)
          mul r12.w, r12.w, r12.w
          mul r12.w, r12.w, r13.x
          mov r12.w, -r12.w
          add r11.y, r11.y, r12.w  // r11.y <- densityGradient

#line 230
          mov r11.y, r11.y  // r11.y <- <GetDensityHeightGradient return value>

#line 270
          mov r11.y, r11.y  // r11.y <- densityHeightGradient

#line 273
          mul r11.y, r11.y, r12.z  // r11.y <- baseCloud

#line 276
          mul r11.x, r11.x, cb5[1].z  // r11.x <- cloudCoverage

#line 279
          nop 
          mov r11.y, r11.y  // r11.y <- originalValue; r11.y <- originalValue
          mov r12.z, -r11.x
          add r12.z, r12.z, l(1.000000)  // r12.z <- originalMin; r12.z <- originalMin
          mov r12.w, l(1.000000)  // r12.w <- originalMax; r12.w <- originalMax
          mov r13.x, l(0)  // r13.x <- newMin; r13.x <- newMin
          mov r13.y, l(1.000000)  // r13.y <- newMax; r13.y <- newMax

#line 71
          mov r13.z, -r12.z
          add r11.y, r11.y, r13.z
          mov r12.z, -r12.z
          add r12.z, r12.z, r12.w
          div r11.y, r11.y, r12.z
          mov r12.z, -r13.x
          add r12.z, r12.z, r13.y
          mul r11.y, r11.y, r12.z
          add r11.y, r11.y, r13.x  // r11.y <- <Remap return value>; r11.y <- <Remap return value>

#line 279
          mov r11.y, r11.y  // r11.y <- baseCloudWithCoverage

#line 280
          mul r11.x, r11.x, r11.y  // r11.x <- baseCloudWithCoverage

#line 282
          mov r11.x, r11.x  // r11.x <- finalCloud

#line 283
          not r11.y, r11.w
          lt r11.w, l(0.000000), r11.x
          and r11.y, r11.w, r11.y
          if_nz r11.y

#line 288
            ne r11.y, cb5[1].x, l(0.000000)
            if_nz r11.y

#line 290
              add r11.y, r0.x, cb1[0].z
              mov r12.zw, -cb5[0].xxxy
              dp2 r11.w, r12.zwzz, r12.zwzz
              rsq r11.w, r11.w
              mul r12.zw, r11.wwww, r12.zzzw
              mul r11.yw, r11.yyyy, r12.zzzw
              mul r11.yw, r11.yyyw, l(0.000000, 40.000000, 0.000000, 40.000000)
              mov r11.yw, -r11.yyyw
              add r10.xy, r10.xyxx, r11.ywyy

#line 291
              add r11.y, r0.x, cb1[0].z
              mul r11.y, r11.y, l(40.000000)
              mov r11.y, -r11.y
              add r10.w, r10.w, r11.y

#line 292
            else   // Prior locations: r10.w <- samplePoint.y; r12.w <- originalMax
              mov r10.xw, r10.xxxw
            endif 

#line 297
            mul r11.yw, r10.xxxw, l(0.000000, 0.000080, 0.000000, 0.000080)
            itof r12.z, l(0)
            sample_l_indexable(texture2d)(float,float,float,float) r11.yw, r11.ywyy, t3.zxwy, s6, r12.z  // r11.y <- curlNoise.x; r11.w <- curlNoise.y

#line 298
            mov r12.z, -r12.y
            add r12.z, r12.z, l(1.000000)
            mul r11.yw, r11.yyyw, r12.zzzz
            add r10.xw, r10.xxxw, r11.yyyw

#line 302
            nop 
            mov r10.xw, r10.xxxw  // r10.x <- samplePoint.x; r10.w <- samplePoint.y
            mov r10.y, r10.y  // r10.y <- samplePoint.z
            mov r11.z, r11.z  // r11.z <- mipLevel

#line 46
            mul r10.xyw, r10.xwxy, cb5[3].xxxx
            sample_l_indexable(texture3d)(float,float,float,float) r10.xyw, r10.xywx, t1.xywz, s6, r11.z  // r10.x <- <SampleHighFrequencyNoises return value>.x; r10.y <- <SampleHighFrequencyNoises return value>.y; r10.w <- <SampleHighFrequencyNoises return value>.z

#line 302
            mov r10.xyw, r10.xyxw  // r10.x <- highFrequencyNoises.x; r10.y <- highFrequencyNoises.y; r10.w <- highFrequencyNoises.z

#line 305
            mul r10.x, r10.x, l(0.625000)
            mul r10.y, r10.y, l(0.250000)
            add r10.x, r10.y, r10.x
            mul r10.y, r10.w, l(0.125000)
            add r10.x, r10.y, r10.x  // r10.x <- highFrequencyFbm

#line 311
            mov r10.y, -r10.x
            add r10.y, r10.y, l(1.000000)
            mul r10.w, r12.y, l(4.000000)
            max r10.w, r10.w, l(0.000000)
            min r10.w, r10.w, l(1.000000)
            mov r11.y, -r10.x
            add r10.y, r10.y, r11.y
            mul r10.y, r10.y, r10.w
            add r10.x, r10.y, r10.x  // r10.x <- highFrequencyNoiseModifier

#line 316
            nop 
            mov r11.x, r11.x  // r11.x <- originalValue
            mul r10.x, r10.x, l(0.200000)  // r10.x <- originalMin
            mov r10.y, l(1.000000)  // r10.y <- originalMax
            mov r10.w, l(0)  // r10.w <- newMin
            mov r11.y, l(1.000000)  // r11.y <- newMax

#line 71
            mov r11.z, -r10.x
            add r11.z, r11.z, r11.x
            mov r10.x, -r10.x
            add r10.x, r10.x, r10.y
            div r10.x, r11.z, r10.x
            mov r10.y, -r10.w
            add r10.y, r10.y, r11.y
            mul r10.x, r10.y, r10.x
            add r11.x, r10.x, r10.w  // r11.x <- <Remap return value>

#line 316
            mov r11.x, r11.x  // r11.x <- finalCloud

#line 320
          endif 

#line 325
          max r10.x, r11.x, l(0.000000)
          min r10.x, r10.x, l(1.000000)
          mov r10.y, -r12.y
          add r10.y, r10.y, l(1.000000)
          mul r10.y, r10.y, l(0.800000)
          add r10.y, r10.y, l(0.500000)
          log r10.x, r10.x
          mul r10.x, r10.x, r10.y
          exp r10.x, r10.x  // r10.x <- <SampleCloudDensity return value>

#line 360
          add r10.x, r10.x, r12.x  // r10.x <- densityAlongCone

#line 363
          mov r10.x, r10.x  // r10.x <- <SampleCloudDensityAlongCone return value>

#line 439
          add r9.w, r9.w, r10.x

#line 440
          nop 
          mov r8.xy, r8.xyxx
          mov r8.z, r8.z
          mov r10.xyw, r3.xyxz
          mov r11.x, r4.w

#line 370
          mul r11.x, r11.x, cb5[3].y  // r11.x <- longDistance

#line 372
          mul r10.xyw, r10.xyxw, r11.xxxx
          add r10.xyw, r8.xyxz, r10.xwxy  // r10.x <- samplePoint.x; r10.y <- samplePoint.z; r10.w <- samplePoint.y

#line 374
          nop 
          dp3 r11.x, r10.xywx, r10.xywx
          sqrt r11.x, r11.x

#line 167
          mov r11.y, -cb5[0].z
          add r11.x, r11.y, r11.x
          mov r11.y, -cb5[0].z
          add r11.y, r11.y, cb5[0].w
          div r11.x, r11.x, r11.y  // r11.x <- heightFraction

#line 168
          max r11.x, r11.x, l(0.000000)
          min r11.x, r11.x, l(1.000000)  // r11.x <- <GetHeightFractionForPoint return value>

#line 374
          mov r11.x, r11.x  // r11.x <- heightFraction

#line 375
          nop 
          mov r10.xy, r10.xyxx

#line 51
          add r11.y, r0.x, cb1[0].z
          mul r11.y, r11.y, l(0.001000)
          mov r11.zw, -cb5[0].xxxy
          dp2 r12.x, r11.zwzz, r11.zwzz
          rsq r12.x, r12.x
          mul r11.zw, r11.zzzw, r12.xxxx
          mul r11.yz, r11.zzwz, r11.yyyy
          mul r11.yz, r11.yyzy, cb5[1].xxxx  // r11.y <- offset.x; r11.z <- offset.y

#line 53
          add r11.w, cb5[0].z, cb5[0].z
          mul r12.x, cb5[2].y, cb5[2].y
          mov r12.x, -r12.x
          add r11.w, r11.w, r12.x
          sqrt r11.w, r11.w
          mul r11.w, r11.w, cb5[2].z  // r11.w <- horizonDistance

#line 54
          add r12.x, r10.x, r11.w
          mov r12.z, -r10.y
          add r12.y, r11.w, r12.z
          mul r11.w, r11.w, l(2.000000)
          div r12.xy, r12.xyxx, r11.wwww
          add r11.yz, r11.yyzy, r12.xxyx
          sample_indexable(texture2d)(float,float,float,float) r11.yz, r11.yzyy, t2.yxzw, s6  // r11.y <- <SampleWeatherData return value>.x; r11.z <- <SampleWeatherData return value>.z

#line 375
          mov r11.yz, r11.yyzy  // r11.y <- weatherData.x; r11.z <- weatherData.z

#line 377
          nop 
          mov r10.xyw, r10.xyxw
          mov r11.yz, r11.yyzy
          mov r11.w, l(5.000000)
          mov r12.x, l(0)

#line 252
          nop 
          dp3 r12.y, r10.xywx, r10.xywx
          sqrt r12.y, r12.y

#line 167
          mov r12.z, -cb5[0].z
          add r12.y, r12.z, r12.y
          mov r12.z, -cb5[0].z
          add r12.z, r12.z, cb5[0].w
          div r12.y, r12.y, r12.z  // r12.y <- heightFraction

#line 168
          max r12.y, r12.y, l(0.000000)
          min r12.y, r12.y, l(1.000000)  // r12.y <- <GetHeightFractionForPoint return value>

#line 252
          mov r12.y, r12.y  // r12.y <- heightFraction

#line 255
          add r12.z, r0.x, cb1[0].z
          mul r12.z, r12.z, l(20.000000)
          mov r13.xy, -cb5[0].xyxx
          dp2 r12.w, r13.xyxx, r13.xyxx
          rsq r12.w, r12.w
          mul r13.xy, r12.wwww, r13.xyxx
          mul r12.zw, r12.zzzz, r13.xxxy
          mul r12.zw, r12.zzzw, cb5[1].xxxx
          mul r12.zw, r12.zzzw, l(0.000000, 0.000000, 0.600000, 0.600000)
          add r10.xy, r10.xyxx, r12.zwzz

#line 260
          nop 
          mov r10.xy, r10.xyxx
          mov r10.w, r10.w
          mov r12.z, l(-2.000000)
          add r12.z, r11.w, r12.z

#line 41
          mul r13.xyz, r10.xwyx, cb5[2].wwww
          sample_l_indexable(texture3d)(float,float,float,float) r13.xyzw, r13.xyzx, t0.xyzw, s6, r12.z  // r13.x <- <SampleLowFrequencyNoises return value>.x; r13.y <- <SampleLowFrequencyNoises return value>.y; r13.z <- <SampleLowFrequencyNoises return value>.z; r13.w <- <SampleLowFrequencyNoises return value>.w

#line 260
          mov r13.xyzw, r13.xyzw  // r13.x <- lowFrequencyNoises.x; r13.y <- lowFrequencyNoises.y; r13.z <- lowFrequencyNoises.z; r13.w <- lowFrequencyNoises.w

#line 263
          mul r12.z, r13.y, l(0.625000)
          mul r12.w, r13.z, l(0.250000)
          add r12.z, r12.w, r12.z
          mul r12.w, r13.w, l(0.125000)
          add r12.z, r12.w, r12.z  // r12.z <- lowFrequencyFbm

#line 266
          nop 
          mov r13.x, r13.x
          mov r12.z, -r12.z
          add r12.z, r12.z, l(1.000000)
          mov r12.z, -r12.z
          mov r12.w, l(1.000000)
          mov r13.y, l(0)
          mov r13.z, l(1.000000)

#line 71
          mov r13.w, -r12.z
          add r13.x, r13.w, r13.x
          mov r12.z, -r12.z
          add r12.z, r12.z, r12.w
          div r12.z, r13.x, r12.z
          mov r12.w, -r13.y
          add r12.w, r12.w, r13.z
          mul r12.z, r12.w, r12.z
          add r12.z, r12.z, r13.y  // r12.z <- <Remap return value>

#line 266
          mov r12.z, r12.z  // r12.z <- baseCloud

#line 269
          mul r11.z, r11.z, cb5[2].x
          max r11.z, r11.z, l(0.000000)
          min r11.z, r11.z, l(1.000000)  // r11.z <- cloudType

#line 270
          nop 
          mov r12.y, r12.y
          mov r11.z, r11.z

#line 219
          mov r13.xyzw, l(0.020000,0.050000,0.090000,0.110000)  // r13.x <- stratusGradient.x; r13.y <- stratusGradient.y; r13.z <- stratusGradient.z; r13.w <- stratusGradient.w

#line 220
          mov r14.xyzw, l(0.020000,0.200000,0.480000,0.625000)  // r14.x <- stratocumulusGradient.x; r14.y <- stratocumulusGradient.y; r14.z <- stratocumulusGradient.z; r14.w <- stratocumulusGradient.w

#line 221
          mov r15.xyzw, l(0.010000,0.062500,0.780000,1.000000)  // r15.x <- cumulusGradient.x; r15.y <- cumulusGradient.y; r15.z <- cumulusGradient.z; r15.w <- cumulusGradient.w

#line 223
          mul r12.w, r11.z, l(2.000000)
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)
          mov r12.w, -r12.w
          add r12.w, r12.w, l(1.000000)  // r12.w <- stratus

#line 224
          mov r16.x, l(-0.500000)
          add r16.x, r11.z, r16.x
          mov r16.y, -r16.x
          max r16.x, r16.y, r16.x
          mul r16.x, r16.x, l(2.000000)
          mov r16.x, -r16.x
          add r16.x, r16.x, l(1.000000)  // r16.x <- stratocumulus

#line 225
          mov r16.y, l(-0.500000)
          add r11.z, r11.z, r16.y
          max r11.z, r11.z, l(0.000000)
          min r11.z, r11.z, l(1.000000)
          mul r11.z, r11.z, l(2.000000)  // r11.z <- cumulus

#line 227
          mul r13.xyzw, r12.wwww, r13.xyzw
          mul r14.xyzw, r14.xyzw, r16.xxxx
          add r13.xyzw, r13.xyzw, r14.xyzw
          mul r14.xyzw, r11.zzzz, r15.xyzw
          add r13.xyzw, r13.xyzw, r14.xyzw  // r13.x <- cloudGradient.x; r13.y <- cloudGradient.y; r13.z <- cloudGradient.z; r13.w <- cloudGradient.w

#line 228
          mov r11.z, -r13.x
          add r12.w, r11.z, r13.y
          add r11.z, r11.z, r12.y
          div r12.w, l(1.000000, 1.000000, 1.000000, 1.000000), r12.w
          mul r11.z, r11.z, r12.w
          max r11.z, r11.z, l(0.000000)
          min r11.z, r11.z, l(1.000000)
          mul r12.w, r11.z, l(-2.000000)
          add r12.w, r12.w, l(3.000000)
          mul r11.z, r11.z, r11.z
          mul r11.z, r11.z, r12.w
          mov r12.w, -r13.z
          add r13.x, r12.w, r13.w
          add r12.w, r12.w, r12.y
          div r13.x, l(1.000000, 1.000000, 1.000000, 1.000000), r13.x
          mul r12.w, r12.w, r13.x
          max r12.w, r12.w, l(0.000000)
          min r12.w, r12.w, l(1.000000)
          mul r13.x, r12.w, l(-2.000000)
          add r13.x, r13.x, l(3.000000)
          mul r12.w, r12.w, r12.w
          mul r12.w, r12.w, r13.x
          mov r12.w, -r12.w
          add r11.z, r11.z, r12.w  // r11.z <- densityGradient

#line 230
          mov r11.z, r11.z  // r11.z <- <GetDensityHeightGradient return value>

#line 270
          mov r11.z, r11.z  // r11.z <- densityHeightGradient

#line 273
          mul r11.z, r11.z, r12.z  // r11.z <- baseCloud

#line 276
          mul r11.y, r11.y, cb5[1].z  // r11.y <- cloudCoverage

#line 279
          nop 
          mov r11.z, r11.z
          mov r12.z, -r11.y
          add r12.z, r12.z, l(1.000000)
          mov r12.w, l(1.000000)
          mov r13.x, l(0)
          mov r13.y, l(1.000000)

#line 71
          mov r13.z, -r12.z
          add r11.z, r11.z, r13.z
          mov r12.z, -r12.z
          add r12.z, r12.z, r12.w
          div r11.z, r11.z, r12.z
          mov r12.z, -r13.x
          add r12.z, r12.z, r13.y
          mul r11.z, r11.z, r12.z
          add r11.z, r11.z, r13.x  // r11.z <- <Remap return value>

#line 279
          mov r11.z, r11.z  // r11.z <- baseCloudWithCoverage

#line 280
          mul r11.y, r11.y, r11.z  // r11.y <- baseCloudWithCoverage

#line 282
          mov r11.y, r11.y  // r11.y <- finalCloud

#line 283
          not r11.z, r12.x
          lt r12.x, l(0.000000), r11.y
          and r11.z, r11.z, r12.x
          if_nz r11.z  // r8.x <- samplePoint.x; r8.y <- samplePoint.z

#line 288
            ne r11.z, cb5[1].x, l(0.000000)
            if_nz r11.z

#line 290
              add r11.z, r0.x, cb1[0].z
              mov r12.xz, -cb5[0].xxyx
              dp2 r12.w, r12.xzxx, r12.xzxx
              rsq r12.w, r12.w
              mul r12.xz, r12.wwww, r12.xxzx
              mul r12.xz, r11.zzzz, r12.xxzx
              mul r12.xz, r12.xxzx, l(40.000000, 0.000000, 40.000000, 0.000000)
              mov r12.xz, -r12.xxzx
              add r10.xy, r10.xyxx, r12.xzxx

#line 291
              add r11.z, r0.x, cb1[0].z
              mul r11.z, r11.z, l(40.000000)
              mov r11.z, -r11.z
              add r10.w, r10.w, r11.z

#line 292
            else   // Prior locations: r10.w <- samplePoint.y
              mov r10.xw, r10.xxxw
            endif 

#line 297
            mul r12.xz, r10.xxwx, l(0.000080, 0.000000, 0.000080, 0.000000)
            itof r11.z, l(0)
            sample_l_indexable(texture2d)(float,float,float,float) r12.xz, r12.xzxx, t3.xzyw, s6, r11.z  // r12.x <- curlNoise.x; r12.z <- curlNoise.y

#line 298
            mov r11.z, -r12.y
            add r11.z, r11.z, l(1.000000)
            mul r12.xz, r11.zzzz, r12.xxzx
            add r10.xw, r10.xxxw, r12.xxxz

#line 302
            nop 
            mov r10.xw, r10.xxxw
            mov r10.y, r10.y
            mov r11.w, r11.w

#line 46
            mul r10.xyw, r10.xwxy, cb5[3].xxxx
            sample_l_indexable(texture3d)(float,float,float,float) r10.xyw, r10.xywx, t1.xywz, s6, r11.w  // r10.x <- <SampleHighFrequencyNoises return value>.x; r10.y <- <SampleHighFrequencyNoises return value>.y; r10.w <- <SampleHighFrequencyNoises return value>.z

#line 302
            mov r10.xyw, r10.xyxw  // r10.x <- highFrequencyNoises.x; r10.y <- highFrequencyNoises.y; r10.w <- highFrequencyNoises.z

#line 305
            mul r10.x, r10.x, l(0.625000)
            mul r10.y, r10.y, l(0.250000)
            add r10.x, r10.y, r10.x
            mul r10.y, r10.w, l(0.125000)
            add r10.x, r10.y, r10.x  // r10.x <- highFrequencyFbm

#line 311
            mov r10.y, -r10.x
            add r10.y, r10.y, l(1.000000)
            mul r10.w, r12.y, l(4.000000)
            max r10.w, r10.w, l(0.000000)
            min r10.w, r10.w, l(1.000000)
            mov r11.z, -r10.x
            add r10.y, r10.y, r11.z
            mul r10.y, r10.y, r10.w
            add r10.x, r10.y, r10.x  // r10.x <- highFrequencyNoiseModifier

#line 316
            nop 
            mov r11.y, r11.y
            mul r10.x, r10.x, l(0.200000)
            mov r10.y, l(1.000000)
            mov r10.w, l(0)
            mov r11.z, l(1.000000)

#line 71
            mov r11.w, -r10.x
            add r11.w, r11.w, r11.y
            mov r10.x, -r10.x
            add r10.x, r10.x, r10.y
            div r10.x, r11.w, r10.x
            mov r10.y, -r10.w
            add r10.y, r10.y, r11.z
            mul r10.x, r10.y, r10.x
            add r11.y, r10.x, r10.w  // r11.y <- <Remap return value>

#line 316
            mov r11.y, r11.y  // r11.y <- finalCloud

#line 320
          endif 

#line 325
          max r10.x, r11.y, l(0.000000)
          min r10.x, r10.x, l(1.000000)
          mov r10.y, -r12.y
          add r10.y, r10.y, l(1.000000)
          mul r10.y, r10.y, l(0.800000)
          add r10.y, r10.y, l(0.500000)
          log r10.x, r10.x
          mul r10.x, r10.x, r10.y
          exp r10.x, r10.x  // r10.x <- <SampleCloudDensity return value>

#line 377
          mov r10.y, -r11.x
          add r10.y, r10.y, l(1.000000)
          mul r10.y, r10.y, l(0.800000)
          add r10.y, r10.y, l(0.500000)
          log r10.x, r10.x
          mul r10.x, r10.x, r10.y
          exp r10.x, r10.x  // r10.x <- <SampleCloudDensityLongDistance return value>

#line 440
          add r9.w, r9.w, r10.x

#line 443
          mul r9.w, r9.w, cb5[1].y
          mul r9.w, r4.w, r9.w  // r9.w <- opticalThickness

#line 444
          mov r10.x, -r10.z
          mul r10.x, r10.x, l(1.442695)
          exp r10.x, r10.x
          mul r10.x, r10.x, cb5[1].w  // r10.x <- rainCloudAbsorption

#line 447
          mov r10.y, -r9.w
          mul r10.x, r10.x, r10.y
          mul r10.x, r10.x, l(1.442695)
          exp r10.x, r10.x  // r10.x <- beersLaw

#line 452
          ine r10.y, l(0, 0, 0, 0), cb5[3].z
          mov r9.w, -r9.w
          mul r9.w, r9.w, l(1.442695)
          exp r9.w, r9.w
          mov r9.w, -r9.w
          add r9.w, r9.w, l(1.000000)
          movc r9.w, r10.y, r9.w, l(0.500000)  // r9.w <- powderedSugar

#line 454
          mul r10.x, r10.x, l(2.000000)
          mul r9.w, r9.w, r10.x
          mul r9.w, r3.w, r9.w
          mul r10.xyz, r4.xyzx, r9.wwww
          mul r10.xyz, r6.wwww, r10.xyzx
          mul r10.xyz, r9.zzzz, r10.xyzx
          add r7.xyz, r7.xyzx, r10.xyzx

#line 455
        endif 

#line 456
        add r8.xyz, r1.xwzx, r8.xyzx  // r8.x <- samplePoint.x; r8.y <- samplePoint.z; r8.z <- samplePoint.y

#line 457
      else   // Prior locations: r10.z <- weatherData.y

#line 461
        mov r8.w, l(0)

#line 462
        mov r9.x, l(0)

#line 463
      endif 

#line 464
    else 

#line 468
      nop 
      mov r8.xy, r8.xyxx

#line 51
      add r9.z, r0.x, cb1[0].z
      mul r9.z, r9.z, l(0.001000)
      mov r10.xy, -cb5[0].xyxx
      dp2 r9.w, r10.xyxx, r10.xyxx
      rsq r9.w, r9.w
      mul r10.xy, r9.wwww, r10.xyxx
      mul r9.zw, r9.zzzz, r10.xxxy
      mul r9.zw, r9.zzzw, cb5[1].xxxx  // r9.z <- offset.x; r9.w <- offset.y

#line 53
      add r10.x, cb5[0].z, cb5[0].z
      mul r10.y, cb5[2].y, cb5[2].y
      mov r10.y, -r10.y
      add r10.x, r10.y, r10.x
      sqrt r10.x, r10.x
      mul r10.x, r10.x, cb5[2].z  // r10.x <- horizonDistance

#line 54
      add r11.x, r8.x, r10.x
      mov r10.y, -r8.y
      add r11.y, r10.y, r10.x
      mul r10.x, r10.x, l(2.000000)
      div r10.xy, r11.xyxx, r10.xxxx
      add r9.zw, r9.zzzw, r10.xxxy
      sample_indexable(texture2d)(float,float,float,float) r9.zw, r9.zwzz, t2.ywxz, s6  // r9.z <- <SampleWeatherData return value>.x; r9.w <- <SampleWeatherData return value>.z

#line 468
      mov r9.zw, r9.zzzw  // r9.z <- weatherData.x; r9.w <- weatherData.z

#line 469
      nop 
      mov r10.xz, r8.xxyx
      mov r10.y, r8.z
      mov r9.zw, r9.zzzw
      mov r10.w, l(0)

#line 252
      nop 
      dp3 r11.x, r10.xyzx, r10.xyzx
      sqrt r11.x, r11.x

#line 167
      mov r11.y, -cb5[0].z
      add r11.x, r11.y, r11.x
      mov r11.y, -cb5[0].z
      add r11.y, r11.y, cb5[0].w
      div r11.x, r11.x, r11.y  // r11.x <- heightFraction

#line 168
      max r11.x, r11.x, l(0.000000)
      min r11.x, r11.x, l(1.000000)  // r11.x <- <GetHeightFractionForPoint return value>

#line 252
      mov r11.x, r11.x  // r11.x <- heightFraction

#line 255
      add r11.y, r0.x, cb1[0].z
      mul r11.y, r11.y, l(20.000000)
      mov r11.zw, -cb5[0].xxxy
      dp2 r12.x, r11.zwzz, r11.zwzz
      rsq r12.x, r12.x
      mul r11.zw, r11.zzzw, r12.xxxx
      mul r11.yz, r11.zzwz, r11.yyyy
      mul r11.yz, r11.yyzy, cb5[1].xxxx
      mul r11.yz, r11.yyzy, l(0.000000, 0.600000, 0.600000, 0.000000)
      add r10.xz, r10.xxzx, r11.yyzy

#line 260
      nop 
      mov r10.xz, r10.xxzx
      mov r10.y, r10.y
      mov r11.y, l(-2.000000)
      add r10.w, r10.w, r11.y

#line 41
      mul r10.xyz, r10.xyzx, cb5[2].wwww
      sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r10.xyzx, t0.xyzw, s6, r10.w  // r10.x <- <SampleLowFrequencyNoises return value>.x; r10.y <- <SampleLowFrequencyNoises return value>.y; r10.z <- <SampleLowFrequencyNoises return value>.z; r10.w <- <SampleLowFrequencyNoises return value>.w

#line 260
      mov r10.xyzw, r10.xyzw  // r10.x <- lowFrequencyNoises.x; r10.y <- lowFrequencyNoises.y; r10.z <- lowFrequencyNoises.z; r10.w <- lowFrequencyNoises.w

#line 263
      mul r10.y, r10.y, l(0.625000)
      mul r10.z, r10.z, l(0.250000)
      add r10.y, r10.z, r10.y
      mul r10.z, r10.w, l(0.125000)
      add r10.y, r10.z, r10.y  // r10.y <- lowFrequencyFbm

#line 266
      nop 
      mov r10.x, r10.x
      mov r10.y, -r10.y
      add r10.y, r10.y, l(1.000000)
      mov r10.y, -r10.y
      mov r10.z, l(1.000000)
      mov r10.w, l(0)
      mov r11.y, l(1.000000)

#line 71
      mov r11.z, -r10.y
      add r10.x, r10.x, r11.z
      mov r10.y, -r10.y
      add r10.y, r10.y, r10.z
      div r10.x, r10.x, r10.y
      mov r10.y, -r10.w
      add r10.y, r10.y, r11.y
      mul r10.x, r10.y, r10.x
      add r10.x, r10.x, r10.w  // r10.x <- <Remap return value>

#line 266
      mov r10.x, r10.x  // r10.x <- baseCloud

#line 269
      mul r9.w, r9.w, cb5[2].x
      max r9.w, r9.w, l(0.000000)
      min r9.w, r9.w, l(1.000000)  // r9.w <- cloudType

#line 270
      nop 
      mov r11.x, r11.x
      mov r9.w, r9.w

#line 219
      mov r12.xyzw, l(0.020000,0.050000,0.090000,0.110000)  // r12.x <- stratusGradient.x; r12.y <- stratusGradient.y; r12.z <- stratusGradient.z; r12.w <- stratusGradient.w

#line 220
      mov r13.xyzw, l(0.020000,0.200000,0.480000,0.625000)  // r13.x <- stratocumulusGradient.x; r13.y <- stratocumulusGradient.y; r13.z <- stratocumulusGradient.z; r13.w <- stratocumulusGradient.w

#line 221
      mov r14.xyzw, l(0.010000,0.062500,0.780000,1.000000)  // r14.x <- cumulusGradient.x; r14.y <- cumulusGradient.y; r14.z <- cumulusGradient.z; r14.w <- cumulusGradient.w

#line 223
      mul r10.y, r9.w, l(2.000000)
      max r10.y, r10.y, l(0.000000)
      min r10.y, r10.y, l(1.000000)
      mov r10.y, -r10.y
      add r10.y, r10.y, l(1.000000)  // r10.y <- stratus

#line 224
      mov r10.z, l(-0.500000)
      add r10.z, r9.w, r10.z
      mov r10.w, -r10.z
      max r10.z, r10.w, r10.z
      mul r10.z, r10.z, l(2.000000)
      mov r10.z, -r10.z
      add r10.z, r10.z, l(1.000000)  // r10.z <- stratocumulus

#line 225
      mov r10.w, l(-0.500000)
      add r9.w, r9.w, r10.w
      max r9.w, r9.w, l(0.000000)
      min r9.w, r9.w, l(1.000000)
      mul r9.w, r9.w, l(2.000000)  // r9.w <- cumulus

#line 227
      mul r12.xyzw, r10.yyyy, r12.xyzw
      mul r13.xyzw, r10.zzzz, r13.xyzw
      add r12.xyzw, r12.xyzw, r13.xyzw
      mul r13.xyzw, r9.wwww, r14.xyzw
      add r12.xyzw, r12.xyzw, r13.xyzw  // r12.x <- cloudGradient.x; r12.y <- cloudGradient.y; r12.z <- cloudGradient.z; r12.w <- cloudGradient.w

#line 228
      mov r9.w, -r12.x
      add r10.y, r9.w, r12.y
      add r9.w, r9.w, r11.x
      div r10.y, l(1.000000, 1.000000, 1.000000, 1.000000), r10.y
      mul r9.w, r9.w, r10.y
      max r9.w, r9.w, l(0.000000)
      min r9.w, r9.w, l(1.000000)
      mul r10.y, r9.w, l(-2.000000)
      add r10.y, r10.y, l(3.000000)
      mul r9.w, r9.w, r9.w
      mul r9.w, r9.w, r10.y
      mov r10.y, -r12.z
      add r10.z, r10.y, r12.w
      add r10.y, r10.y, r11.x
      div r10.z, l(1.000000, 1.000000, 1.000000, 1.000000), r10.z
      mul r10.y, r10.z, r10.y
      max r10.y, r10.y, l(0.000000)
      min r10.y, r10.y, l(1.000000)
      mul r10.z, r10.y, l(-2.000000)
      add r10.z, r10.z, l(3.000000)
      mul r10.y, r10.y, r10.y
      mul r10.y, r10.y, r10.z
      mov r10.y, -r10.y
      add r9.w, r9.w, r10.y  // r9.w <- densityGradient

#line 230
      mov r9.w, r9.w  // r9.w <- <GetDensityHeightGradient return value>

#line 270
      mov r9.w, r9.w  // r9.w <- densityHeightGradient

#line 273
      mul r9.w, r9.w, r10.x  // r9.w <- baseCloud

#line 276
      mul r9.z, r9.z, cb5[1].z  // r9.z <- cloudCoverage

#line 279
      nop 
      mov r9.w, r9.w
      mov r10.x, -r9.z
      add r10.x, r10.x, l(1.000000)
      mov r10.y, l(1.000000)
      mov r10.z, l(0)
      mov r10.w, l(1.000000)

#line 71
      mov r11.y, -r10.x
      add r9.w, r9.w, r11.y
      mov r10.x, -r10.x
      add r10.x, r10.x, r10.y
      div r9.w, r9.w, r10.x
      mov r10.x, -r10.z
      add r10.x, r10.x, r10.w
      mul r9.w, r9.w, r10.x  // v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w; r0.x <- timeOffset
      add r9.w, r9.w, r10.z  // r9.w <- <Remap return value>

#line 279
      mov r9.w, r9.w  // r9.w <- baseCloudWithCoverage

#line 280
      mul r9.z, r9.z, r9.w  // r9.z <- baseCloudWithCoverage

#line 282
      mov r9.z, r9.z  // r9.z <- finalCloud

#line 325
      max r9.z, r9.z, l(0.000000)
      min r9.z, r9.z, l(1.000000)
      mov r9.w, -r11.x
      add r9.w, r9.w, l(1.000000)
      mul r9.w, r9.w, l(0.800000)
      add r9.w, r9.w, l(0.500000)
      log r9.z, r9.z
      mul r9.z, r9.z, r9.w
      exp r8.w, r9.z  // r8.w <- <SampleCloudDensity return value>

#line 469
      mov r8.w, r8.w  // r8.w <- cloudTest

#line 470
      eq r9.z, r8.w, l(0.000000)
      if_nz r9.z

#line 472
        add r8.xyz, r1.xwzx, r8.xyzx

#line 473
      endif 

#line 474
    endif 

#line 475
    iadd r9.y, r9.y, l(1)
  endloop 

#line 477
  mov r0.x, -r6.w
  add r7.w, r0.x, l(1.000000)  // r7.w <- alpha

#line 478
  max r1.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // r1.x <- <RayMarch return value>.x; r1.y <- <RayMarch return value>.y; r1.z <- <RayMarch return value>.z; r1.w <- <RayMarch return value>.w

#line 529
  mov r1.xyzw, r1.xyzw  // r1.x <- volume.x; r1.y <- volume.y; r1.z <- volume.z; r1.w <- volume.w

#line 533
  nop 
  mov r0.yzw, r0.yyzw

#line 87
  mov r0.x, l(1000.000000)  // r0.x <- distanceToSun

#line 88
  mov r2.xyz, -cb11[0].xyzx
  dp3 r2.w, r2.xyzx, r2.xyzx
  rsq r2.w, r2.w
  mul r2.xyz, r2.wwww, r2.xyzx
  mul r2.xyz, r0.xxxx, r2.xyzx
  mov r3.xyz, -cb8[4].xyzx  // r0.y <- rayDir.x; r0.z <- rayDir.y; r0.w <- rayDir.z
  add r2.xyz, r2.xyzx, r3.xyzx
  dp3 r0.x, r2.xyzx, r2.xyzx
  rsq r0.x, r0.x
  mul r2.xyz, r0.xxxx, r2.xyzx  // r2.x <- sunDirection.x; r2.y <- sunDirection.y; r2.z <- sunDirection.z

#line 90
  mov r3.xyz, l(1.000000,1.000000,1.000000,0)  // r3.x <- lightColor.x; r3.y <- lightColor.y; r3.z <- lightColor.z

#line 91
  mov r4.xyz, l(1.000000,1.000000,1.000000,0)  // r4.x <- groundColor.x; r4.y <- groundColor.y; r4.z <- groundColor.z

#line 94
  mov r0.x, l(8400.000000)  // r0.x <- rayleighZenithSize

#line 95
  mov r2.w, l(1250.000000)  // r2.w <- mieZenithSize

#line 97
  mov r3.w, l(1.000000)  // r3.w <- rayleigh

#line 98
  mov r5.xyz, l(0.260000,0.410000,0.580000,0)  // r5.x <- rayleighColor.x; r5.y <- rayleighColor.y; r5.z <- rayleighColor.z

#line 101
  mov r4.w, l(0.900000)  // r4.w <- mieEccentricity

#line 105
  mov r5.w, l(0.100000)  // r5.w <- exposure

#line 107
  dp3 r6.x, l(0.000000, 1.000000, 0.000000, 0.000000), r2.xyzx
  max r6.x, r6.x, l(-1.000000)
  min r6.x, r6.x, l(1.000000)  // r6.x <- zenithAngle

#line 108
  mov r6.y, -r6.x
  max r6.z, r6.y, r6.x
  mov r6.w, -r6.z
  add r6.w, r6.w, l(1.000000)
  sqrt r6.w, r6.w
  mul r7.x, r6.z, l(-0.018729)
  add r7.x, r7.x, l(0.074261)
  mul r7.x, r6.z, r7.x
  add r7.x, r7.x, l(-0.212114)
  mul r6.z, r6.z, r7.x
  add r6.z, r6.z, l(1.570729)
  mul r6.z, r6.w, r6.z
  mul r6.w, r6.z, l(-2.000000)
  add r6.w, r6.w, l(3.141593)
  lt r6.y, r6.x, r6.y
  and r6.y, r6.y, r6.w
  add r6.y, r6.y, r6.z
  mov r6.y, -r6.y
  add r6.y, r6.y, l(1.570796)
  mov r6.y, -r6.y
  mul r6.y, r6.y, l(1.442695)
  exp r6.y, r6.y
  mov r6.y, -r6.y
  add r6.y, r6.y, l(1.000000)
  max r6.y, r6.y, l(0.000000)
  mul r6.y, r6.y, l(1000.000000)  // r6.y <- sunEnergy

#line 109
  mul r6.z, r2.y, l(1.442695)
  exp r6.z, r6.z
  mov r6.z, -r6.z
  add r6.z, r6.z, l(1.000000)
  max r6.z, r6.z, l(0.000000)
  min r6.z, r6.z, l(1.000000)
  mov r6.z, -r6.z
  add r6.z, r6.z, l(1.000000)  // r6.z <- sunFade

#line 112
  mov r6.w, -r6.z
  add r6.w, r6.w, l(1.000000)
  mul r6.w, r6.w, l(1.000000)
  mov r6.w, -r6.w
  add r3.w, r3.w, r6.w  // r3.w <- rayleighCoefficient

#line 113
  mul r5.xyz, r5.xyzx, r3.wwww
  mul r5.xyz, r5.xyzx, l(0.000100, 0.000100, 0.000100, 0.000000)  // r5.x <- rayleighBeta.x; r5.y <- rayleighBeta.y; r5.z <- rayleighBeta.z

#line 115
  mov r7.xyz, l(0.000014,0.000017,0.000020,0)  // r7.x <- mieBeta.x; r7.y <- mieBeta.y; r7.z <- mieBeta.z

#line 118
  dp3 r3.w, l(0.000000, 1.000000, 0.000000, 0.000000), r0.yzwy
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)
  mov r6.w, -r3.w
  max r7.w, r3.w, r6.w
  mov r8.x, -r7.w
  add r8.x, r8.x, l(1.000000)
  sqrt r8.x, r8.x
  mul r8.y, r7.w, l(-0.018729)
  add r8.y, r8.y, l(0.074261)
  mul r8.y, r7.w, r8.y
  add r8.y, r8.y, l(-0.212114)
  mul r7.w, r7.w, r8.y
  add r7.w, r7.w, l(1.570729)
  mul r7.w, r8.x, r7.w
  mul r8.x, r7.w, l(-2.000000)
  add r8.x, r8.x, l(3.141593)
  lt r3.w, r3.w, r6.w
  and r3.w, r3.w, r8.x
  add r3.w, r3.w, r7.w  // r3.w <- zenith

#line 120
  sincos null, r6.w, r3.w
  mul r3.w, r3.w, l(57.295780)
  mov r3.w, -r3.w
  add r3.w, r3.w, l(93.885002)
  log r3.w, r3.w
  mul r3.w, r3.w, l(-1.253000)
  exp r3.w, r3.w
  mul r3.w, r3.w, l(0.150000)
  add r3.w, r3.w, r6.w
  div r3.w, l(1.000000), r3.w  // r3.w <- opticalMass

#line 121
  mul r0.x, r0.x, r3.w  // r0.x <- rayleighScatter

#line 122
  mul r2.w, r2.w, r3.w  // r2.w <- mieScatter

#line 125
  mul r8.xyz, r0.xxxx, r5.xyzx
  mul r9.xyz, r2.wwww, r7.xyzx
  add r8.xyz, r8.xyzx, r9.xyzx
  mov r8.xyz, -r8.xyzx
  mul r8.xyz, r8.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
  exp r8.xyz, r8.xyzx  // r8.x <- extinction.x; r8.y <- extinction.y; r8.z <- extinction.z

#line 128
  dp3 r0.x, r0.yzwy, r2.xyzx  // r0.x <- cosTheta

#line 130
  mul r2.x, r0.x, l(0.500000)
  add r2.x, r2.x, l(0.500000)
  mov r2.y, l(1.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, r2.y
  add r2.x, r2.x, l(1.000000)
  mul r2.x, r2.x, l(0.059683)  // r2.x <- rayleighPhase

#line 131
  mul r2.xyz, r2.xxxx, r5.xyzx  // r2.x <- rayleighBetaTheta.x; r2.y <- rayleighBetaTheta.y; r2.z <- rayleighBetaTheta.z

#line 133
  nop 
  mov r0.x, r0.x
  mov r4.w, r4.w

#line 77
  mul r2.w, r4.w, r4.w
  mov r2.w, -r2.w
  add r2.w, r2.w, l(1.000000)
  mul r3.w, r4.w, r4.w
  add r3.w, r3.w, l(1.000000)
  mul r4.w, r4.w, l(2.000000)
  mul r4.w, r0.x, r4.w
  mov r4.w, -r4.w
  add r3.w, r3.w, r4.w
  log r3.w, r3.w
  mul r3.w, r3.w, l(1.500000)
  exp r3.w, r3.w
  itof r4.w, l(4)
  mul r3.w, r3.w, r4.w
  mul r3.w, r3.w, l(3.141593)
  div r2.w, r2.w, r3.w  // r2.w <- <HenyeyGreenstein return value>

#line 133
  mov r2.w, r2.w  // r2.w <- miePhase

#line 134
  mul r9.xyz, r2.wwww, r7.xyzx  // r9.x <- mieBetaTheta.x; r9.y <- mieBetaTheta.y; r9.z <- mieBetaTheta.z

#line 136
  add r10.xyz, r2.xyzx, r9.xyzx
  add r11.xyz, r5.xyzx, r7.xyzx
  div r10.xyz, r10.xyzx, r11.xyzx
  mul r10.xyz, r6.yyyy, r10.xyzx
  mov r11.xyz, -r8.xyzx
  add r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r10.xyz, r10.xyzx, r11.xyzx
  log r10.xyz, r10.xyzx
  mul r10.xyz, r10.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)
  exp r10.xyz, r10.xyzx  // r10.x <- Li.x; r10.y <- Li.y; r10.z <- Li.z

#line 138
  add r2.xyz, r2.xyzx, r9.xyzx
  add r5.xyz, r5.xyzx, r7.xyzx
  div r2.xyz, r2.xyzx, r5.xyzx
  mul r2.xyz, r2.xyzx, r6.yyyy
  mul r2.xyz, r8.xyzx, r2.xyzx
  rsq r2.xyz, r2.xyzx
  div r2.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzx
  mov r2.w, -r6.x
  add r2.w, r2.w, l(1.000000)
  mov r3.w, l(1.000000)
  mul r3.w, r2.w, r3.w
  mul r2.w, r2.w, r2.w
  mul r2.w, r2.w, r2.w
  mul r2.w, r2.w, r3.w
  max r2.w, r2.w, l(0.000000)
  min r2.w, r2.w, l(1.000000)
  mov r5.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
  add r2.xyz, r2.xyzx, r5.xyzx
  mul r2.xyz, r2.xyzx, r2.wwww
  add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r10.xyzx  // r2.x <- Li.x; r2.y <- Li.y; r2.z <- Li.z

#line 141
  dp3 r2.w, l(0.000000, 1.000000, 0.000000, 0.000000), r0.yzwy
  mov r3.w, l(0.100000)
  add r4.w, r3.w, l(0.100000)
  add r2.w, r2.w, r3.w
  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
  mul r2.w, r2.w, r3.w
  max r2.w, r2.w, l(0.000000)
  min r2.w, r2.w, l(1.000000)
  mul r3.w, r2.w, l(-2.000000)
  add r3.w, r3.w, l(3.000000)
  mul r2.w, r2.w, r2.w
  mul r2.w, r2.w, r3.w
  mov r5.xyz, -r4.xyzx
  add r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r5.xyz, r2.wwww, r5.xyzx
  add r4.xyz, r4.xyzx, r5.xyzx
  mul r2.xyz, r2.xyzx, r4.xyzx

#line 149
  mov r2.w, l(0.999848)  // r2.w <- sunAngularDiameterCosMin

#line 150
  mov r3.w, l(0.999962)  // r3.w <- sunAngularDiameterCosMax

#line 151
  mov r2.w, -r2.w
  add r3.w, r2.w, r3.w
  add r0.x, r0.x, r2.w
  div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  mul r0.x, r0.x, r2.w
  max r0.x, r0.x, l(0.000000)
  min r0.x, r0.x, l(1.000000)
  mul r2.w, r0.x, l(-2.000000)
  add r2.w, r2.w, l(3.000000)
  mul r0.x, r0.x, r0.x
  mul r0.x, r0.x, r2.w  // r0.x <- sunDisk

#line 152
  mul r2.w, r6.y, l(1900.000000)
  mul r4.xyz, r8.xyzx, r2.wwww
  mul r4.xyz, r0.xxxx, r4.xyzx
  mul r3.xyz, r3.xyzx, r4.xyzx  // r3.x <- Lo.x; r3.y <- Lo.y; r3.z <- Lo.z

#line 156
  add r2.xyz, r2.xyzx, r3.xyzx
  mul r2.xyz, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)  // r2.x <- color.x; r2.y <- color.y; r2.z <- color.z

#line 157
  mul r0.x, r6.z, l(1.200000)
  add r0.x, r0.x, l(1.200000)
  div r0.x, l(1.000000), r0.x
  log r2.xyz, r2.xyzx
  mul r2.xyz, r0.xxxx, r2.xyzx
  exp r2.xyz, r2.xyzx  // r2.x <- color.x; r2.y <- color.y; r2.z <- color.z

#line 158
  mul r2.xyz, r5.wwww, r2.xyzx

#line 160
  mov r2.xyz, r2.xyzx  // r2.x <- <Atmosphere return value>.x; r2.y <- <Atmosphere return value>.y; r2.z <- <Atmosphere return value>.z

#line 533
  mov r2.xyz, r2.xyzx  // r2.x <- background.x; r2.y <- background.y; r2.z <- background.z

#line 535
  mov r0.x, -r1.w
  add r0.x, r0.x, l(1.000000)
  mul r3.xyz, r0.xxxx, r2.xyzx
  add r1.xyz, r1.xyzx, r3.xyzx  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 539
  max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mov r0.x, -r0.z
  add r0.x, r0.x, l(1.000000)
  mov r1.w, l(-0.600000)
  add r2.w, r1.w, l(1.000000)
  add r0.x, r0.x, r1.w
  div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul r0.x, r0.x, r1.w
  max r0.x, r0.x, l(0.000000)
  min r0.x, r0.x, l(1.000000)
  mul r1.w, r0.x, l(-2.000000)
  add r1.w, r1.w, l(3.000000)
  mul r0.x, r0.x, r0.x
  mul r0.x, r0.x, r1.w
  mov r3.xyz, -r1.xyzx
  add r2.xyz, r2.xyzx, r3.xyzx
  mul r2.xyz, r0.xxxx, r2.xyzx
  add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 540
else   // Prior locations: r1.w <- pos.w; r0.x <- timeOffset

#line 543
  nop 
  mov r0.yzw, r0.yyzw

#line 87
  mov r0.x, l(1000.000000)  // r0.x <- distanceToSun

#line 88
  mov r2.xyz, -cb11[0].xyzx
  dp3 r1.w, r2.xyzx, r2.xyzx
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, r2.xyzx
  mul r2.xyz, r0.xxxx, r2.xyzx
  mov r3.xyz, -cb8[4].xyzx
  add r2.xyz, r2.xyzx, r3.xyzx
  dp3 r0.x, r2.xyzx, r2.xyzx
  rsq r0.x, r0.x
  mul r2.xyz, r0.xxxx, r2.xyzx  // r2.x <- sunDirection.x; r2.y <- sunDirection.y; r2.z <- sunDirection.z

#line 90
  mov r3.xyz, l(1.000000,1.000000,1.000000,0)  // r3.x <- lightColor.x; r3.y <- lightColor.y; r3.z <- lightColor.z

#line 91
  mov r4.xyz, l(1.000000,1.000000,1.000000,0)  // r4.x <- groundColor.x; r4.y <- groundColor.y; r4.z <- groundColor.z

#line 94
  mov r0.x, l(8400.000000)  // r0.x <- rayleighZenithSize

#line 95
  mov r1.w, l(1250.000000)  // r1.w <- mieZenithSize

#line 97
  mov r2.w, l(1.000000)  // r2.w <- rayleigh

#line 98
  mov r5.xyz, l(0.260000,0.410000,0.580000,0)  // r5.x <- rayleighColor.x; r5.y <- rayleighColor.y; r5.z <- rayleighColor.z

#line 101
  mov r3.w, l(0.900000)  // r3.w <- mieEccentricity

#line 105
  mov r4.w, l(0.100000)  // r4.w <- exposure

#line 107
  dp3 r5.w, l(0.000000, 1.000000, 0.000000, 0.000000), r2.xyzx
  max r5.w, r5.w, l(-1.000000)
  min r5.w, r5.w, l(1.000000)  // r5.w <- zenithAngle

#line 108
  mov r6.x, -r5.w
  max r6.y, r5.w, r6.x
  mov r6.z, -r6.y
  add r6.z, r6.z, l(1.000000)
  sqrt r6.z, r6.z
  mul r6.w, r6.y, l(-0.018729)
  add r6.w, r6.w, l(0.074261)
  mul r6.w, r6.y, r6.w
  add r6.w, r6.w, l(-0.212114)
  mul r6.y, r6.y, r6.w
  add r6.y, r6.y, l(1.570729)
  mul r6.y, r6.z, r6.y
  mul r6.z, r6.y, l(-2.000000)
  add r6.z, r6.z, l(3.141593)
  lt r6.x, r5.w, r6.x
  and r6.x, r6.x, r6.z
  add r6.x, r6.x, r6.y
  mov r6.x, -r6.x
  add r6.x, r6.x, l(1.570796)
  mov r6.x, -r6.x
  mul r6.x, r6.x, l(1.442695)
  exp r6.x, r6.x
  mov r6.x, -r6.x
  add r6.x, r6.x, l(1.000000)
  max r6.x, r6.x, l(0.000000)
  mul r6.x, r6.x, l(1000.000000)  // r6.x <- sunEnergy

#line 109
  mul r6.y, r2.y, l(1.442695)
  exp r6.y, r6.y
  mov r6.y, -r6.y
  add r6.y, r6.y, l(1.000000)
  max r6.y, r6.y, l(0.000000)
  min r6.y, r6.y, l(1.000000)
  mov r6.y, -r6.y
  add r6.y, r6.y, l(1.000000)  // r6.y <- sunFade

#line 112
  mov r6.z, -r6.y
  add r6.z, r6.z, l(1.000000)
  mul r6.z, r6.z, l(1.000000)
  mov r6.z, -r6.z
  add r2.w, r2.w, r6.z  // r2.w <- rayleighCoefficient

#line 113
  mul r5.xyz, r5.xyzx, r2.wwww
  mul r5.xyz, r5.xyzx, l(0.000100, 0.000100, 0.000100, 0.000000)  // r5.x <- rayleighBeta.x; r5.y <- rayleighBeta.y; r5.z <- rayleighBeta.z

#line 115
  mov r7.xyz, l(0.000014,0.000017,0.000020,0)  // r7.x <- mieBeta.x; r7.y <- mieBeta.y; r7.z <- mieBeta.z

#line 118
  dp3 r2.w, l(0.000000, 1.000000, 0.000000, 0.000000), r0.yzwy
  max r2.w, r2.w, l(0.000000)
  min r2.w, r2.w, l(1.000000)
  mov r6.z, -r2.w
  max r6.w, r2.w, r6.z
  mov r7.w, -r6.w
  add r7.w, r7.w, l(1.000000)
  sqrt r7.w, r7.w
  mul r8.x, r6.w, l(-0.018729)
  add r8.x, r8.x, l(0.074261)
  mul r8.x, r6.w, r8.x
  add r8.x, r8.x, l(-0.212114)
  mul r6.w, r6.w, r8.x
  add r6.w, r6.w, l(1.570729)
  mul r6.w, r7.w, r6.w
  mul r7.w, r6.w, l(-2.000000)
  add r7.w, r7.w, l(3.141593)
  lt r2.w, r2.w, r6.z
  and r2.w, r2.w, r7.w
  add r2.w, r2.w, r6.w  // r2.w <- zenith

#line 120
  sincos null, r6.z, r2.w
  mul r2.w, r2.w, l(57.295780)
  mov r2.w, -r2.w
  add r2.w, r2.w, l(93.885002)
  log r2.w, r2.w
  mul r2.w, r2.w, l(-1.253000)
  exp r2.w, r2.w
  mul r2.w, r2.w, l(0.150000)
  add r2.w, r2.w, r6.z
  div r2.w, l(1.000000), r2.w  // r2.w <- opticalMass

#line 121
  mul r0.x, r0.x, r2.w  // r0.x <- rayleighScatter

#line 122
  mul r1.w, r1.w, r2.w  // r1.w <- mieScatter

#line 125
  mul r8.xyz, r0.xxxx, r5.xyzx
  mul r9.xyz, r1.wwww, r7.xyzx
  add r8.xyz, r8.xyzx, r9.xyzx
  mov r8.xyz, -r8.xyzx
  mul r8.xyz, r8.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
  exp r8.xyz, r8.xyzx  // r8.x <- extinction.x; r8.y <- extinction.y; r8.z <- extinction.z

#line 128
  dp3 r0.x, r0.yzwy, r2.xyzx  // r0.x <- cosTheta

#line 130
  mul r1.w, r0.x, l(0.500000)
  add r1.w, r1.w, l(0.500000)
  mov r2.x, l(1.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r2.x
  add r1.w, r1.w, l(1.000000)
  mul r1.w, r1.w, l(0.059683)  // r1.w <- rayleighPhase

#line 131
  mul r2.xyz, r1.wwww, r5.xyzx  // r2.x <- rayleighBetaTheta.x; r2.y <- rayleighBetaTheta.y; r2.z <- rayleighBetaTheta.z

#line 133
  nop 
  mov r0.x, r0.x
  mov r3.w, r3.w

#line 77
  mul r1.w, r3.w, r3.w
  mov r1.w, -r1.w
  add r1.w, r1.w, l(1.000000)
  mul r2.w, r3.w, r3.w
  add r2.w, r2.w, l(1.000000)
  mul r3.w, r3.w, l(2.000000)
  mul r3.w, r0.x, r3.w
  mov r3.w, -r3.w
  add r2.w, r2.w, r3.w
  log r2.w, r2.w
  mul r2.w, r2.w, l(1.500000)
  exp r2.w, r2.w
  itof r3.w, l(4)
  mul r2.w, r2.w, r3.w
  mul r2.w, r2.w, l(3.141593)
  div r1.w, r1.w, r2.w  // r1.w <- <HenyeyGreenstein return value>

#line 133
  mov r1.w, r1.w  // r1.w <- miePhase

#line 134
  mul r9.xyz, r1.wwww, r7.xyzx  // r9.x <- mieBetaTheta.x; r9.y <- mieBetaTheta.y; r9.z <- mieBetaTheta.z

#line 136
  add r10.xyz, r2.xyzx, r9.xyzx
  add r11.xyz, r5.xyzx, r7.xyzx
  div r10.xyz, r10.xyzx, r11.xyzx
  mul r10.xyz, r6.xxxx, r10.xyzx
  mov r11.xyz, -r8.xyzx
  add r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r10.xyz, r10.xyzx, r11.xyzx
  log r10.xyz, r10.xyzx
  mul r10.xyz, r10.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)
  exp r10.xyz, r10.xyzx  // r10.x <- Li.x; r10.y <- Li.y; r10.z <- Li.z

#line 138
  add r2.xyz, r2.xyzx, r9.xyzx
  add r5.xyz, r5.xyzx, r7.xyzx
  div r2.xyz, r2.xyzx, r5.xyzx
  mul r2.xyz, r2.xyzx, r6.xxxx
  mul r2.xyz, r8.xyzx, r2.xyzx
  rsq r2.xyz, r2.xyzx
  div r2.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzx
  mov r1.w, -r5.w
  add r1.w, r1.w, l(1.000000)
  mov r2.w, l(1.000000)
  mul r2.w, r1.w, r2.w
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r2.w
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)
  mov r5.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
  add r2.xyz, r2.xyzx, r5.xyzx
  mul r2.xyz, r1.wwww, r2.xyzx
  add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r10.xyzx  // r2.x <- Li.x; r2.y <- Li.y; r2.z <- Li.z

#line 141
  dp3 r0.y, l(0.000000, 1.000000, 0.000000, 0.000000), r0.yzwy
  mov r0.z, l(0.100000)
  add r0.w, r0.z, l(0.100000)
  add r0.y, r0.z, r0.y
  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  mul r0.y, r0.z, r0.y
  max r0.y, r0.y, l(0.000000)
  min r0.y, r0.y, l(1.000000)
  mul r0.z, r0.y, l(-2.000000)
  add r0.z, r0.z, l(3.000000)
  mul r0.y, r0.y, r0.y
  mul r0.y, r0.y, r0.z
  mov r5.xyz, -r4.xyzx
  add r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r0.yzw, r0.yyyy, r5.xxyz
  add r0.yzw, r0.yyzw, r4.xxyz
  mul r0.yzw, r0.yyzw, r2.xxyz  // r0.y <- Li.x; r0.z <- Li.y; r0.w <- Li.z

#line 149
  mov r1.w, l(0.999848)  // r1.w <- sunAngularDiameterCosMin

#line 150
  mov r2.x, l(0.999962)  // r2.x <- sunAngularDiameterCosMax

#line 151
  mov r1.w, -r1.w
  add r2.x, r1.w, r2.x
  add r0.x, r0.x, r1.w
  div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
  mul r0.x, r0.x, r1.w
  max r0.x, r0.x, l(0.000000)
  min r0.x, r0.x, l(1.000000)
  mul r1.w, r0.x, l(-2.000000)
  add r1.w, r1.w, l(3.000000)
  mul r0.x, r0.x, r0.x
  mul r0.x, r0.x, r1.w  // r0.x <- sunDisk

#line 152
  mul r1.w, r6.x, l(1900.000000)
  mul r2.xyz, r8.xyzx, r1.wwww
  mul r2.xyz, r0.xxxx, r2.xyzx
  mul r2.xyz, r3.xyzx, r2.xyzx  // r2.x <- Lo.x; r2.y <- Lo.y; r2.z <- Lo.z

#line 156
  add r0.xyz, r0.yzwy, r2.xyzx
  mul r0.xyz, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 157
  mul r0.w, r6.y, l(1.200000)
  add r0.w, r0.w, l(1.200000)
  div r0.w, l(1.000000), r0.w
  log r0.xyz, r0.xyzx
  mul r0.xyz, r0.xyzx, r0.wwww
  exp r0.xyz, r0.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 158
  mul r1.xyz, r4.wwww, r0.xyzx  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 160
  mov r1.xyz, r1.xyzx  // r1.x <- <Atmosphere return value>.x; r1.y <- <Atmosphere return value>.y; r1.z <- <Atmosphere return value>.z

#line 543
  mov r1.xyz, r1.xyzx  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 544
endif 

#line 546
itof o0.w, l(1)
mov o0.xyz, r1.xyzx
ret 
// Approximately 3031 instruction slots used
