//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer VIEW_CONSTANTS_BUFFER
// {
//
//   row_major float4x4 vviewProjection;// Offset:    0 Size:    64 [unused]
//   float4 vcameraPositon;             // Offset:   64 Size:    16
//   row_major float4x4 vview;          // Offset:   80 Size:    64 [unused]
//   row_major float4x4 vprojection;    // Offset:  144 Size:    64 [unused]
//   row_major float4x4 vinverseProjection;// Offset:  208 Size:    64 [unused]
//   row_major float4x4 vinverseViewProjection;// Offset:  272 Size:    64 [unused]
//   row_major float4x4 vinvView;       // Offset:  336 Size:    64 [unused]
//
// }
//
// cbuffer LIGHT_CONSTANT_BUFFER
// {
//
//   float4 lightDirection;             // Offset:    0 Size:    16
//   float4 colorLight;                 // Offset:   16 Size:    16
//   float iblIntensity;                // Offset:   32 Size:     4
//   int directionalLightEnable;        // Offset:   36 Size:     4
//   int pointLightEnable;              // Offset:   40 Size:     4
//   int pointLightCount;               // Offset:   44 Size:     4
//   
//   struct PointLights
//   {
//       
//       float4 position;               // Offset:   48
//       float4 color;                  // Offset:   64
//       float range;                   // Offset:   80
//       float3 pads;                   // Offset:   84
//
//   } pointLights[8];                  // Offset:   48 Size:   384
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerStates[1]                  sampler      NA          NA             s1      1 
// linearBorderBlackSamplerState     sampler      NA          NA             s3      1 
// normalMap                         texture  float4          2d             t0      1 
// msrMap                            texture  float4          2d             t1      1 
// colorMap                          texture  float4          2d             t2      1 
// positionMap                       texture  float4          2d             t3      1 
// emmisiveMap                       texture  float4          2d             t4      1 
// diffuseIem                        texture  float4        cube            t33      1 
// specularPmrem                     texture  float4        cube            t34      1 
// lutGgx                            texture  float4          2d            t35      1 
// VIEW_CONSTANTS_BUFFER             cbuffer      NA          NA            cb8      1 
// LIGHT_CONSTANT_BUFFER             cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB8[5], immediateIndexed
dcl_constantbuffer CB11[27], dynamicIndexed
dcl_sampler s1, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t33
dcl_resource_texturecube (float,float,float,float) t34
dcl_resource_texture2d (float,float,float,float) t35
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 23
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 16 "C:\Users\2240225\Desktop\graphicEngine4\Shader\DefefferdPS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t2.xyzw, s3  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 18
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t3.xyzw, s3
mov r1.xyz, r1.xyzx  // r1.x <- position.x; r1.y <- position.y; r1.z <- position.z

#line 20
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t1.xyzw, s3  // r2.x <- msr.x; r2.y <- msr.y; r2.z <- msr.z; r2.w <- msr.w

#line 21
mov r2.x, r2.x  // r2.x <- metallicFactor

#line 22
mov r2.z, r2.z  // r2.z <- roughnessFactor

#line 24
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.xyxx, t4.xyzw, s3
mov r3.xyz, r3.xyzx  // r3.x <- emmisiveFactor.x; r3.y <- emmisiveFactor.y; r3.z <- emmisiveFactor.z

#line 25
sample_indexable(texture2d)(float,float,float,float) r4.xyz, v1.xyxx, t0.xyzw, s3  // r4.x <- N.x; r4.y <- N.y; r4.z <- N.z

#line 26
mov r5.xyz, l(-0.040000,-0.040000,-0.040000,-0.000000)
add r5.xyz, r0.xyzx, r5.xyzx
mul r5.xyz, r2.xxxx, r5.xyzx
add r5.xyz, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)  // r5.x <- f0.x; r5.y <- f0.y; r5.z <- f0.z

#line 27
mov r6.xyz, l(1.000000,1.000000,1.000000,0)  // r6.x <- f90.x; r6.y <- f90.y; r6.z <- f90.z

#line 28
mul r1.w, r2.z, r2.z  // r1.w <- alphaRoughness

#line 29
mov r7.xyz, -r0.xyzx
add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r7.xyz, r2.xxxx, r7.xyzx
add r7.xyz, r0.xyzx, r7.xyzx  // r7.x <- cDiff.x; r7.y <- cDiff.y; r7.z <- cDiff.z

#line 32
mov r8.xyz, -r1.xyzx
add r8.xyz, r8.xyzx, cb8[4].xyzx
dp3 r3.w, r8.xyzx, r8.xyzx
rsq r3.w, r3.w
mul r8.xyz, r3.wwww, r8.xyzx  // r8.x <- V.x; r8.y <- V.y; r8.z <- V.z

#line 34
itof r9.xyz, l(0, 0, 0, 0)  // r9.x <- diffuse.x; r9.y <- diffuse.y; r9.z <- diffuse.z

#line 35
itof r10.xyz, l(0, 0, 0, 0)  // r10.x <- specular.x; r10.y <- specular.y; r10.z <- specular.z

#line 36
mov r11.xyz, -cb11[0].xyzx
dp3 r3.w, r11.xyzx, r11.xyzx
rsq r3.w, r3.w
mul r11.xyz, r3.wwww, r11.xyzx  // r11.x <- L.x; r11.y <- L.y; r11.z <- L.z

#line 37
mul r12.xyz, cb11[1].wwww, cb11[1].xyzx  // r12.x <- Li.x; r12.y <- Li.y; r12.z <- Li.z

#line 38
itof r3.w, l(0)
dp3 r4.w, r4.xyzx, r11.xyzx
mul r4.w, r4.w, l(0.500000)
add r4.w, r4.w, l(0.500000)
max r3.w, r3.w, r4.w  // r3.w <- NoL

#line 41
itof r13.xyz, l(0, 0, 0, 0)  // r13.x <- pointDiffuse.x; r13.y <- pointDiffuse.y; r13.z <- pointDiffuse.z

#line 42
itof r14.xyz, l(0, 0, 0, 0)  // r14.x <- pointSpecular.x; r14.y <- pointSpecular.y; r14.z <- pointSpecular.z

#line 43
if_nz cb11[2].z

#line 45
  mov r4.w, l(0)  // r4.w <- i
  mov r15.xyz, r13.xyzx  // r15.x <- pointDiffuse.x; r15.y <- pointDiffuse.y; r15.z <- pointDiffuse.z
  mov r16.xyz, r14.xyzx  // r16.x <- pointSpecular.x; r16.y <- pointSpecular.y; r16.z <- pointSpecular.z
  mov r5.w, r4.w  // r5.w <- i
  loop 
    ilt r6.w, r5.w, cb11[2].w
    breakc_z r6.w

#line 47
    imul null, r6.w, r5.w, l(3)
    mov r17.xyz, -cb11[r6.w + 3].xyzx
    add r17.xyz, r1.xyzx, r17.xyzx  // r17.x <- LP.x; r17.y <- LP.y; r17.z <- LP.z

#line 48
    dp3 r6.w, r17.xyzx, r17.xyzx
    sqrt r6.w, r6.w  // r6.w <- len

#line 49
    imul null, r7.w, r5.w, l(3)
    ge r7.w, r6.w, cb11[r7.w + 5].x
    if_nz r7.w

#line 51
      iadd r5.w, r5.w, l(1)
      continue 

#line 52
    endif 

#line 55
    div r17.xyz, r17.xyzx, r6.wwww

#line 56
    dp3 r6.w, r4.xyzx, r8.xyzx
    max r6.w, r6.w, l(0.000000)  // r6.w <- pNoV

#line 57
    lt r7.w, l(0.000000), r6.w
    lt r8.w, l(0.000000), r6.w
    or r7.w, r7.w, r8.w
    if_nz r7.w

#line 60
      add r18.xyz, r8.xyzx, r17.xyzx
      dp3 r7.w, r18.xyzx, r18.xyzx
      rsq r7.w, r7.w
      mul r18.xyz, r7.wwww, r18.xyzx  // r18.x <- H.x; r18.y <- H.y; r18.z <- H.z

#line 61
      imul null, r7.w, r5.w, l(3)
      imul null, r8.w, r5.w, l(3)
      mul r19.xyz, cb11[r8.w + 4].wwww, cb11[r7.w + 4].xyzx  // r19.x <- pLi.x; r19.y <- pLi.y; r19.z <- pLi.z

#line 62
      dp3 r7.w, r4.xyzx, r18.xyzx
      max r7.w, r7.w, l(0.000000)  // r7.w <- NoH

#line 63
      dp3 r8.w, r18.xyzx, r8.xyzx
      max r8.w, r8.w, l(0.000000)  // r8.w <- HoV

#line 64
      itof r9.w, l(0)
      dp3 r10.w, r4.xyzx, r17.xyzx
      mul r10.w, r10.w, l(0.500000)
      add r10.w, r10.w, l(0.500000)
      max r9.w, r9.w, r10.w  // r9.w <- pNoL

#line 65
      mul r17.xyz, r9.wwww, r19.xyzx
      nop 
      mov r18.xyz, r5.xyzx
      mov r20.xyz, r6.xyzx
      mov r21.xyz, r7.xyzx
      mov r8.w, r8.w

#line 31 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
      mov r10.w, l(3.141593)  // r10.w <- PI

#line 32
      nop 
      mov r18.xyz, r18.xyzx
      mov r20.xyz, r20.xyzx
      mov r8.w, r8.w

#line 7
      mov r22.xyz, -r18.xyzx
      add r20.xyz, r20.xyzx, r22.xyzx
      mov r11.w, -r8.w
      add r11.w, r11.w, l(1.000000)
      max r11.w, r11.w, l(0.000000)
      min r11.w, r11.w, l(1.000000)
      mov r12.w, l(1.000000)
      mul r12.w, r11.w, r12.w
      mul r11.w, r11.w, r11.w
      mul r11.w, r11.w, r11.w
      mul r11.w, r11.w, r12.w
      mul r20.xyz, r11.wwww, r20.xyzx
      add r18.xyz, r18.xyzx, r20.xyzx  // r18.x <- <FSchlick return value>.x; r18.y <- <FSchlick return value>.y; r18.z <- <FSchlick return value>.z

#line 32
      mov r18.xyz, -r18.xyzx
      add r18.xyz, r18.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div r20.xyz, r21.xyzx, r10.wwww
      mul r18.xyz, r18.xyzx, r20.xyzx  // r18.x <- <BrdfLambertian return value>.x; r18.y <- <BrdfLambertian return value>.y; r18.z <- <BrdfLambertian return value>.z

#line 65 "C:\Users\2240225\Desktop\graphicEngine4\Shader\DefefferdPS.hlsl"
      mul r17.xyz, r17.xyzx, r18.xyzx
      add r15.xyz, r15.xyzx, r17.xyzx

#line 66
      mul r17.xyz, r9.wwww, r19.xyzx
      nop 
      mov r18.xyz, r5.xyzx
      mov r19.xyz, r6.xyzx
      mov r9.w, r1.w
      mov r8.w, r8.w
      mov r10.w, r3.w
      mov r6.w, r6.w
      mov r7.w, r7.w

#line 37 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
      nop 
      mov r18.xyz, r18.xyzx
      mov r19.xyz, r19.xyzx
      mov r8.w, r8.w

#line 7
      mov r20.xyz, -r18.xyzx
      add r19.xyz, r19.xyzx, r20.xyzx
      mov r8.w, -r8.w
      add r8.w, r8.w, l(1.000000)
      max r8.w, r8.w, l(0.000000)
      min r8.w, r8.w, l(1.000000)
      mov r11.w, l(1.000000)
      mul r11.w, r8.w, r11.w
      mul r8.w, r8.w, r8.w
      mul r8.w, r8.w, r8.w
      mul r8.w, r8.w, r11.w
      mul r19.xyz, r8.wwww, r19.xyzx
      add r18.xyz, r18.xyzx, r19.xyzx  // r18.x <- <FSchlick return value>.x; r18.y <- <FSchlick return value>.y; r18.z <- <FSchlick return value>.z

#line 37
      mov r18.xyz, r18.xyzx  // r18.x <- F.x; r18.y <- F.y; r18.z <- F.z

#line 38
      nop 
      mov r10.w, r10.w
      mov r6.w, r6.w
      mov r9.w, r9.w

#line 12
      mul r8.w, r9.w, r9.w  // r8.w <- alphaRoughnessSq

#line 14
      mul r11.w, r6.w, r6.w
      mov r12.w, -r8.w
      add r12.w, r12.w, l(1.000000)
      mul r11.w, r11.w, r12.w
      add r11.w, r8.w, r11.w
      sqrt r11.w, r11.w
      mul r11.w, r10.w, r11.w  // r11.w <- ggxv

#line 15
      mul r10.w, r10.w, r10.w
      mov r12.w, -r8.w
      add r12.w, r12.w, l(1.000000)
      mul r10.w, r10.w, r12.w
      add r8.w, r8.w, r10.w
      sqrt r8.w, r8.w
      mul r6.w, r6.w, r8.w  // r6.w <- ggxl

#line 17
      add r6.w, r6.w, r11.w  // r6.w <- ggx

#line 18
      lt r8.w, l(0.000000), r6.w
      div r6.w, l(0.500000), r6.w
      movc r6.w, r8.w, r6.w, l(0)  // r6.w <- <VGgx return value>

#line 38
      mov r6.w, r6.w  // r6.w <- Vis

#line 39
      nop 
      mov r7.w, r7.w
      mov r9.w, r9.w

#line 23
      mov r8.w, l(3.141593)  // r8.w <- PI

#line 24
      mul r9.w, r9.w, r9.w  // r9.w <- alphaRoughnessSq

#line 25
      mul r7.w, r7.w, r7.w
      mov r10.w, l(-1.000000)
      add r10.w, r9.w, r10.w
      mul r7.w, r7.w, r10.w
      add r7.w, r7.w, l(1.000000)  // r7.w <- f

#line 26
      mul r8.w, r7.w, r8.w
      mul r7.w, r7.w, r8.w
      div r7.w, r9.w, r7.w  // r7.w <- <DGgx return value>

#line 39
      mov r7.w, r7.w  // r7.w <- D

#line 41
      mul r18.xyz, r6.wwww, r18.xyzx
      mul r18.xyz, r7.wwww, r18.xyzx  // r18.x <- <BrdfSpecularGgx return value>.x; r18.y <- <BrdfSpecularGgx return value>.y; r18.z <- <BrdfSpecularGgx return value>.z

#line 66 "C:\Users\2240225\Desktop\graphicEngine4\Shader\DefefferdPS.hlsl"
      mul r17.xyz, r17.xyzx, r18.xyzx
      add r16.xyz, r16.xyzx, r17.xyzx

#line 67
    endif 

#line 45
    iadd r5.w, r5.w, l(1)

#line 68
  endloop 
  mov r13.xyz, r15.xyzx  // r13.x <- pointDiffuse.x; r13.y <- pointDiffuse.y; r13.z <- pointDiffuse.z
  mov r14.xyz, r16.xyzx  // r14.x <- pointSpecular.x; r14.y <- pointSpecular.y; r14.z <- pointSpecular.z

#line 69
endif 

#line 72
if_nz cb11[2].y

#line 74
  dp3 r1.x, r4.xyzx, r8.xyzx
  max r1.x, r1.x, l(0.000000)  // r1.x <- NoV

#line 75
  lt r1.y, l(0.000000), r3.w
  lt r1.z, l(0.000000), r1.x
  or r1.y, r1.z, r1.y
  if_nz r1.y

#line 78
    add r11.xyz, r8.xyzx, r11.xyzx
    dp3 r1.y, r11.xyzx, r11.xyzx
    rsq r1.y, r1.y
    mul r11.xyz, r1.yyyy, r11.xyzx  // r11.x <- H.x; r11.y <- H.y; r11.z <- H.z

#line 80
    dp3 r1.y, r4.xyzx, r11.xyzx
    max r1.y, r1.y, l(0.000000)  // r1.y <- NoH

#line 81
    dp3 r1.z, r11.xyzx, r8.xyzx
    max r1.z, r1.z, l(0.000000)  // r1.z <- HoV

#line 83
    mul r11.xyz, r3.wwww, r12.xyzx
    nop 
    mov r15.xyz, r5.xyzx
    mov r16.xyz, r6.xyzx
    mov r7.xyz, r7.xyzx
    mov r1.z, r1.z

#line 31 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
    mov r4.w, l(3.141593)  // r4.w <- PI

#line 32
    nop 
    mov r15.xyz, r15.xyzx
    mov r16.xyz, r16.xyzx
    mov r1.z, r1.z

#line 7
    mov r17.xyz, -r15.xyzx
    add r16.xyz, r16.xyzx, r17.xyzx
    mov r5.w, -r1.z
    add r5.w, r5.w, l(1.000000)
    max r5.w, r5.w, l(0.000000)
    min r5.w, r5.w, l(1.000000)
    mov r6.w, l(1.000000)
    mul r6.w, r5.w, r6.w
    mul r5.w, r5.w, r5.w
    mul r5.w, r5.w, r5.w
    mul r5.w, r5.w, r6.w
    mul r16.xyz, r5.wwww, r16.xyzx
    add r15.xyz, r15.xyzx, r16.xyzx  // r15.x <- <FSchlick return value>.x; r15.y <- <FSchlick return value>.y; r15.z <- <FSchlick return value>.z

#line 32
    mov r15.xyz, -r15.xyzx
    add r15.xyz, r15.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div r16.xyz, r7.xyzx, r4.wwww
    mul r15.xyz, r15.xyzx, r16.xyzx  // r15.x <- <BrdfLambertian return value>.x; r15.y <- <BrdfLambertian return value>.y; r15.z <- <BrdfLambertian return value>.z

#line 83 "C:\Users\2240225\Desktop\graphicEngine4\Shader\DefefferdPS.hlsl"
    mul r11.xyz, r11.xyzx, r15.xyzx
    add r9.xyz, r9.xyzx, r11.xyzx

#line 84
    mul r11.xyz, r3.wwww, r12.xyzx
    nop 
    mov r12.xyz, r5.xyzx
    mov r6.xyz, r6.xyzx
    mov r1.w, r1.w
    mov r1.z, r1.z
    mov r3.w, r3.w
    mov r1.x, r1.x
    mov r1.y, r1.y

#line 37 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
    nop 
    mov r12.xyz, r12.xyzx
    mov r6.xyz, r6.xyzx
    mov r1.z, r1.z

#line 7
    mov r15.xyz, -r12.xyzx
    add r6.xyz, r6.xyzx, r15.xyzx
    mov r1.z, -r1.z
    add r1.z, r1.z, l(1.000000)
    max r1.z, r1.z, l(0.000000)
    min r1.z, r1.z, l(1.000000)
    mov r4.w, l(1.000000)
    mul r4.w, r1.z, r4.w
    mul r1.z, r1.z, r1.z
    mul r1.z, r1.z, r1.z
    mul r1.z, r1.z, r4.w
    mul r6.xyz, r1.zzzz, r6.xyzx
    add r6.xyz, r6.xyzx, r12.xyzx  // r6.x <- <FSchlick return value>.x; r6.y <- <FSchlick return value>.y; r6.z <- <FSchlick return value>.z

#line 37
    mov r6.xyz, r6.xyzx  // r6.x <- F.x; r6.y <- F.y; r6.z <- F.z

#line 38
    nop 
    mov r3.w, r3.w
    mov r1.x, r1.x
    mov r1.w, r1.w

#line 12
    mul r1.z, r1.w, r1.w  // r1.z <- alphaRoughnessSq

#line 14
    mul r4.w, r1.x, r1.x
    mov r5.w, -r1.z
    add r5.w, r5.w, l(1.000000)
    mul r4.w, r4.w, r5.w
    add r4.w, r1.z, r4.w
    sqrt r4.w, r4.w
    mul r4.w, r3.w, r4.w  // r4.w <- ggxv

#line 15
    mul r3.w, r3.w, r3.w
    mov r5.w, -r1.z
    add r5.w, r5.w, l(1.000000)
    mul r3.w, r3.w, r5.w
    add r1.z, r1.z, r3.w
    sqrt r1.z, r1.z
    mul r1.x, r1.z, r1.x  // r1.x <- ggxl

#line 17
    add r1.x, r1.x, r4.w  // r1.x <- ggx

#line 18
    lt r1.z, l(0.000000), r1.x
    div r1.x, l(0.500000), r1.x
    movc r1.x, r1.z, r1.x, l(0)  // r1.x <- <VGgx return value>

#line 38
    mov r1.x, r1.x  // r1.x <- Vis

#line 39
    nop 
    mov r1.y, r1.y
    mov r1.w, r1.w

#line 23
    mov r1.z, l(3.141593)  // r1.z <- PI

#line 24
    mul r1.w, r1.w, r1.w  // r1.w <- alphaRoughnessSq

#line 25
    mul r1.y, r1.y, r1.y
    mov r3.w, l(-1.000000)
    add r3.w, r1.w, r3.w
    mul r1.y, r1.y, r3.w
    add r1.y, r1.y, l(1.000000)  // r1.y <- f

#line 26
    mul r1.z, r1.y, r1.z
    mul r1.y, r1.y, r1.z
    div r1.y, r1.w, r1.y  // r1.y <- <DGgx return value>

#line 39
    mov r1.y, r1.y  // r1.y <- D

#line 41
    mul r1.xzw, r1.xxxx, r6.xxyz
    mul r1.xyz, r1.yyyy, r1.xzwx  // r1.x <- <BrdfSpecularGgx return value>.x; r1.y <- <BrdfSpecularGgx return value>.y; r1.z <- <BrdfSpecularGgx return value>.z

#line 84 "C:\Users\2240225\Desktop\graphicEngine4\Shader\DefefferdPS.hlsl"
    mul r1.xyz, r1.xyzx, r11.xyzx
    add r10.xyz, r1.xyzx, r10.xyzx

#line 85
  endif 

#line 86
endif 

#line 88
mov r2.y, r2.y  // r2.y <- occlusionFactor

#line 89
mov r2.w, r2.w  // r2.w <- occlusionStrength

#line 90
mov r3.xyz, r3.xyzx  // r3.x <- emmisive.x; r3.y <- emmisive.y; r3.z <- emmisive.z

#line 94
nop 
mov r4.xyz, r4.xyzx
mov r8.xyz, r8.xyzx
mov r2.z, r2.z
mov r7.xyz, r7.xyzx
mov r5.xyz, r5.xyzx

#line 46 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
dp3 r1.x, r4.xyzx, r8.xyzx
max r1.x, r1.x, l(0.000000)
min r2.x, r1.x, l(1.000000)  // r2.x <- NoV

#line 48
max r1.xy, r2.xzxx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)  // r1.x <- brdfSamplePoint.x; r1.y <- brdfSamplePoint.y

#line 49
nop 
mov r1.xy, r1.xyxx

#line 18 "C:\Users\2240225\Desktop\graphicEngine4\Shader\imageBasedLighting.hlsli"
sample_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t35.xyzw, s1
mov r1.xy, r1.xyxx  // r1.x <- <sampleLutGgx return value>.x; r1.y <- <sampleLutGgx return value>.y

#line 49 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
mov r1.xy, r1.xyxx  // r1.x <- fAb.x; r1.y <- fAb.y

#line 51
nop 
mov r4.xyz, r4.xyzx

#line 38 "C:\Users\2240225\Desktop\graphicEngine4\Shader\imageBasedLighting.hlsli"
sample_indexable(texturecube)(float,float,float,float) r6.xyz, r4.xyzx, t33.xyzw, s1
mov r6.xyz, r6.xyzx  // r6.x <- <sampleDiffuseIem return value>.x; r6.y <- <sampleDiffuseIem return value>.y; r6.z <- <sampleDiffuseIem return value>.z

#line 51 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
mov r6.xyz, r6.xyzx  // r6.x <- irradiance.x; r6.y <- irradiance.y; r6.z <- irradiance.z

#line 53
mov r1.z, -r2.z
add r1.z, r1.z, l(1.000000)
max r11.xyz, r5.xyzx, r1.zzzz
mov r12.xyz, -r5.xyzx
add r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- fr.x; r11.y <- fr.y; r11.z <- fr.z

#line 54
mov r1.z, -r2.x
add r1.z, r1.z, l(1.000000)
mov r1.w, l(1.000000)
mul r1.w, r1.z, r1.w
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, r1.w
mul r11.xyz, r1.zzzz, r11.xyzx
add r11.xyz, r5.xyzx, r11.xyzx  // r11.x <- k_s.x; r11.y <- k_s.y; r11.z <- k_s.z

#line 55
mul r11.xyz, r1.xxxx, r11.xyzx
add r11.xyz, r1.yyyy, r11.xyzx  // r11.x <- fss_ess.x; r11.y <- fss_ess.y; r11.z <- fss_ess.z

#line 57
add r1.x, r1.y, r1.x
mov r1.x, -r1.x
add r1.x, r1.x, l(1.000000)  // r1.x <- ems

#line 58
mov r1.yzw, -r5.xxyz
add r1.yzw, r1.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
div r1.yzw, r1.yyzw, l(0.000000, 21.000000, 21.000000, 21.000000)
add r1.yzw, r1.yyzw, r5.xxyz  // r1.y <- f_avg.x; r1.z <- f_avg.y; r1.w <- f_avg.z

#line 59
mul r12.xyz, r11.xyzx, r1.xxxx
mul r12.xyz, r1.yzwy, r12.xyzx
mul r1.xyz, r1.xxxx, r1.yzwy
mov r1.xyz, -r1.xyzx
add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r1.xyz, r12.xyzx, r1.xyzx  // r1.x <- fms_ems.x; r1.y <- fms_ems.y; r1.z <- fms_ems.z

#line 61
mov r11.xyz, -r11.xyzx
add r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r11.xyz, r1.xyzx, r11.xyzx
mul r7.xyz, r7.xyzx, r11.xyzx  // r7.x <- k_d.x; r7.y <- k_d.y; r7.z <- k_d.z

#line 62
add r1.xyz, r1.xyzx, r7.xyzx
mul r1.xyz, r6.xyzx, r1.xyzx  // r1.x <- <IblRadianceLambertian return value>.x; r1.y <- <IblRadianceLambertian return value>.y; r1.z <- <IblRadianceLambertian return value>.z

#line 94 "C:\Users\2240225\Desktop\graphicEngine4\Shader\DefefferdPS.hlsl"
mul r1.xyz, r1.xyzx, cb11[2].xxxx  // r1.x <- iblDiffuse.x; r1.y <- iblDiffuse.y; r1.z <- iblDiffuse.z

#line 95
nop 
mov r4.xyz, r4.xyzx
mov r8.xyz, r8.xyzx
mov r2.z, r2.z
mov r5.xyz, r5.xyzx

#line 67 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
dp3 r1.w, r4.xyzx, r8.xyzx
max r1.w, r1.w, l(0.000000)
min r2.x, r1.w, l(1.000000)  // r2.x <- NoV

#line 69
max r6.xy, r2.xzxx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)  // r6.x <- brdf_sample_point.x; r6.y <- brdf_sample_point.y

#line 70
nop 
mov r6.xy, r6.xyxx

#line 18 "C:\Users\2240225\Desktop\graphicEngine4\Shader\imageBasedLighting.hlsli"
sample_indexable(texture2d)(float,float,float,float) r6.xy, r6.xyxx, t35.xyzw, s1
mov r6.xy, r6.xyxx  // r6.x <- <sampleLutGgx return value>.x; r6.y <- <sampleLutGgx return value>.y

#line 70 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
mov r6.xy, r6.xyxx  // r6.x <- f_ab.x; r6.y <- f_ab.y

#line 72
mov r7.xyz, -r8.xyzx
dp3 r1.w, r7.xyzx, r4.xyzx
add r1.w, r1.w, r1.w
mov r1.w, -r1.w
mul r4.xyz, r1.wwww, r4.xyzx
add r4.xyz, r7.xyzx, r4.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx  // r4.x <- R.x; r4.y <- R.y; r4.z <- R.z

#line 73
nop 
mov r4.xyz, r4.xyzx
mov r2.z, r2.z

#line 52 "C:\Users\2240225\Desktop\graphicEngine4\Shader\imageBasedLighting.hlsli"
resinfo_indexable(texturecube)(float,float,float,float)_uint r1.w, l(0), t34.xyzw
mov r1.w, r1.w  // r1.w <- numberOfLevels

#line 54
mov r3.w, l(1)
ineg r3.w, r3.w
iadd r1.w, r1.w, r3.w
utof r1.w, r1.w
mul r1.w, r1.w, r2.z  // r1.w <- lod

#line 56
sample_l_indexable(texturecube)(float,float,float,float) r4.xyz, r4.xyzx, t34.xyzw, s1, r1.w
mov r4.xyz, r4.xyzx  // r4.x <- <sampleSpecularPmrem return value>.x; r4.y <- <sampleSpecularPmrem return value>.y; r4.z <- <sampleSpecularPmrem return value>.z

#line 73 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
mov r4.xyz, r4.xyzx  // r4.x <- specular_light.x; r4.y <- specular_light.y; r4.z <- specular_light.z

#line 77
mov r1.w, -r2.z
add r1.w, r1.w, l(1.000000)
max r7.xyz, r5.xyzx, r1.wwww
mov r8.xyz, -r5.xyzx
add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- fr.x; r7.y <- fr.y; r7.z <- fr.z

#line 78
mov r1.w, -r2.x
add r1.w, r1.w, l(1.000000)
mov r2.x, l(1.000000)
mul r2.x, r1.w, r2.x
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.x
mul r7.xyz, r1.wwww, r7.xyzx
add r5.xyz, r5.xyzx, r7.xyzx  // r5.x <- k_s.x; r5.y <- k_s.y; r5.z <- k_s.z

#line 79
mul r5.xyz, r6.xxxx, r5.xyzx
add r5.xyz, r6.yyyy, r5.xyzx  // r5.x <- fss_ess.x; r5.y <- fss_ess.y; r5.z <- fss_ess.z

#line 81
mul r4.xyz, r4.xyzx, r5.xyzx  // r4.x <- <IblRadianceGgx return value>.x; r4.y <- <IblRadianceGgx return value>.y; r4.z <- <IblRadianceGgx return value>.z

#line 95 "C:\Users\2240225\Desktop\graphicEngine4\Shader\DefefferdPS.hlsl"
mul r4.xyz, r4.xyzx, cb11[2].xxxx  // r4.x <- iblSpecular.x; r4.y <- iblSpecular.y; r4.z <- iblSpecular.z

#line 99
add r5.xyz, r13.xyzx, r9.xyzx
add r1.xyz, r1.xyzx, r5.xyzx  // r1.x <- totalDiffuse.x; r1.y <- totalDiffuse.y; r1.z <- totalDiffuse.z

#line 100
add r5.xyz, r14.xyzx, r10.xyzx
add r4.xyz, r4.xyzx, r5.xyzx  // r4.x <- totalSpecular.x; r4.y <- totalSpecular.y; r4.z <- totalSpecular.z

#line 102
mul r5.xyz, r2.yyyy, r1.xyzx
mov r6.xyz, -r1.xyzx
add r5.xyz, r5.xyzx, r6.xyzx
mul r5.xyz, r2.wwww, r5.xyzx
add r1.xyz, r1.xyzx, r5.xyzx  // r1.x <- diffuse.x; r1.y <- diffuse.y; r1.z <- diffuse.z

#line 103
mul r2.xyz, r2.yyyy, r4.xyzx
mov r5.xyz, -r4.xyzx
add r2.xyz, r2.xyzx, r5.xyzx
mul r2.xyz, r2.xyzx, r2.wwww
add r2.xyz, r2.xyzx, r4.xyzx  // r2.x <- specular.x; r2.y <- specular.y; r2.z <- specular.z

#line 108
add r1.xyz, r1.xyzx, r2.xyzx
add r1.xyz, r3.xyzx, r1.xyzx
mov r1.w, l(1.000000)
mul o0.xyzw, r0.xyzw, r1.xyzw
ret 
// Approximately 435 instruction slots used
