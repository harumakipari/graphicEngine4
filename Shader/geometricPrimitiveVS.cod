//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer OBJECT_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 materialColor;              // Offset:   64 Size:    16
//
// }
//
// cbuffer VIEW_CONSTANTS_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//   float4 cameraPositon;              // Offset:   64 Size:    16 [unused]
//   row_major float4x4 view;           // Offset:   80 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:  144 Size:    64 [unused]
//   row_major float4x4 inverseProjection;// Offset:  208 Size:    64 [unused]
//   row_major float4x4 inverseViewProjection;// Offset:  272 Size:    64 [unused]
//   row_major float4x4 invView;        // Offset:  336 Size:    64 [unused]
//
// }
//
// cbuffer LIGHT_CONSTANT_BUFFER
// {
//
//   float4 lightDirection;             // Offset:    0 Size:    16
//   float4 colorLight;                 // Offset:   16 Size:    16 [unused]
//   float iblIntensity;                // Offset:   32 Size:     4 [unused]
//   int directionalLightEnable;        // Offset:   36 Size:     4 [unused]
//   int pointLightEnable;              // Offset:   40 Size:     4 [unused]
//   int pointLightCount;               // Offset:   44 Size:     4 [unused]
//   
//   struct PointLights
//   {
//       
//       float4 position;               // Offset:   48
//       float4 color;                  // Offset:   64
//       float range;                   // Offset:   80
//       float3 pads;                   // Offset:   84
//
//   } pointLights[8];                  // Offset:   48 Size:   384 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// OBJECT_CONSTANT_BUFFER            cbuffer      NA          NA            cb0      1 
// VIEW_CONSTANTS_BUFFER             cbuffer      NA          NA            cb4      1 
// LIGHT_CONSTANT_BUFFER             cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB4[4], immediateIndexed
dcl_constantbuffer CB11[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_temps 2
mul r0.xyzw, cb0[1].yyyy, cb4[1].xyzw
mad r0.xyzw, cb0[1].xxxx, cb4[0].xyzw, r0.xyzw
mad r0.xyzw, cb0[1].zzzz, cb4[2].xyzw, r0.xyzw
mad r0.xyzw, cb0[1].wwww, cb4[3].xyzw, r0.xyzw
mul r0.xyzw, r0.xyzw, v0.yyyy
mul r1.xyzw, cb0[0].yyyy, cb4[1].xyzw
mad r1.xyzw, cb0[0].xxxx, cb4[0].xyzw, r1.xyzw
mad r1.xyzw, cb0[0].zzzz, cb4[2].xyzw, r1.xyzw
mad r1.xyzw, cb0[0].wwww, cb4[3].xyzw, r1.xyzw
mad r0.xyzw, v0.xxxx, r1.xyzw, r0.xyzw
mul r1.xyzw, cb0[2].yyyy, cb4[1].xyzw
mad r1.xyzw, cb0[2].xxxx, cb4[0].xyzw, r1.xyzw
mad r1.xyzw, cb0[2].zzzz, cb4[2].xyzw, r1.xyzw
mad r1.xyzw, cb0[2].wwww, cb4[3].xyzw, r1.xyzw
mad r0.xyzw, v0.zzzz, r1.xyzw, r0.xyzw
mul r1.xyzw, cb0[3].yyyy, cb4[1].xyzw
mad r1.xyzw, cb0[3].xxxx, cb4[0].xyzw, r1.xyzw
mad r1.xyzw, cb0[3].zzzz, cb4[2].xyzw, r1.xyzw
mad r1.xyzw, cb0[3].wwww, cb4[3].xyzw, r1.xyzw
mad o0.xyzw, v0.wwww, r1.xyzw, r0.xyzw
mul r0.xyzw, v1.yyyy, cb0[1].xyzw
mad r0.xyzw, v1.xxxx, cb0[0].xyzw, r0.xyzw
mad r0.xyzw, v1.zzzz, cb0[2].xyzw, r0.xyzw
dp4 r1.x, r0.xyzw, r0.xyzw
rsq r1.x, r1.x
mul r0.xyzw, r0.xyzw, r1.xxxx
dp4 r1.x, -cb11[0].xyzw, -cb11[0].xyzw
rsq r1.x, r1.x
mul r1.xyzw, r1.xxxx, -cb11[0].xyzw
dp4 r0.x, r1.xyzw, r0.xyzw
max r0.x, r0.x, l(0.000000)
mul o1.xyz, r0.xxxx, cb0[4].xyzx
mov o1.w, cb0[4].w
ret 
// Approximately 34 instruction slots used
