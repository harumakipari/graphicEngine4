//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   bool enableSSAO;                   // Offset:    0 Size:     4 [unused]
//   float reflectionIntensity;         // Offset:    4 Size:     4
//   float time;                        // Offset:    8 Size:     4 [unused]
//   bool enableCascadedShadowMaps;     // Offset:   12 Size:     4 [unused]
//   bool enableSSR;                    // Offset:   16 Size:     4
//   bool enableFog;                    // Offset:   20 Size:     4
//   bool enableBloom;                  // Offset:   24 Size:     4
//   float elapsedTime;                 // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer SHADER_CONSTANT_BUFFER
// {
//
//   float luminanceThreshold;          // Offset:    0 Size:     4 [unused]
//   float gaussianSigma;               // Offset:    4 Size:     4 [unused]
//   float bloomIntenssity;             // Offset:    8 Size:     4 [unused]
//   float exposure;                    // Offset:   12 Size:     4 [unused]
//   float shadowColor;                 // Offset:   16 Size:     4
//   float shadowDepthBias;             // Offset:   20 Size:     4
//   bool colorizeCascadedLayer;        // Offset:   24 Size:     4
//   float maxDistance;                 // Offset:   28 Size:     4
//   float resolution;                  // Offset:   32 Size:     4
//   int steps;                         // Offset:   36 Size:     4 [unused]
//   float thickness;                   // Offset:   40 Size:     4
//
// }
//
// cbuffer CSM_CONSTANTS
// {
//
//   row_major float4x4 cascadedMatrices[4];// Offset:    0 Size:   256
//   float4 cascadedPlaneDistances;     // Offset:  256 Size:    16
//
// }
//
// cbuffer FOG_CONSTANTS_BUFFER
// {
//
//   float4 fogColor;                   // Offset:    0 Size:    16
//   float fogDensity;                  // Offset:   16 Size:     4 [unused]
//   float fogHeightFalloff;            // Offset:   20 Size:     4 [unused]
//   float groundLevel;                 // Offset:   24 Size:     4 [unused]
//   float fogCutoffDistance;           // Offset:   28 Size:     4 [unused]
//   float mieScatteringCoef;           // Offset:   32 Size:     4 [unused]
//   bool enableDither;                 // Offset:   36 Size:     4 [unused]
//   bool enableBlur;                   // Offset:   40 Size:     4
//   float timeScale;                   // Offset:   44 Size:     4 [unused]
//   float noiseScale;                  // Offset:   48 Size:     4 [unused]
//
// }
//
// cbuffer VIEW_CONSTANTS_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//   float4 cameraPositon;              // Offset:   64 Size:    16
//   row_major float4x4 view;           // Offset:   80 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:  144 Size:    64 [unused]
//   row_major float4x4 inverseProjection;// Offset:  208 Size:    64
//   row_major float4x4 inverseViewProjection;// Offset:  272 Size:    64
//   row_major float4x4 invView;        // Offset:  336 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// pointSamplerState                 sampler      NA          NA             s0      1 
// linearBorderBlackSamplerState     sampler      NA          NA             s3      1 
// linearBorderWhiteSamplerState     sampler      NA          NA             s4      1 
// samplerStates[5]                  sampler      NA          NA             s5      1 
// comparisonSamplerState          sampler_c      NA          NA             s7      1 
// colorTexture                      texture  float4          2d             t0      1 
// positionTexture                   texture  float4          2d             t1      1 
// normalTexture                     texture  float4          2d             t2      1 
// depthTexture                      texture  float4          2d             t3      1 
// bloomTexture                      texture  float4          2d             t4      1 
// fogTexture                        texture  float4          2d             t5      1 
// ambientOcclusionTexture           texture  float4          2d             t6      1 
// cascadedShadowMaps                texture  float4     2darray             t7      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
// CSM_CONSTANTS                     cbuffer      NA          NA            cb3      1 
// VIEW_CONSTANTS_BUFFER             cbuffer      NA          NA            cb4      1 
// FOG_CONSTANTS_BUFFER              cbuffer      NA          NA            cb8      1 
// SHADER_CONSTANT_BUFFER            cbuffer      NA          NA            cb9      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer CB1[2], immediateIndexed
dcl_constantbuffer CB9[3], immediateIndexed
dcl_constantbuffer CB3[17], dynamicIndexed
dcl_constantbuffer CB8[3], immediateIndexed
dcl_constantbuffer CB4[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s7, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2darray (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 13
dcl_indexableTemp x0[4], 4
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w; 
//   x0 <- layerColors
//
#line 502 "C:\Users\2240225\Desktop\graphicEngine4\Shader\FinalPassPS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s3  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 503
mov r0.w, r0.w  // r0.w <- alpha

#line 506
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t3.xyzw, s3
mov r1.x, r1.x  // r1.x <- depthNdc

#line 510
itof r1.y, l(2)
mul r1.y, r1.y, v1.x
itof r1.z, l(1)
mov r1.z, -r1.z
add r1.y, r1.z, r1.y  // r1.y <- positionNdc.x

#line 511
itof r1.z, l(-2)
mul r1.z, r1.z, v1.y
itof r1.w, l(1)
add r1.z, r1.w, r1.z  // r1.z <- positionNdc.y

#line 512
mov r1.x, r1.x  // r1.x <- positionNdc.z

#line 513
itof r1.w, l(1)  // r1.w <- positionNdc.w

#line 516
mul r2.xy, r1.yyyy, cb4[13].zwzz
mul r1.yz, r1.zzzz, cb4[14].zzwz
add r1.yz, r1.yyzy, r2.xxyx
mul r2.xy, r1.xxxx, cb4[15].zwzz
add r1.xy, r1.yzyy, r2.xyxx
mul r1.zw, r1.wwww, cb4[16].zzzw
add r1.xy, r1.zwzz, r1.xyxx  // r1.x <- positionViewSpace.z; r1.y <- positionViewSpace.w

#line 517
div r1.x, r1.x, r1.y

#line 528
ine r1.y, l(0, 0, 0, 0), cb1[1].x
if_nz r1.y

#line 530
  nop 

#line 226
  mov r1.y, l(10)  // r1.y <- steps

#line 229
  mov r1.z, l(0)  // r1.z <- mipLevel

#line 230
  resinfo_indexable(texture2d)(float,float,float,float)_uint r1.zw, r1.z, t1.zwxy  // r1.z <- dimensions.x; r1.w <- dimensions.y

#line 232
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t1.xyzw, s4  // r2.x <- position.x; r2.y <- position.y; r2.z <- position.z; r2.w <- position.w

#line 233
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.xyxx, t2.xyzw, s3  // r3.x <- normal.x; r3.y <- normal.y; r3.z <- normal.z

#line 235
  mov r2.xyzw, r2.xyzw  // r2.x <- positionFrom.x; r2.y <- positionFrom.y; r2.z <- positionFrom.z; r2.w <- positionFrom.w

#line 236
  mov r4.x, r2.w  // r4.x <- positionTo.w

#line 241
  mov r5.xyz, -cb4[4].xyzx
  add r5.xyz, r2.xyzx, r5.xyzx
  dp3 r2.w, r5.xyzx, r5.xyzx
  rsq r2.w, r2.w
  mul r5.xyz, r2.wwww, r5.xyzx  // r5.x <- incident.x; r5.y <- incident.y; r5.z <- incident.z

#line 243
  dp3 r2.w, r5.xyzx, r3.xyzx
  add r2.w, r2.w, r2.w
  mov r2.w, -r2.w
  mul r6.xyz, r2.wwww, r3.xyzx
  add r5.xyz, r5.xyzx, r6.xyzx
  dp3 r2.w, r5.xyzx, r5.xyzx
  rsq r2.w, r2.w
  mul r5.xyz, r2.wwww, r5.xyzx  // r5.x <- reflection.x; r5.y <- reflection.y; r5.z <- reflection.z

#line 245
  itof r6.xyz, l(0, 0, 0, 0)
  mul r6.xyz, r5.xyzx, r6.xyzx
  add r6.xyz, r2.xyzx, r6.xyzx  // r6.x <- startWorld.x; r6.y <- startWorld.y; r6.z <- startWorld.z
  itof r2.w, l(1)  // r2.w <- startWorld.w

#line 246
  mul r7.xyz, r5.xyzx, cb9[1].wwww
  add r7.xyz, r2.xyzx, r7.xyzx  // r7.x <- endWorld.x; r7.y <- endWorld.y; r7.z <- endWorld.z
  itof r3.w, l(1)  // r3.w <- endWorld.w

#line 247
  itof r5.w, l(0)
  lt r5.w, r7.z, r5.w
  if_nz r5.w

#line 249
    mov r8.xyz, -r6.xyzx
    add r8.xyz, r7.xyzx, r8.xyzx  // r8.x <- v.x; r8.y <- v.y; r8.z <- v.z

#line 250
    div r5.w, r6.z, r8.z
    mov r6.w, -r5.w
    max r5.w, r5.w, r6.w
    mul r8.xyz, r5.wwww, r8.xyzx
    add r7.xyz, r6.xyzx, r8.xyzx

#line 251
  endif 

#line 254
  mul r8.xyzw, r6.xxxx, cb4[0].xyzw
  mul r9.xyzw, r6.yyyy, cb4[1].xyzw
  add r8.xyzw, r8.xyzw, r9.xyzw
  mul r9.xyzw, r6.zzzz, cb4[2].xyzw
  add r8.xyzw, r8.xyzw, r9.xyzw
  mul r9.xyzw, r2.wwww, cb4[3].xyzw
  add r8.xyzw, r8.xyzw, r9.xyzw  // r8.x <- startFrag.x; r8.y <- startFrag.y; r8.z <- startFrag.z; r8.w <- startFrag.w

#line 255
  div r6.xyw, r8.xyxz, r8.wwww  // r6.x <- startFrag.x; r6.y <- startFrag.y; r6.w <- startFrag.z

#line 256
  nop 
  mov r6.xy, r6.xyxx

#line 26
  mul r2.w, r6.x, l(0.500000)
  add r8.x, r2.w, l(0.500000)  // r8.x <- uv.x

#line 27
  mul r2.w, r6.y, l(0.500000)
  mov r2.w, -r2.w
  add r8.y, r2.w, l(0.500000)  // r8.y <- uv.y

#line 28
  mov r8.x, r8.x  // r8.x <- <NdcToUv return value>.x
  mov r8.y, r8.y  // r8.y <- <NdcToUv return value>.y

#line 256
  mov r8.xy, r8.xyxx  // r8.x <- startFrag.x; r8.y <- startFrag.y

#line 257
  utof r6.x, r1.z
  utof r6.y, r1.w
  mul r6.xy, r6.xyxx, r8.xyxx  // r6.x <- startFrag.x; r6.y <- startFrag.y

#line 260
  mul r8.xyzw, r7.xxxx, cb4[0].xyzw
  mul r9.xyzw, r7.yyyy, cb4[1].xyzw
  add r8.xyzw, r8.xyzw, r9.xyzw
  mul r9.xyzw, r7.zzzz, cb4[2].xyzw
  add r8.xyzw, r8.xyzw, r9.xyzw
  mul r9.xyzw, r3.wwww, cb4[3].xyzw
  add r8.xyzw, r8.xyzw, r9.xyzw  // r8.x <- endFrag.x; r8.y <- endFrag.y; r8.z <- endFrag.z; r8.w <- endFrag.w

#line 261
  div r7.xyw, r8.xyxz, r8.wwww  // r7.x <- endFrag.x; r7.y <- endFrag.y; r7.w <- endFrag.z

#line 262
  nop 
  mov r7.xy, r7.xyxx

#line 26
  mul r2.w, r7.x, l(0.500000)
  add r8.x, r2.w, l(0.500000)  // r8.x <- uv.x

#line 27
  mul r2.w, r7.y, l(0.500000)
  mov r2.w, -r2.w
  add r8.y, r2.w, l(0.500000)  // r8.y <- uv.y

#line 28
  mov r8.x, r8.x  // r8.x <- <NdcToUv return value>.x
  mov r8.y, r8.y  // r8.y <- <NdcToUv return value>.y

#line 262
  mov r8.xy, r8.xyxx  // r8.x <- endFrag.x; r8.y <- endFrag.y

#line 263
  utof r7.x, r1.z
  utof r7.y, r1.w
  mul r7.xy, r7.xyxx, r8.xyxx  // r7.x <- endFrag.x; r7.y <- endFrag.y

#line 265
  mov r6.xy, r6.xyxx  // r6.x <- frag.x; r6.y <- frag.y

#line 268
  utof r8.x, r1.z
  utof r8.y, r1.w
  div r8.xy, r6.xyxx, r8.xyxx  // r8.x <- uv.x; r8.y <- uv.y

#line 270
  mov r2.w, -r6.x
  add r9.x, r2.w, r7.x  // r9.x <- deltaX

#line 271
  mov r2.w, -r6.y
  add r9.y, r2.w, r7.y  // r9.y <- deltaY

#line 273
  mov r2.w, -r9.x
  max r2.w, r2.w, r9.x
  mov r3.w, -r9.y
  max r3.w, r3.w, r9.y
  ge r2.w, r2.w, r3.w
  movc r2.w, r2.w, l(1), l(0)
  itof r2.w, r2.w  // r2.w <- useX

#line 274
  mov r3.w, -r9.y
  max r3.w, r3.w, r9.y
  mov r5.w, -r9.x
  max r5.w, r5.w, r9.x
  mov r8.z, -r3.w
  add r5.w, r5.w, r8.z
  mul r5.w, r2.w, r5.w
  add r3.w, r3.w, r5.w
  itof r5.w, l(0)
  itof r8.z, l(1)
  max r5.w, r5.w, cb9[2].x
  min r5.w, r8.z, r5.w
  mul r3.w, r3.w, r5.w  // r3.w <- delta

#line 276
  max r5.w, r3.w, l(0.001000)
  div r8.zw, r9.xxxy, r5.wwww  // r8.z <- increment.x; r8.w <- increment.y

#line 278
  itof r5.w, l(0)  // r5.w <- search0

#line 279
  itof r9.z, l(0)  // r9.z <- search1

#line 281
  mov r9.w, l(0)  // r9.w <- hit0

#line 282
  mov r10.x, l(0)  // r10.x <- hit1

#line 285
  mov r10.y, cb9[2].z  // r10.y <- depth

#line 288
  itof r10.z, l(64)
  min r3.w, r3.w, r10.z

#line 290
  mov r10.z, l(0)  // r10.z <- i
  ftoi r10.w, r3.w
  ilt r10.w, r10.z, r10.w
  if_nz r10.w

#line 292
    add r11.xy, r6.xyxx, r8.zwzz  // r11.x <- frag.x; r11.y <- frag.y

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, r10.z, l(1)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else   // Prior locations: r6.x <- startFrag.x; r6.y <- startFrag.y; r6.x <- frag.x; r6.y <- frag.y
    mov r11.xy, r6.xyxx  // r11.x <- frag.x; r11.y <- frag.y
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(1)
    else 
      mov r10.z, l(1)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(2)
    else 
      mov r10.z, l(2)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(3)
    else 
      mov r10.z, l(3)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(4)
    else 
      mov r10.z, l(4)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(5)
    else 
      mov r10.z, l(5)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(6)
    else 
      mov r10.z, l(6)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(7)
    else 
      mov r10.z, l(7)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(8)
    else 
      mov r10.z, l(8)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(9)
    else 
      mov r10.z, l(9)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(10)
    else 
      mov r10.z, l(10)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(11)
    else 
      mov r10.z, l(11)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(12)
    else 
      mov r10.z, l(12)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(13)
    else 
      mov r10.z, l(13)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(14)
    else 
      mov r10.z, l(14)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(15)
    else 
      mov r10.z, l(15)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(16)
    else 
      mov r10.z, l(16)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(17)
    else 
      mov r10.z, l(17)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(18)
    else 
      mov r10.z, l(18)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(19)
    else 
      mov r10.z, l(19)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(20)
    else 
      mov r10.z, l(20)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(21)
    else 
      mov r10.z, l(21)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(22)
    else 
      mov r10.z, l(22)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(23)
    else 
      mov r10.z, l(23)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(24)
    else 
      mov r10.z, l(24)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(25)
    else 
      mov r10.z, l(25)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(26)
    else 
      mov r10.z, l(26)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(27)
    else 
      mov r10.z, l(27)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(28)
    else 
      mov r10.z, l(28)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(29)
    else 
      mov r10.z, l(29)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(30)
    else 
      mov r10.z, l(30)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z  // v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w; x0 <- layerColors
    not r11.w, r11.w
    if_z r11.z  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w
      iadd r10.z, l(1), l(31)
    else   // Prior locations: r0.w <- alpha
      mov r10.z, l(31)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)  // r1.x <- positionViewSpace.z
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z  // r1.y <- steps
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r1.z <- dimensions.x; r1.w <- dimensions.y; r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz  // r2.x <- position.x; r2.y <- position.y; r2.z <- position.z
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx  // r3.x <- normal.x; r3.y <- normal.y; r3.z <- normal.z
      mul r12.zw, r4.wwww, cb4[2].zzzw  // r2.x <- positionFrom.x; r2.y <- positionFrom.y; r2.z <- positionFrom.z; r4.x <- positionTo.w
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y  // r5.x <- reflection.x; r5.y <- reflection.y; r5.z <- reflection.z
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r6.z <- startWorld.z; r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x  // r7.z <- endWorld.z
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif   // r6.w <- startFrag.z
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(32)
    else 
      mov r10.z, l(32)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z  // r7.x <- endFrag.x; r7.y <- endFrag.y; r7.w <- endFrag.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw  // r8.x <- uv.x; r8.y <- uv.y
      add r12.xy, r12.zwzz, r12.xyxx  // r9.x <- deltaX
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r9.y <- deltaY; r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x  // r2.w <- useX
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z  // r3.w <- delta
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y  // r8.z <- increment.x; r8.w <- increment.y; r5.w <- search0
      mul r12.y, r9.z, r12.y  // r9.z <- search1
      add r12.y, r7.z, r12.y  // r9.w <- hit0
      div r12.x, r12.x, r12.y  // r10.x <- hit1; r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w  // r10.y <- depth
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)  // r10.z <- i
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w  // r11.x <- frag.x; r11.y <- frag.y

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(33)
    else 
      mov r10.z, l(33)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(34)
    else 
      mov r10.z, l(34)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(35)
    else 
      mov r10.z, l(35)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(36)
    else 
      mov r10.z, l(36)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(37)
    else 
      mov r10.z, l(37)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(38)
    else 
      mov r10.z, l(38)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(39)
    else 
      mov r10.z, l(39)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(40)
    else 
      mov r10.z, l(40)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(41)
    else 
      mov r10.z, l(41)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(42)
    else 
      mov r10.z, l(42)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(43)
    else 
      mov r10.z, l(43)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(44)
    else 
      mov r10.z, l(44)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(45)
    else 
      mov r10.z, l(45)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(46)
    else 
      mov r10.z, l(46)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(47)
    else 
      mov r10.z, l(47)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(48)
    else 
      mov r10.z, l(48)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(49)
    else 
      mov r10.z, l(49)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(50)
    else 
      mov r10.z, l(50)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(51)
    else 
      mov r10.z, l(51)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(52)
    else 
      mov r10.z, l(52)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(53)
    else 
      mov r10.z, l(53)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(54)
    else 
      mov r10.z, l(54)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(55)
    else 
      mov r10.z, l(55)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(56)
    else 
      mov r10.z, l(56)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(57)
    else 
      mov r10.z, l(57)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(58)
    else 
      mov r10.z, l(58)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(59)
    else 
      mov r10.z, l(59)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(60)
    else 
      mov r10.z, l(60)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(61)
    else 
      mov r10.z, l(61)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r11.z, r3.w
  ilt r11.z, r10.z, r11.z
  and r10.w, r10.w, r11.z
  if_nz r10.w

#line 292
    add r11.xy, r8.zwzz, r11.xyxx

#line 293
    utof r12.x, r1.z
    utof r12.y, r1.w
    div r8.xy, r11.xyxx, r12.xyxx

#line 294
    itof r11.z, l(0)
    ge r11.z, r11.z, r8.x
    itof r11.w, l(1)
    ge r11.w, r8.x, r11.w
    or r11.z, r11.w, r11.z
    itof r11.w, l(0)
    ge r11.w, r11.w, r8.y
    or r11.z, r11.w, r11.z
    itof r11.w, l(1)
    ge r11.w, r8.y, r11.w
    or r11.z, r11.w, r11.z
    if_nz r11.z

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r11.z
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r12.xy, r4.yyyy, cb4[0].zwzz
      mul r12.zw, r4.zzzz, cb4[1].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, r4.wwww, cb4[2].zzzw
      add r12.xy, r12.zwzz, r12.xyxx
      mul r12.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
      add r12.xy, r12.zwzz, r12.xyxx  // r12.x <- positionToClip.z; r12.y <- positionToClip.w

#line 304
      div r11.w, r12.x, r12.y  // r11.w <- positionToClip.z

#line 306
      mov r12.x, -r6.y
      add r12.x, r11.y, r12.x
      div r12.x, r12.x, r9.y
      mov r12.y, -r6.x
      add r12.y, r11.x, r12.y
      div r12.y, r12.y, r9.x
      mov r12.z, -r12.x
      add r12.y, r12.z, r12.y
      mul r12.y, r2.w, r12.y
      add r12.x, r12.y, r12.x  // r12.x <- search1

#line 307
      max r12.x, r12.x, l(0.000000)
      min r9.z, r12.x, l(1.000000)  // r9.z <- search1

#line 311
      mov r12.x, -r6.w
      add r12.x, r7.w, r12.x
      mul r12.x, r9.z, r12.x
      add r12.x, r6.w, r12.x  // r12.x <- interpolatedZ

#line 312
      mov r11.w, -r11.w
      add r11.w, r11.w, r12.x  // r11.w <- depthDiff

#line 314
      mul r12.x, r6.z, r7.z
      mov r12.y, -r7.z
      add r12.y, r6.z, r12.y
      mul r12.y, r9.z, r12.y
      add r12.y, r7.z, r12.y
      div r12.x, r12.x, r12.y  // r12.x <- viewDistance

#line 315
      mov r12.y, -r4.w
      add r10.y, r12.y, r12.x

#line 327
      itof r12.x, l(0)
      lt r12.x, r12.x, r11.w
      lt r11.w, r11.w, cb9[2].z
      and r11.w, r11.w, r12.x
      if_nz r11.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    else 
      mov r11.w, l(-1)
    endif 
    or r11.z, r11.z, r11.w

#line 290
    not r11.w, r11.z
    not r11.w, r11.w
    if_z r11.z
      iadd r10.z, l(1), l(62)
    else 
      mov r10.z, l(62)
    endif 
    or r11.z, r11.z, r11.w

#line 337
  else 
    mov r11.z, l(-1)
  endif 

#line 290
  not r11.z, r11.z
  and r10.w, r10.w, r11.z
  ftoi r3.w, r3.w
  ilt r3.w, r10.z, r3.w
  and r3.w, r3.w, r10.w
  if_nz r3.w

#line 292
    add r8.zw, r8.zzzw, r11.xxxy  // r8.z <- frag.x; r8.w <- frag.y

#line 293
    utof r11.x, r1.z
    utof r11.y, r1.w
    div r8.xy, r8.zwzz, r11.xyxx

#line 294
    itof r3.w, l(0)
    ge r3.w, r3.w, r8.x
    itof r10.z, l(1)
    ge r10.z, r8.x, r10.z
    or r3.w, r3.w, r10.z
    itof r10.z, l(0)
    ge r10.z, r10.z, r8.y
    or r3.w, r3.w, r10.z
    itof r10.z, l(1)
    ge r10.z, r8.y, r10.z
    or r3.w, r3.w, r10.z
    if_nz r3.w

#line 296
      mov r9.w, l(0)

#line 298
    endif 

#line 302
    if_z r3.w
      sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 303
      mul r10.zw, r4.yyyy, cb4[0].zzzw
      mul r11.xy, r4.zzzz, cb4[1].zwzz
      add r10.zw, r10.zzzw, r11.xxxy
      mul r11.xy, r4.wwww, cb4[2].zwzz
      add r10.zw, r10.zzzw, r11.xxxy
      mul r11.xy, cb4[3].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      add r10.zw, r10.zzzw, r11.xxxy  // r10.z <- positionToClip.z; r10.w <- positionToClip.w

#line 304
      div r3.w, r10.z, r10.w  // r3.w <- positionToClip.z

#line 306
      mov r10.z, -r6.y
      add r8.w, r8.w, r10.z
      div r8.w, r8.w, r9.y
      mov r9.y, -r6.x
      add r8.z, r8.z, r9.y
      div r8.z, r8.z, r9.x
      mov r9.x, -r8.w
      add r8.z, r8.z, r9.x
      mul r2.w, r2.w, r8.z
      add r2.w, r2.w, r8.w  // r2.w <- search1

#line 307
      max r2.w, r2.w, l(0.000000)
      min r9.z, r2.w, l(1.000000)  // r9.z <- search1

#line 311
      mov r2.w, -r6.w
      add r2.w, r2.w, r7.w
      mul r2.w, r2.w, r9.z
      add r2.w, r2.w, r6.w  // r2.w <- interpolatedZ

#line 312
      mov r3.w, -r3.w
      add r2.w, r2.w, r3.w  // r2.w <- depthDiff

#line 314
      mul r3.w, r6.z, r7.z
      mov r8.z, -r7.z
      add r6.z, r6.z, r8.z
      mul r6.z, r6.z, r9.z
      add r6.z, r6.z, r7.z
      div r3.w, r3.w, r6.z  // r3.w <- viewDistance

#line 315
      mov r6.z, -r4.w
      add r10.y, r3.w, r6.z

#line 327
      itof r3.w, l(0)
      lt r3.w, r3.w, r2.w
      lt r2.w, r2.w, cb9[2].z
      and r2.w, r2.w, r3.w
      if_nz r2.w

#line 329
        mov r9.w, l(1)

#line 331
      else 

#line 334
        mov r5.w, r9.z

#line 335
      endif 
    endif 

#line 337
  endif 

#line 341
  mov r2.w, -r5.w
  add r2.w, r2.w, r9.z
  div r2.w, r2.w, l(2.000000)
  add r2.w, r2.w, r5.w  // r2.w <- search1

#line 342
  imul null, r1.y, r1.y, r9.w

#line 345
  mov r3.w, l(0)  // r3.w <- i
  ilt r6.z, r3.w, r1.y
  not r7.z, r6.z
  if_nz r6.z

#line 347
    mov r8.zw, -r6.xxxy
    add r8.zw, r7.xxxy, r8.zzzw
    mul r8.zw, r2.wwww, r8.zzzw
    add r8.zw, r6.xxxy, r8.zzzw  // r8.z <- frag.x; r8.w <- frag.y

#line 348
    utof r9.x, r1.z
    utof r9.y, r1.w
    div r8.xy, r8.zwzz, r9.xyxx

#line 350
    sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 351
    mul r8.zw, r4.yyyy, cb4[0].zzzw
    mul r9.xy, r4.zzzz, cb4[1].zwzz
    add r8.zw, r8.zzzw, r9.xxxy
    mul r9.xy, r4.wwww, cb4[2].zwzz
    add r8.zw, r8.zzzw, r9.xxxy
    mul r9.xy, cb4[3].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
    add r8.zw, r8.zzzw, r9.xxxy  // r8.z <- positionToClip.z; r8.w <- positionToClip.w

#line 352
    div r8.z, r8.z, r8.w

#line 371
    mov r8.w, -r6.w
    add r8.w, r7.w, r8.w
    mul r8.w, r2.w, r8.w
    add r8.w, r6.w, r8.w  // r8.w <- interpolatedZ

#line 372
    mov r8.z, -r8.z
    add r8.z, r8.z, r8.w  // r8.z <- depthDiff

#line 374
    itof r8.w, l(0)
    lt r8.w, r8.w, r8.z
    lt r8.z, r8.z, cb9[2].z
    and r8.z, r8.z, r8.w
    if_nz r8.z

#line 376
      mov r10.x, l(1)

#line 377
      mov r8.z, -r5.w
      add r8.z, r2.w, r8.z
      itof r8.w, l(2)
      div r8.z, r8.z, r8.w
      add r2.w, r5.w, r8.z

#line 378
    else 

#line 381
      mov r8.z, r2.w  // r8.z <- temp

#line 382
      mov r8.w, -r5.w
      add r8.w, r2.w, r8.w
      itof r9.x, l(2)
      div r8.w, r8.w, r9.x
      add r2.w, r2.w, r8.w

#line 383
      mov r5.w, r8.z

#line 384
    endif 

#line 386
    iadd r3.w, r3.w, l(1)
  endif 

#line 345
  not r7.z, r7.z
  and r6.z, r6.z, r7.z
  ilt r7.z, r3.w, r1.y
  and r6.z, r6.z, r7.z
  not r7.z, r6.z
  ilt r8.z, r3.w, r1.y
  if_nz r8.z

#line 347
    mov r8.zw, -r6.xxxy
    add r8.zw, r7.xxxy, r8.zzzw
    mul r8.zw, r2.wwww, r8.zzzw
    add r8.zw, r6.xxxy, r8.zzzw  // r8.z <- frag.x; r8.w <- frag.y

#line 348
    utof r9.x, r1.z
    utof r9.y, r1.w
    div r8.xy, r8.zwzz, r9.xyxx

#line 350
    sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 351
    mul r8.zw, r4.yyyy, cb4[0].zzzw
    mul r9.xy, r4.zzzz, cb4[1].zwzz
    add r8.zw, r8.zzzw, r9.xxxy
    mul r9.xy, r4.wwww, cb4[2].zwzz
    add r8.zw, r8.zzzw, r9.xxxy
    mul r9.xy, cb4[3].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
    add r8.zw, r8.zzzw, r9.xxxy  // r8.z <- positionToClip.z; r8.w <- positionToClip.w

#line 352
    div r8.z, r8.z, r8.w

#line 371
    mov r8.w, -r6.w
    add r8.w, r7.w, r8.w
    mul r8.w, r2.w, r8.w
    add r8.w, r6.w, r8.w  // r8.w <- interpolatedZ

#line 372
    mov r8.z, -r8.z
    add r8.z, r8.z, r8.w  // r8.z <- depthDiff

#line 374
    itof r8.w, l(0)
    lt r8.w, r8.w, r8.z
    lt r8.z, r8.z, cb9[2].z
    and r8.z, r8.z, r8.w
    if_nz r8.z

#line 376
      mov r10.x, l(1)

#line 377
      mov r8.z, -r5.w
      add r8.z, r2.w, r8.z
      itof r8.w, l(2)
      div r8.z, r8.z, r8.w
      add r2.w, r5.w, r8.z

#line 378
    else 

#line 381
      mov r8.z, r2.w  // r8.z <- temp

#line 382
      mov r8.w, -r5.w
      add r8.w, r2.w, r8.w
      itof r9.x, l(2)
      div r8.w, r8.w, r9.x
      add r2.w, r2.w, r8.w

#line 383
      mov r5.w, r8.z

#line 384
    endif 

#line 386
    iadd r8.z, l(1), l(1)  // r8.z <- i
  else   // Prior locations: r3.w <- i
    mov r8.z, r3.w  // r8.z <- i
  endif 

#line 345
  not r7.z, r7.z
  and r6.z, r6.z, r7.z
  ilt r7.z, r8.z, r1.y
  and r6.z, r6.z, r7.z
  not r7.z, r6.z
  ilt r8.w, r3.w, r1.y
  ilt r9.x, r8.z, r1.y
  and r8.w, r8.w, r9.x
  if_nz r8.w

#line 347
    mov r9.xy, -r6.xyxx
    add r9.xy, r7.xyxx, r9.xyxx
    mul r9.xy, r2.wwww, r9.xyxx
    add r9.xy, r6.xyxx, r9.xyxx  // r9.x <- frag.x; r9.y <- frag.y

#line 348
    utof r11.x, r1.z
    utof r11.y, r1.w
    div r8.xy, r9.xyxx, r11.xyxx

#line 350
    sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 351
    mul r9.xy, r4.yyyy, cb4[0].zwzz
    mul r9.zw, r4.zzzz, cb4[1].zzzw
    add r9.xy, r9.zwzz, r9.xyxx
    mul r9.zw, r4.wwww, cb4[2].zzzw
    add r9.xy, r9.zwzz, r9.xyxx
    mul r9.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    add r9.xy, r9.zwzz, r9.xyxx  // r9.x <- positionToClip.z; r9.y <- positionToClip.w

#line 352
    div r8.w, r9.x, r9.y  // r8.w <- positionToClip.z

#line 371
    mov r9.x, -r6.w
    add r9.x, r7.w, r9.x
    mul r9.x, r2.w, r9.x
    add r9.x, r6.w, r9.x  // r9.x <- interpolatedZ

#line 372
    mov r8.w, -r8.w
    add r8.w, r8.w, r9.x  // r8.w <- depthDiff

#line 374
    itof r9.x, l(0)  // v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w; x0 <- layerColors
    lt r9.x, r9.x, r8.w  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w
    lt r8.w, r8.w, cb9[2].z
    and r8.w, r8.w, r9.x  // r0.w <- alpha
    if_nz r8.w

#line 376
      mov r10.x, l(1)

#line 377
      mov r8.w, -r5.w
      add r8.w, r2.w, r8.w
      itof r9.x, l(2)
      div r8.w, r8.w, r9.x
      add r2.w, r5.w, r8.w

#line 378
    else 

#line 381
      mov r8.w, r2.w  // r8.w <- temp

#line 382
      mov r9.x, -r5.w
      add r9.x, r2.w, r9.x
      itof r9.y, l(2)
      div r9.x, r9.x, r9.y
      add r2.w, r2.w, r9.x

#line 383
      mov r5.w, r8.w

#line 384
    endif 

#line 386
    iadd r8.w, l(1), l(2)  // r8.w <- i
  else   // Prior locations: r9.w <- hit0; r8.z <- i
    mov r8.w, r8.z  // r8.w <- i
  endif 

#line 345
  not r7.z, r7.z
  and r6.z, r6.z, r7.z
  ilt r7.z, r8.w, r1.y
  and r6.z, r6.z, r7.z
  not r7.z, r6.z  // r1.x <- positionViewSpace.z
  ilt r3.w, r3.w, r1.y
  ilt r8.z, r8.z, r1.y
  and r3.w, r3.w, r8.z
  ilt r8.z, r8.w, r1.y  // r1.y <- steps
  and r3.w, r3.w, r8.z
  if_nz r3.w  // r1.z <- dimensions.x; r1.w <- dimensions.y

#line 347
    mov r9.xy, -r6.xyxx  // r2.x <- position.x; r2.y <- position.y; r2.z <- position.z
    add r9.xy, r7.xyxx, r9.xyxx
    mul r9.xy, r2.wwww, r9.xyxx  // r3.x <- normal.x; r3.y <- normal.y; r3.z <- normal.z
    add r9.xy, r6.xyxx, r9.xyxx  // r9.x <- frag.x; r9.y <- frag.y

#line 348
    utof r11.x, r1.z  // r2.x <- positionFrom.x; r2.y <- positionFrom.y; r2.z <- positionFrom.z; r4.x <- positionTo.w
    utof r11.y, r1.w
    div r8.xy, r9.xyxx, r11.xyxx

#line 350
    sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 351
    mul r9.xy, r4.yyyy, cb4[0].zwzz
    mul r9.zw, r4.zzzz, cb4[1].zzzw
    add r9.xy, r9.zwzz, r9.xyxx
    mul r9.zw, r4.wwww, cb4[2].zzzw
    add r9.xy, r9.zwzz, r9.xyxx
    mul r9.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    add r9.xy, r9.zwzz, r9.xyxx  // r9.x <- positionToClip.z; r9.y <- positionToClip.w

#line 352
    div r3.w, r9.x, r9.y  // r5.x <- reflection.x; r5.y <- reflection.y; r5.z <- reflection.z; r3.w <- positionToClip.z

#line 371
    mov r8.z, -r6.w
    add r8.z, r7.w, r8.z
    mul r8.z, r2.w, r8.z
    add r8.z, r6.w, r8.z  // r8.z <- interpolatedZ

#line 372
    mov r3.w, -r3.w
    add r3.w, r3.w, r8.z  // r3.w <- depthDiff

#line 374
    itof r8.z, l(0)
    lt r8.z, r8.z, r3.w
    lt r3.w, r3.w, cb9[2].z
    and r3.w, r3.w, r8.z
    if_nz r3.w

#line 376
      mov r10.x, l(1)

#line 377
      mov r3.w, -r5.w
      add r3.w, r2.w, r3.w
      itof r8.z, l(2)
      div r3.w, r3.w, r8.z
      add r2.w, r3.w, r5.w

#line 378
    else 

#line 381
      mov r3.w, r2.w  // r3.w <- temp

#line 382
      mov r8.z, -r5.w
      add r8.z, r2.w, r8.z
      itof r9.x, l(2)
      div r8.z, r8.z, r9.x
      add r2.w, r2.w, r8.z

#line 383
      mov r5.w, r3.w

#line 384
    endif 

#line 386
    iadd r8.w, l(1), l(3)
  endif 

#line 345
  not r3.w, r7.z
  and r3.w, r3.w, r6.z  // r6.w <- startFrag.z
  ilt r6.z, r8.w, r1.y
  and r3.w, r3.w, r6.z
  not r6.z, r3.w
  if_nz r3.w

#line 347
    mov r9.xy, -r6.xyxx
    add r9.xy, r7.xyxx, r9.xyxx
    mul r9.xy, r2.wwww, r9.xyxx
    add r9.xy, r6.xyxx, r9.xyxx  // r9.x <- frag.x; r9.y <- frag.y

#line 348
    utof r11.x, r1.z
    utof r11.y, r1.w
    div r8.xy, r9.xyxx, r11.xyxx

#line 350
    sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 351
    mul r9.xy, r4.yyyy, cb4[0].zwzz
    mul r9.zw, r4.zzzz, cb4[1].zzzw
    add r9.xy, r9.zwzz, r9.xyxx
    mul r9.zw, r4.wwww, cb4[2].zzzw
    add r9.xy, r9.zwzz, r9.xyxx
    mul r9.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    add r9.xy, r9.zwzz, r9.xyxx  // r7.x <- endFrag.x; r7.y <- endFrag.y; r7.w <- endFrag.z; r9.x <- positionToClip.z; r9.y <- positionToClip.w

#line 352
    div r7.z, r9.x, r9.y  // r7.z <- positionToClip.z

#line 371
    mov r8.z, -r6.w
    add r8.z, r7.w, r8.z
    mul r8.z, r2.w, r8.z
    add r8.z, r6.w, r8.z  // r8.z <- interpolatedZ

#line 372
    mov r7.z, -r7.z
    add r7.z, r7.z, r8.z  // r7.z <- depthDiff

#line 374
    itof r8.z, l(0)
    lt r8.z, r8.z, r7.z
    lt r7.z, r7.z, cb9[2].z
    and r7.z, r7.z, r8.z
    if_nz r7.z

#line 376
      mov r10.x, l(1)

#line 377
      mov r7.z, -r5.w
      add r7.z, r2.w, r7.z  // r8.x <- uv.x; r8.y <- uv.y
      itof r8.z, l(2)
      div r7.z, r7.z, r8.z
      add r2.w, r5.w, r7.z

#line 378
    else 

#line 381
      mov r7.z, r2.w  // r7.z <- temp

#line 382
      mov r8.z, -r5.w
      add r8.z, r2.w, r8.z
      itof r9.x, l(2)
      div r8.z, r8.z, r9.x
      add r2.w, r2.w, r8.z

#line 383
      mov r5.w, r7.z

#line 384
    endif 

#line 386
    iadd r8.w, l(1), l(4)
  endif 

#line 345
  not r6.z, r6.z
  and r3.w, r3.w, r6.z
  ilt r6.z, r8.w, r1.y
  and r3.w, r3.w, r6.z
  not r6.z, r3.w
  if_nz r3.w

#line 347
    mov r9.xy, -r6.xyxx
    add r9.xy, r7.xyxx, r9.xyxx
    mul r9.xy, r2.wwww, r9.xyxx
    add r9.xy, r6.xyxx, r9.xyxx  // r9.x <- frag.x; r9.y <- frag.y

#line 348
    utof r11.x, r1.z
    utof r11.y, r1.w
    div r8.xy, r9.xyxx, r11.xyxx

#line 350
    sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 351
    mul r9.xy, r4.yyyy, cb4[0].zwzz  // r5.w <- search0
    mul r9.zw, r4.zzzz, cb4[1].zzzw
    add r9.xy, r9.zwzz, r9.xyxx
    mul r9.zw, r4.wwww, cb4[2].zzzw  // r10.x <- hit1
    add r9.xy, r9.zwzz, r9.xyxx  // r10.y <- depth
    mul r9.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    add r9.xy, r9.zwzz, r9.xyxx  // r9.x <- positionToClip.z; r9.y <- positionToClip.w

#line 352
    div r7.z, r9.x, r9.y  // r7.z <- positionToClip.z

#line 371
    mov r8.z, -r6.w
    add r8.z, r7.w, r8.z
    mul r8.z, r2.w, r8.z
    add r8.z, r6.w, r8.z  // r8.z <- interpolatedZ

#line 372
    mov r7.z, -r7.z
    add r7.z, r7.z, r8.z  // r7.z <- depthDiff

#line 374
    itof r8.z, l(0)
    lt r8.z, r8.z, r7.z
    lt r7.z, r7.z, cb9[2].z
    and r7.z, r7.z, r8.z
    if_nz r7.z

#line 376
      mov r10.x, l(1)

#line 377
      mov r7.z, -r5.w
      add r7.z, r2.w, r7.z
      itof r8.z, l(2)
      div r7.z, r7.z, r8.z
      add r2.w, r5.w, r7.z

#line 378
    else 

#line 381
      mov r7.z, r2.w  // r7.z <- temp

#line 382
      mov r8.z, -r5.w
      add r8.z, r2.w, r8.z
      itof r9.x, l(2)
      div r8.z, r8.z, r9.x
      add r2.w, r2.w, r8.z

#line 383
      mov r5.w, r7.z

#line 384
    endif 

#line 386
    iadd r8.w, l(1), l(5)
  endif 

#line 345
  not r6.z, r6.z
  and r3.w, r3.w, r6.z
  ilt r6.z, r8.w, r1.y
  and r3.w, r3.w, r6.z
  not r6.z, r3.w
  if_nz r3.w

#line 347
    mov r9.xy, -r6.xyxx
    add r9.xy, r7.xyxx, r9.xyxx
    mul r9.xy, r2.wwww, r9.xyxx
    add r9.xy, r6.xyxx, r9.xyxx  // r9.x <- frag.x; r9.y <- frag.y

#line 348
    utof r11.x, r1.z
    utof r11.y, r1.w
    div r8.xy, r9.xyxx, r11.xyxx

#line 350
    sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 351
    mul r9.xy, r4.yyyy, cb4[0].zwzz
    mul r9.zw, r4.zzzz, cb4[1].zzzw
    add r9.xy, r9.zwzz, r9.xyxx
    mul r9.zw, r4.wwww, cb4[2].zzzw
    add r9.xy, r9.zwzz, r9.xyxx
    mul r9.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    add r9.xy, r9.zwzz, r9.xyxx  // r9.x <- positionToClip.z; r9.y <- positionToClip.w

#line 352
    div r7.z, r9.x, r9.y  // r7.z <- positionToClip.z

#line 371
    mov r8.z, -r6.w
    add r8.z, r7.w, r8.z
    mul r8.z, r2.w, r8.z
    add r8.z, r6.w, r8.z  // r8.z <- interpolatedZ

#line 372
    mov r7.z, -r7.z
    add r7.z, r7.z, r8.z  // r7.z <- depthDiff

#line 374
    itof r8.z, l(0)
    lt r8.z, r8.z, r7.z
    lt r7.z, r7.z, cb9[2].z
    and r7.z, r7.z, r8.z
    if_nz r7.z

#line 376
      mov r10.x, l(1)

#line 377
      mov r7.z, -r5.w
      add r7.z, r2.w, r7.z
      itof r8.z, l(2)
      div r7.z, r7.z, r8.z
      add r2.w, r5.w, r7.z

#line 378
    else 

#line 381
      mov r7.z, r2.w  // r7.z <- temp

#line 382
      mov r8.z, -r5.w
      add r8.z, r2.w, r8.z
      itof r9.x, l(2)
      div r8.z, r8.z, r9.x
      add r2.w, r2.w, r8.z

#line 383
      mov r5.w, r7.z

#line 384
    endif 

#line 386
    iadd r8.w, l(1), l(6)
  endif 

#line 345
  not r6.z, r6.z
  and r3.w, r3.w, r6.z
  ilt r6.z, r8.w, r1.y
  and r3.w, r3.w, r6.z
  not r6.z, r3.w
  if_nz r3.w

#line 347
    mov r9.xy, -r6.xyxx
    add r9.xy, r7.xyxx, r9.xyxx
    mul r9.xy, r2.wwww, r9.xyxx
    add r9.xy, r6.xyxx, r9.xyxx  // r9.x <- frag.x; r9.y <- frag.y

#line 348
    utof r11.x, r1.z
    utof r11.y, r1.w
    div r8.xy, r9.xyxx, r11.xyxx

#line 350
    sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 351
    mul r9.xy, r4.yyyy, cb4[0].zwzz
    mul r9.zw, r4.zzzz, cb4[1].zzzw
    add r9.xy, r9.zwzz, r9.xyxx
    mul r9.zw, r4.wwww, cb4[2].zzzw
    add r9.xy, r9.zwzz, r9.xyxx
    mul r9.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    add r9.xy, r9.zwzz, r9.xyxx  // r9.x <- positionToClip.z; r9.y <- positionToClip.w

#line 352
    div r7.z, r9.x, r9.y  // r7.z <- positionToClip.z

#line 371
    mov r8.z, -r6.w
    add r8.z, r7.w, r8.z
    mul r8.z, r2.w, r8.z
    add r8.z, r6.w, r8.z  // r8.z <- interpolatedZ

#line 372
    mov r7.z, -r7.z
    add r7.z, r7.z, r8.z  // r7.z <- depthDiff

#line 374
    itof r8.z, l(0)
    lt r8.z, r8.z, r7.z
    lt r7.z, r7.z, cb9[2].z
    and r7.z, r7.z, r8.z
    if_nz r7.z

#line 376
      mov r10.x, l(1)

#line 377
      mov r7.z, -r5.w
      add r7.z, r2.w, r7.z
      itof r8.z, l(2)
      div r7.z, r7.z, r8.z
      add r2.w, r5.w, r7.z

#line 378
    else 

#line 381
      mov r7.z, r2.w  // r7.z <- temp

#line 382
      mov r8.z, -r5.w
      add r8.z, r2.w, r8.z
      itof r9.x, l(2)
      div r8.z, r8.z, r9.x
      add r2.w, r2.w, r8.z

#line 383
      mov r5.w, r7.z

#line 384
    endif 

#line 386
    iadd r8.w, l(1), l(7)
  endif 

#line 345
  not r6.z, r6.z
  and r3.w, r3.w, r6.z
  ilt r6.z, r8.w, r1.y
  and r3.w, r3.w, r6.z
  not r6.z, r3.w
  if_nz r3.w

#line 347
    mov r9.xy, -r6.xyxx
    add r9.xy, r7.xyxx, r9.xyxx
    mul r9.xy, r2.wwww, r9.xyxx
    add r9.xy, r6.xyxx, r9.xyxx  // r9.x <- frag.x; r9.y <- frag.y

#line 348
    utof r11.x, r1.z
    utof r11.y, r1.w
    div r8.xy, r9.xyxx, r11.xyxx

#line 350
    sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 351
    mul r9.xy, r4.yyyy, cb4[0].zwzz
    mul r9.zw, r4.zzzz, cb4[1].zzzw
    add r9.xy, r9.zwzz, r9.xyxx
    mul r9.zw, r4.wwww, cb4[2].zzzw
    add r9.xy, r9.zwzz, r9.xyxx
    mul r9.zw, cb4[3].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    add r9.xy, r9.zwzz, r9.xyxx  // r9.x <- positionToClip.z; r9.y <- positionToClip.w

#line 352
    div r7.z, r9.x, r9.y  // r7.z <- positionToClip.z

#line 371
    mov r8.z, -r6.w
    add r8.z, r7.w, r8.z
    mul r8.z, r2.w, r8.z
    add r8.z, r6.w, r8.z  // r8.z <- interpolatedZ

#line 372
    mov r7.z, -r7.z
    add r7.z, r7.z, r8.z  // r7.z <- depthDiff

#line 374
    itof r8.z, l(0)
    lt r8.z, r8.z, r7.z
    lt r7.z, r7.z, cb9[2].z
    and r7.z, r7.z, r8.z
    if_nz r7.z

#line 376
      mov r10.x, l(1)

#line 377
      mov r7.z, -r5.w
      add r7.z, r2.w, r7.z
      itof r8.z, l(2)
      div r7.z, r7.z, r8.z
      add r2.w, r5.w, r7.z

#line 378
    else 

#line 382
      mov r5.w, -r5.w
      add r5.w, r2.w, r5.w
      itof r7.z, l(2)
      div r5.w, r5.w, r7.z
      add r2.w, r2.w, r5.w

#line 384
    endif 

#line 386
    iadd r8.w, l(1), l(8)
  endif 

#line 345
  not r5.w, r6.z
  and r3.w, r3.w, r5.w
  ilt r1.y, r8.w, r1.y
  and r1.y, r1.y, r3.w
  if_nz r1.y

#line 347
    mov r8.zw, -r6.xxxy
    add r7.xy, r7.xyxx, r8.zwzz
    mul r7.xy, r2.wwww, r7.xyxx
    add r6.xy, r6.xyxx, r7.xyxx  // r6.x <- frag.x; r6.y <- frag.y

#line 348
    utof r7.x, r1.z
    utof r7.y, r1.w
    div r8.xy, r6.xyxx, r7.xyxx

#line 350
    sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r8.xyxx, t1.wxyz, s4  // r4.y <- positionTo.x; r4.z <- positionTo.y; r4.w <- positionTo.z

#line 351
    mul r1.yz, r4.yyyy, cb4[0].zzwz
    mul r4.yz, r4.zzzz, cb4[1].zzwz
    add r1.yz, r1.yyzy, r4.yyzy
    mul r4.yz, r4.wwww, cb4[2].zzwz
    add r1.yz, r1.yyzy, r4.yyzy
    mul r4.yz, cb4[3].zzwz, l(0.000000, 1.000000, 1.000000, 0.000000)
    add r1.yz, r1.yyzy, r4.yyzy  // r1.y <- positionToClip.z; r1.z <- positionToClip.w

#line 352
    div r1.y, r1.y, r1.z

#line 371
    mov r1.z, -r6.w
    add r1.z, r1.z, r7.w
    mul r1.z, r1.z, r2.w
    add r1.z, r1.z, r6.w  // r1.z <- interpolatedZ

#line 372
    mov r1.y, -r1.y
    add r1.y, r1.y, r1.z  // r1.y <- depthDiff

#line 374
    itof r1.z, l(0)
    lt r1.z, r1.z, r1.y
    lt r1.y, r1.y, cb9[2].z
    and r1.y, r1.y, r1.z
    if_nz r1.y

#line 376
      mov r10.x, l(1)

#line 384
    endif 

#line 386
  endif 

#line 388
  itof r1.y, r10.x  // r1.y <- visibility

#line 389
  itof r1.z, l(1)
  dp3 r1.w, r2.xyzx, r2.xyzx
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, r2.xyzx
  mov r2.xyz, -r2.xyzx
  dp3 r1.w, r2.xyzx, r5.xyzx
  itof r2.x, l(0)
  max r1.w, r1.w, r2.x
  mov r1.w, -r1.w
  add r1.z, r1.w, r1.z
  mul r1.y, r1.z, r1.y

#line 390
  itof r1.z, l(1)
  div r1.w, r10.y, cb9[2].z
  itof r2.x, l(0)
  itof r2.y, l(1)
  max r1.w, r1.w, r2.x
  min r1.w, r2.y, r1.w
  mov r1.w, -r1.w
  add r1.z, r1.w, r1.z
  mul r1.y, r1.z, r1.y

#line 391
  mul r1.y, r4.x, r1.y

#line 392
  itof r1.z, l(0)
  lt r1.z, r8.x, r1.z
  itof r1.w, l(1)
  lt r1.w, r1.w, r8.x
  or r1.z, r1.w, r1.z
  itof r1.w, l(0)
  lt r1.w, r8.y, r1.w
  or r1.z, r1.w, r1.z
  itof r1.w, l(1)
  lt r1.w, r1.w, r8.y
  or r1.z, r1.w, r1.z
  movc r1.z, r1.z, l(0), l(1)
  itof r1.z, r1.z
  mul r1.y, r1.z, r1.y

#line 393
  itof r1.z, l(0)
  itof r1.w, l(1)
  max r1.y, r1.z, r1.y
  min r1.y, r1.w, r1.y  // r1.y <- visibility

#line 395
  nop 
  mov r1.z, l(0.040000)
  itof r1.w, l(0)
  dp3 r2.x, r5.xyzx, r3.xyzx
  max r1.w, r1.w, r2.x

#line 33
  itof r2.x, l(1)
  mov r2.y, -r1.z
  add r2.x, r2.y, r2.x
  itof r2.y, l(1)
  mov r1.w, -r1.w
  add r1.w, r1.w, r2.y
  mov r2.y, l(1.000000)
  mul r2.y, r1.w, r2.y
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r2.y
  mul r1.w, r1.w, r2.x
  add r1.z, r1.w, r1.z  // r1.z <- <FSchlick return value>

#line 395
  max r1.z, r1.z, l(0.000000)
  min r1.z, r1.z, l(1.000000)  // r1.z <- fresnel

#line 396
  sample_indexable(texture2d)(float,float,float,float) r2.xyz, r8.xyxx, t0.xyzw, s3
  mov r2.xyz, r2.xyzx  // r2.x <- reflectionColor.x; r2.y <- reflectionColor.y; r2.z <- reflectionColor.z

#line 397
  mul r2.xyz, r1.zzzz, r2.xyzx
  mul r1.yzw, r1.yyyy, r2.xxyz
  mul r1.yzw, r1.yyzw, cb1[0].yyyy  // r1.y <- reflectionColor.x; r1.z <- reflectionColor.y; r1.w <- reflectionColor.z

#line 398
  mov r1.yzw, r1.yyzw  // r1.y <- <CalculatedSSRColor return value>.x; r1.z <- <CalculatedSSRColor return value>.y; r1.w <- <CalculatedSSRColor return value>.z

#line 530
  add r0.xyz, r0.xyzx, r1.yzwy

#line 531
endif 

#line 532
mov r1.y, l(0)  // r1.y <- mip_level

#line 534
resinfo_indexable(texture2d)(float,float,float,float)_uint r1.yz, r1.y, t3.zxyw
mov r1.y, r1.y  // r1.y <- depthDimensions.x
mov r1.z, r1.z  // r1.z <- depthDimensions.y

#line 535
sample_indexable(texture2d)(float,float,float,float) r1.w, v1.xyxx, t3.yzwx, s5
mov r1.w, r1.w  // r1.w <- depth

#line 552
mov r2.x, l(4.000000)  // r2.x <- radius

#line 553
mov r2.y, l(32.000000)  // r2.y <- sigma

#line 554
mov r2.z, l(0.010000)  // r2.z <- sigma2

#line 556
mov r1.w, r1.w  // r1.w <- curr_depth

#line 557
mov r2.w, l(0)  // r2.w <- weight

#line 560
itof r3.x, l(0)  // r3.x <- accumulated_occlusion

#line 562
mov r3.y, l(-4.000000)  // r3.y <- i
mov r4.x, r2.w  // r4.x <- weight
mov r4.y, r3.x  // r4.y <- accumulated_occlusion
mov r3.z, r3.y  // r3.z <- i
loop 
  ge r3.w, r2.x, r3.z
  breakc_z r3.w

#line 564
  mov r3.w, l(-4.000000)  // r3.w <- j
  mov r5.xy, r4.xyxx  // r5.x <- weight; r5.y <- accumulated_occlusion
  mov r5.z, r3.w  // r5.z <- j
  loop 
    ge r4.z, r2.x, r5.z
    breakc_z r4.z

#line 566
    utof r4.z, r1.y
    div r4.z, r3.z, r4.z  // r4.z <- dx

#line 567
    utof r4.w, r1.z
    div r4.w, r5.z, r4.w  // r4.w <- dy

#line 568
    add r6.x, r4.z, v1.x  // r6.x <- uv.x
    add r6.y, r4.w, v1.y  // r6.y <- uv.y

#line 570
    mul r4.z, r3.z, r3.z
    mul r4.w, r5.z, r5.z
    add r4.z, r4.w, r4.z  // r4.z <- distance

#line 571
    mov r4.z, -r4.z
    div r4.z, r4.z, r2.y
    mul r4.z, r4.z, l(1.442695)
    exp r4.z, r4.z  // r4.z <- domain_gaussian

#line 573
    itof r4.w, l(0)
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t3.yzwx, s5, r4.w
    mov r4.w, r4.w  // r4.w <- sample_depth

#line 574
    mov r5.w, -r4.w
    add r5.w, r1.w, r5.w
    mov r4.w, -r4.w
    add r4.w, r1.w, r4.w
    mul r4.w, r4.w, r5.w  // r4.w <- distance

#line 575
    mov r4.w, -r4.w
    div r4.w, r4.w, r2.z
    mul r4.w, r4.w, l(1.442695)
    exp r4.w, r4.w  // r4.w <- range_gaussian

#line 578
    itof r5.w, l(0)
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r6.xyxx, t6.yzwx, s5, r5.w
    mov r5.w, r5.w  // r5.w <- sample_occlusion

#line 579
    mul r5.w, r4.z, r5.w
    mul r5.w, r4.w, r5.w
    add r5.y, r5.w, r5.y

#line 581
    mul r4.z, r4.w, r4.z
    add r5.x, r4.z, r5.x

#line 582
    add r5.z, r5.z, l(1.000000)
  endloop 
  mov r4.x, r5.x  // r4.x <- weight
  mov r4.y, r5.y  // r4.y <- accumulated_occlusion

#line 583
  add r3.z, r3.z, l(1.000000)
endloop 

#line 584
div r1.y, r4.y, r4.x  // r1.y <- occlusion

#line 590
mul r0.xyz, r0.xyzx, r1.yyyy

#line 594
nop 
mov r1.yz, v1.xxyx

#line 164
nop 
mov r1.yz, r1.yyzy

#line 147
sample_indexable(texture2d)(float,float,float,float) r2.z, v1.xyxx, t3.yzxw, s3
mov r2.z, r2.z  // r2.z <- depthNdc

#line 150
itof r1.w, l(2)
mul r1.y, r1.w, r1.y
itof r1.w, l(1)
mov r1.w, -r1.w
add r2.x, r1.w, r1.y  // r2.x <- positionNdc.x

#line 151
itof r1.y, l(-2)
mul r1.y, r1.y, r1.z
itof r1.z, l(1)
add r2.y, r1.z, r1.y  // r2.y <- positionNdc.y

#line 152
mov r2.z, r2.z  // r2.z <- positionNdc.z

#line 153
itof r2.w, l(1)  // r2.w <- positionNdc.w

#line 154
mov r2.x, r2.x  // r2.x <- <CalculatedPositionNDC return value>.x
mov r2.y, r2.y  // r2.y <- <CalculatedPositionNDC return value>.y
mov r2.z, r2.z  // r2.z <- <CalculatedPositionNDC return value>.z
mov r2.w, r2.w  // r2.w <- <CalculatedPositionNDC return value>.w

#line 164
mov r2.xyzw, r2.xyzw  // r2.x <- positionNdc.x; r2.y <- positionNdc.y; r2.z <- positionNdc.z; r2.w <- positionNdc.w

#line 166
mul r1.yz, r2.xxxx, cb4[13].zzwz
mul r3.xy, r2.yyyy, cb4[14].zwzz
add r1.yz, r1.yyzy, r3.xxyx
mul r3.xy, r2.zzzz, cb4[15].zwzz
add r1.yz, r1.yyzy, r3.xxyx
mul r3.xy, r2.wwww, cb4[16].zwzz
add r1.yz, r1.yyzy, r3.xxyx  // r1.y <- positionViewSpace.z; r1.z <- positionViewSpace.w

#line 167
div r1.y, r1.y, r1.z

#line 170
mul r3.xyzw, r2.xxxx, cb4[17].xyzw
mul r4.xyzw, r2.yyyy, cb4[18].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, r2.zzzz, cb4[19].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r2.xyzw, r2.wwww, cb4[20].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- positionWorldSpace.x; r2.y <- positionWorldSpace.y; r2.z <- positionWorldSpace.z; r2.w <- positionWorldSpace.w

#line 171
div r2.xyzw, r2.xyzw, r2.wwww

#line 175
mov r1.y, r1.y  // r1.y <- depthViewSpace

#line 176
mov r1.z, l(-1)  // r1.z <- cascadeIndex

#line 177
mov r1.w, l(0)  // r1.w <- layer
mov r3.x, r1.z  // r3.x <- cascadeIndex
mov r3.y, r1.w  // r3.y <- layer
loop 
  mov r3.z, l(4)
  ult r3.z, r3.y, r3.z
  breakc_z r3.z

#line 179
  dp4 r3.z, cb3[16].xyzw, icb[r3.y + 0].xyzw  // r3.z <- distance

#line 180
  lt r3.z, r1.y, r3.z
  if_nz r3.z

#line 182
    mov r3.x, r3.y

#line 183
    break 

#line 184
  endif 

#line 177
  iadd r3.y, r3.y, l(1)

#line 185
endloop 

#line 186
mov r1.y, l(1.000000)  // r1.y <- shadowFactor

#line 187
ilt r1.z, l(-1), r3.x
if_nz r1.z

#line 190
  imul null, r1.w, r3.x, l(4)
  mul r4.xyzw, r2.xxxx, cb3[r1.w + 0].xyzw
  mul r5.xyzw, r2.yyyy, cb3[r1.w + 1].xyzw
  add r4.xyzw, r4.xyzw, r5.xyzw
  mul r5.xyzw, r2.zzzz, cb3[r1.w + 2].xyzw
  add r4.xyzw, r4.xyzw, r5.xyzw
  mul r2.xyzw, r2.wwww, cb3[r1.w + 3].xyzw
  add r2.xyzw, r2.xyzw, r4.xyzw  // r2.x <- positionLightSpace.x; r2.y <- positionLightSpace.y; r2.z <- positionLightSpace.z; r2.w <- positionLightSpace.w

#line 191
  div r2.xyz, r2.xyzx, r2.wwww

#line 193
  mul r1.w, r2.x, l(0.500000)
  add r4.x, r1.w, l(0.500000)  // r4.x <- positionLightSpace.x

#line 194
  mul r1.w, r2.y, l(-0.500000)
  add r4.y, r1.w, l(0.500000)  // r4.y <- positionLightSpace.y

#line 196
  itof r4.z, r3.x
  mov r1.w, -cb9[1].y
  add r1.w, r1.w, r2.z
  sample_c_lz_indexable(texture2darray)(float,float,float,float) r1.y, r4.xyzx, t7.xxxx, s7, r1.w

#line 198
  mov r1.y, r1.y  // r1.y <- <CalculatedCascadedShadowFactor return value>

#line 217
  mov r1.w, r1.y  // r1.w <- <CalculatedCascadedShadowFactor return value>
  mov r1.y, r1.y
endif 

#line 218
if_z r1.z
  mov r1.w, r1.y
endif 

#line 594
mov r1.w, r1.w  // r1.w <- shadowFactor

#line 598
mov r1.x, r1.x  // r1.x <- depthViewSpace

#line 599
mov r1.y, l(-1)  // r1.y <- cascadeIndex

#line 600
mov r1.z, l(0)  // r1.z <- layer
mov r2.x, r1.y  // r2.x <- cascadeIndex
mov r2.y, r1.z  // r2.y <- layer
loop 
  mov r2.z, l(4)
  ult r2.z, r2.y, r2.z
  breakc_z r2.z

#line 602
  dp4 r2.z, cb3[16].xyzw, icb[r2.y + 0].xyzw  // r2.z <- distance

#line 603
  lt r2.z, r1.x, r2.z
  if_nz r2.z

#line 605
    mov r2.x, r2.y

#line 606
    break 

#line 607
  endif 

#line 600
  iadd r2.y, r2.y, l(1)

#line 608
endloop 

#line 609
ilt r1.x, l(-1), r2.x
if_nz r1.x

#line 611
  itof r1.xyz, l(1, 1, 1, 0)  // r1.x <- layerColor.x; r1.y <- layerColor.y; r1.z <- layerColor.z

#line 613
  ine r2.y, l(0, 0, 0, 0), cb9[1].z
  if_nz r2.y

#line 615
    itof r2.yzw, l(0, 1, 0, 0)
    itof r3.xyz, l(0, 1, 0, 0)
    itof r4.xyz, l(0, 0, 1, 0)
    itof r5.xyz, l(1, 1, 0, 0)
    mov x0[0].xyz, r2.yzwy
    mov x0[1].xyz, r3.xyzx
    mov x0[2].xyz, r4.xyzx
    mov x0[3].xyz, r5.xyzx

#line 622
    mov r1.xyz, x0[r2.x + 0].xyzx

#line 623
  endif 

#line 625
  mov r2.x, -cb9[1].x
  add r2.x, r2.x, l(1.000000)
  mul r1.w, r1.w, r2.x
  add r1.w, r1.w, cb9[1].x
  mul r1.xyz, r1.xyzx, r1.wwww
  mul r0.xyz, r0.xyzx, r1.xyzx

#line 626
endif 

#line 635
ine r1.x, l(0, 0, 0, 0), cb1[1].y
if_nz r1.x

#line 637
  nop 
  mov r1.xy, v1.xyxx

#line 450
  mov r1.z, l(0)  // r1.z <- depthMipLevel

#line 451
  resinfo_indexable(texture2d)(float,float,float,float)_uint r1.zw, r1.z, t3.zwxy  // r1.z <- depthMapDimensions.x; r1.w <- depthMapDimensions.y

#line 454
  ine r2.x, l(0, 0, 0, 0), cb8[2].z
  if_nz r2.x

#line 456
    sample_indexable(texture2d)(float,float,float,float) r2.x, v1.xyxx, t3.xyzw, s3  // r2.x <- depth

#line 458
    mov r2.y, l(0)  // r2.y <- accumulatedRadiance

#line 459
    mov r2.z, l(0)  // r2.z <- accumulatedWeight

#line 460
    mov r2.w, l(4.000000)  // r2.w <- radius

#line 461
    mov r3.x, l(-4.000000)  // r3.x <- x
    mov r4.x, r2.y  // r4.x <- accumulatedRadiance
    mov r4.y, r2.z  // r4.y <- accumulatedWeight
    mov r3.y, r3.x  // r3.y <- x
    loop 
      ge r3.z, r2.w, r3.y
      breakc_z r3.z

#line 463
      mov r3.z, l(-4.000000)  // r3.z <- y
      mov r5.xy, r4.xyxx  // r5.x <- accumulatedRadiance; r5.y <- accumulatedWeight
      mov r5.z, r3.z  // r5.z <- y
      loop 
        ge r3.w, r2.w, r5.z
        breakc_z r3.w

#line 465
        utof r3.w, r1.z
        utof r4.z, r1.w
        div r6.x, r3.y, r3.w  // r6.x <- offset.x
        div r6.y, r5.z, r4.z  // r6.y <- offset.y

#line 466
        add r4.zw, r1.xxxy, r6.xxxy  // r4.z <- texcoord.x; r4.w <- texcoord.y

#line 468
        sample_indexable(texture2d)(float,float,float,float) r3.w, r4.zwzz, t5.yzwx, s3
        mov r3.w, r3.w  // r3.w <- sampledRadiance

#line 470
        mul r5.w, r3.y, r3.y
        mul r6.x, r5.z, r5.z
        add r5.w, r5.w, r6.x  // r5.w <- distance

#line 471
        mov r6.x, l(32.000000)  // r6.x <- sigma

#line 472
        mov r5.w, -r5.w
        div r5.w, r5.w, r6.x
        mul r5.w, r5.w, l(1.442695)
        exp r5.w, r5.w  // r5.w <- domainGaussian

#line 474
        sample_indexable(texture2d)(float,float,float,float) r4.z, r4.zwzz, t3.yzxw, s3
        mov r4.z, r4.z  // r4.z <- sampledDepth

#line 475
        mov r4.w, -r4.z
        add r4.w, r2.x, r4.w
        mov r4.z, -r4.z
        add r4.z, r2.x, r4.z
        mul r4.z, r4.z, r4.w  // r4.z <- distance

#line 476
        mov r4.w, l(0.000100)  // r4.w <- sigma2

#line 477
        mov r4.z, -r4.z
        div r4.z, r4.z, r4.w
        mul r4.z, r4.z, l(1.442695)
        exp r4.z, r4.z  // r4.z <- rangeGaussian

#line 479
        mul r3.w, r3.w, r5.w
        mul r3.w, r4.z, r3.w
        add r5.x, r3.w, r5.x

#line 480
        mul r3.w, r4.z, r5.w
        add r5.y, r3.w, r5.y

#line 481
        add r5.z, r5.z, l(1.000000)
      endloop 
      mov r4.x, r5.x  // r4.x <- accumulatedRadiance
      mov r4.y, r5.y  // r4.y <- accumulatedWeight

#line 482
      add r3.y, r3.y, l(1.000000)
    endloop 

#line 483
    max r1.x, r4.y, l(0.000010)
    div r1.x, r4.x, r1.x  // r1.x <- fogFacter

#line 484
  else   // Prior locations: r1.x <- pin.texcoord.x

#line 487
    sample_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t5.xyzw, s3  // r1.x <- fogFacter

#line 488
  endif 

#line 490
  mul r1.yzw, cb8[0].wwww, cb8[0].xxyz
  itof r2.x, l(0)
  max r1.x, r1.x, r2.x
  mul r1.xyz, r1.xxxx, r1.yzwy  // r1.x <- fogColor_.x; r1.y <- fogColor_.y; r1.z <- fogColor_.z

#line 491
  mov r1.xyz, r1.xyzx  // r1.x <- <CalculatedFogColor return value>.x; r1.y <- <CalculatedFogColor return value>.y; r1.z <- <CalculatedFogColor return value>.z

#line 637
  add r0.xyz, r0.xyzx, r1.xyzx

#line 638
endif 

#line 645
ine r1.x, l(0, 0, 0, 0), cb1[1].z
if_nz r1.x

#line 647
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t4.xyzw, s0  // r1.x <- bloom.x; r1.y <- bloom.y; r1.z <- bloom.z

#line 648
  add r0.xyz, r0.xyzx, r1.xyzx

#line 649
endif 

#line 656
nop 
mov r0.xyz, r0.xyzx

#line 39
dp3 r1.x, r0.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)  // r1.x <- l

#line 40
add r1.yzw, r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
div r1.yzw, r0.xxyz, r1.yyzw  // r1.y <- tc.x; r1.z <- tc.y; r1.w <- tc.z

#line 42
add r1.x, r1.x, l(1.000000)
div r0.xyz, r0.xyzx, r1.xxxx
mov r2.xyz, -r0.xyzx
add r2.xyz, r1.yzwy, r2.xyzx
mul r1.xyz, r1.yzwy, r2.xyzx
add r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- <JodieReinhardTonemap return value>.x; r0.y <- <JodieReinhardTonemap return value>.y; r0.z <- <JodieReinhardTonemap return value>.z

#line 656
mov r0.xyz, r0.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 701
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
exp r0.xyz, r0.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 702
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 6356 instruction slots used
