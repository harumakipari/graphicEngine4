//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   bool enableSSAO;                   // Offset:    0 Size:     4 [unused]
//   float reflectionIntensity;         // Offset:    4 Size:     4
//   float time;                        // Offset:    8 Size:     4 [unused]
//   bool enableCascadedShadowMaps;     // Offset:   12 Size:     4 [unused]
//   bool enableSSR;                    // Offset:   16 Size:     4
//   bool enableFog;                    // Offset:   20 Size:     4
//   bool enableBloom;                  // Offset:   24 Size:     4
//   float elapsedTime;                 // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer SHADER_CONSTANT_BUFFER
// {
//
//   float shadowColor;                 // Offset:    0 Size:     4
//   float shadowDepthBias;             // Offset:    4 Size:     4
//   bool colorizeCascadedLayer;        // Offset:    8 Size:     4
//   float maxDistance;                 // Offset:   12 Size:     4
//   float resolution;                  // Offset:   16 Size:     4
//   int steps;                         // Offset:   20 Size:     4 [unused]
//   float thickness;                   // Offset:   24 Size:     4
//
// }
//
// cbuffer CSM_CONSTANTS
// {
//
//   row_major float4x4 cascadedMatrices[4];// Offset:    0 Size:   256
//   float4 cascadedPlaneDistances;     // Offset:  256 Size:    16
//
// }
//
// cbuffer FOG_CONSTANTS_BUFFER
// {
//
//   float4 fogColor;                   // Offset:    0 Size:    16
//   float fogDensity;                  // Offset:   16 Size:     4 [unused]
//   float fogHeightFalloff;            // Offset:   20 Size:     4 [unused]
//   float groundLevel;                 // Offset:   24 Size:     4 [unused]
//   float fogCutoffDistance;           // Offset:   28 Size:     4 [unused]
//   float mieScatteringCoef;           // Offset:   32 Size:     4 [unused]
//   bool enableDither;                 // Offset:   36 Size:     4 [unused]
//   bool enableBlur;                   // Offset:   40 Size:     4
//   float timeScale;                   // Offset:   44 Size:     4 [unused]
//   float noiseScale;                  // Offset:   48 Size:     4 [unused]
//
// }
//
// cbuffer VIEW_CONSTANTS_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//   float4 cameraPositon;              // Offset:   64 Size:    16
//   row_major float4x4 view;           // Offset:   80 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:  144 Size:    64 [unused]
//   row_major float4x4 inverseProjection;// Offset:  208 Size:    64
//   row_major float4x4 inverseViewProjection;// Offset:  272 Size:    64
//   row_major float4x4 invView;        // Offset:  336 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// pointSamplerState                 sampler      NA          NA             s0      1 
// linearBorderBlackSamplerState     sampler      NA          NA             s3      1 
// linearBorderWhiteSamplerState     sampler      NA          NA             s4      1 
// comparisonSamplerState          sampler_c      NA          NA             s7      1 
// colorTexture                      texture  float4          2d             t0      1 
// positionTexture                   texture  float4          2d             t1      1 
// normalTexture                     texture  float4          2d             t2      1 
// depthTexture                      texture  float4          2d             t3      1 
// bloomTexture                      texture  float4          2d             t4      1 
// fogTexture                        texture  float4          2d             t5      1 
// cascadedShadowMaps                texture  float4     2darray             t7      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
// CSM_CONSTANTS                     cbuffer      NA          NA            cb3      1 
// VIEW_CONSTANTS_BUFFER             cbuffer      NA          NA            cb4      1 
// FOG_CONSTANTS_BUFFER              cbuffer      NA          NA            cb8      1 
// SHADER_CONSTANT_BUFFER            cbuffer      NA          NA            cb9      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { 0, 1.000000, 1.000000, 0} }
dcl_constantbuffer CB1[2], immediateIndexed
dcl_constantbuffer CB9[2], immediateIndexed
dcl_constantbuffer CB3[17], dynamicIndexed
dcl_constantbuffer CB8[3], immediateIndexed
dcl_constantbuffer CB4[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s7, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 14
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t3.xyzw, s3
mad r1.y, v1.x, l(2.000000), l(-1.000000)
mad r1.z, v1.y, l(-2.000000), l(1.000000)
mul r2.xy, r1.zzzz, cb4[14].zwzz
mad r2.xy, r1.yyyy, cb4[13].zwzz, r2.xyxx
mad r2.xy, r1.xxxx, cb4[15].zwzz, r2.xyxx
add r2.xy, r2.xyxx, cb4[16].zwzz
div r1.w, r2.x, r2.y
if_nz cb1[1].x
  resinfo_indexable(texture2d)(float,float,float,float)_uint r2.xy, l(0), t1.xyzw
  sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v1.xyxx, t1.xyzw, s4
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, v1.xyxx, t2.xyzw, s3
  add r5.xyz, r3.xyzx, -cb4[4].xyzx
  dp3 r2.z, r5.xyzx, r5.xyzx
  rsq r2.z, r2.z
  mul r5.xyz, r2.zzzz, r5.xyzx
  dp3 r2.z, r5.xyzx, r4.xyzx
  add r2.z, r2.z, r2.z
  mad r5.xyz, r4.xyzx, -r2.zzzz, r5.xyzx
  dp3 r2.z, r5.xyzx, r5.xyzx
  rsq r2.z, r2.z
  mul r5.xyz, r2.zzzz, r5.xyzx
  mul r6.xyz, r5.xyzx, cb9[0].wwww
  mad r7.xyz, r5.xyzx, cb9[0].wwww, r3.xyzx
  lt r2.z, r7.z, l(0.000000)
  div r2.w, r3.z, r6.z
  mad r6.xyz, r6.xyzx, |r2.wwww|, r3.xyzx
  movc r6.xyz, r2.zzzz, r6.xyzx, r7.xyzx
  mul r7.xyzw, r3.yyyy, cb4[1].xyzw
  mad r7.xyzw, r3.xxxx, cb4[0].xyzw, r7.xyzw
  mad r7.xyzw, r3.zzzz, cb4[2].xyzw, r7.xyzw
  add r7.xyzw, r7.xyzw, cb4[3].xyzw
  div r7.xyz, r7.xyzx, r7.wwww
  mul r2.zw, r7.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
  utof r2.xy, r2.xyxx
  mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 1.000000, -1.000000), l(0.000000, 0.000000, 0.500000, 0.500000)
  mul r7.xy, r2.xyxx, r2.zwzz
  mul r8.xyzw, r6.yyyy, cb4[1].xyzw
  mad r8.xyzw, r6.xxxx, cb4[0].xyzw, r8.xyzw
  mad r8.xyzw, r6.zzzz, cb4[2].xyzw, r8.xyzw
  add r8.xyzw, r8.xyzw, cb4[3].xyzw
  div r6.xyw, r8.xyxz, r8.wwww
  mul r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r6.xy, r6.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r8.xy, r6.yxyy, r2.yxyy, -r7.yxyy
  ge r4.w, |r8.y|, |r8.x|
  and r4.w, r4.w, l(0x3f800000)
  add r5.w, -|r8.x|, |r8.y|
  mad r5.w, r4.w, r5.w, |r8.x|
  mov_sat r7.w, cb9[1].x
  mul r5.w, r5.w, r7.w
  max r7.w, r5.w, l(0.001000)
  div r8.zw, r8.xxxy, r7.wwww
  min r5.w, r5.w, l(64.000000)
  ftoi r5.w, r5.w
  ilt r7.w, l(0), r5.w
  if_nz r7.w
    mad r9.xy, r2.zwzz, r2.xyxx, r8.wzww
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zwzz
    ge r10.zw, r9.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    or r10.x, r10.z, r10.x
    or r10.x, r10.y, r10.x
    or r10.x, r10.w, r10.x
    if_z r10.x
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.yz, r11.zzzz, cb4[1].zzwz
      mad r10.yz, r11.yyyy, cb4[0].zzwz, r10.yyzy
      mad r10.yz, r11.wwww, cb4[2].zzwz, r10.yyzy
      add r10.yz, r10.yyzy, cb4[3].zzwz
      div r10.y, r10.y, r10.z
      div r10.zw, r8.zzzw, r8.xxxy
      add r10.w, -r10.z, r10.w
      mad_sat r12.x, r4.w, r10.w, r10.z
      add r10.z, -r7.z, r6.w
      mad r10.z, r12.x, r10.z, r7.z
      add r10.y, -r10.y, r10.z
      mul r10.z, r3.z, r6.z
      add r10.w, r3.z, -r6.z
      mad r10.w, r12.x, r10.w, r6.z
      div r10.z, r10.z, r10.w
      add r10.z, -r11.w, r10.z
      lt r10.w, l(0.000000), r10.y
      lt r10.y, r10.y, cb9[1].z
      and r10.y, r10.y, r10.w
      mov r12.y, l(0)
      movc r12.yz, r10.yyyy, l(0,0,1,0), r12.xxyx
      mov r13.x, r12.y
      mov r12.y, r12.x
    else 
      mov r11.x, r3.w
      mov r13.x, l(0)
      mov r12.yz, l(0,0,0,0)
      mov r10.z, cb9[1].z
      mov r10.y, l(-1)
    endif 
    or r10.x, r10.x, r10.y
    movc r10.y, r10.x, l(0), l(1)
  else 
    div r9.zw, r7.xxxy, r2.xxxy
    mov r9.xy, r7.xyxx
    mov r11.x, r3.w
    mov r13.x, l(0)
    mov r12.yz, l(0,0,0,0)
    mov r10.z, cb9[1].z
    mov r10.xy, l(-1,0,0,0)
  endif 
  not r3.w, r10.x
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(1), l(2)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(2), l(3)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(3), l(4)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(4), l(5)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(5), l(6)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(6), l(7)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(7), l(8)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(8), l(9)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(9), l(10)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(10), l(11)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(11), l(12)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(12), l(13)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(13), l(14)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(14), l(15)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(15), l(16)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(16), l(17)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(17), l(18)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(18), l(19)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(19), l(20)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(20), l(21)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(21), l(22)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(22), l(23)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(23), l(24)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(24), l(25)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(25), l(26)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(26), l(27)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(27), l(28)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(28), l(29)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(29), l(30)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(30), l(31)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(31), l(32)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(32), l(33)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(33), l(34)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(34), l(35)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(35), l(36)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(36), l(37)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(37), l(38)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(38), l(39)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(39), l(40)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(40), l(41)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(41), l(42)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(42), l(43)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(43), l(44)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(44), l(45)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(45), l(46)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(46), l(47)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(47), l(48)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(48), l(49)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(49), l(50)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(50), l(51)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(51), l(52)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(52), l(53)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(53), l(54)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(54), l(55)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(55), l(56)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(56), l(57)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(57), l(58)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(58), l(59)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(59), l(60)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(60), l(61)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(61), l(62)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r7.w, r10.y, r5.w
  and r3.w, r3.w, r7.w
  if_nz r3.w
    add r9.xy, r8.wzww, r9.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    ge r10.xw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zzzw
    ge r12.xw, r9.zzzw, l(1.000000, 0.000000, 0.000000, 1.000000)
    or r7.w, r10.x, r12.x
    or r7.w, r10.w, r7.w
    or r7.w, r12.w, r7.w
    movc r12.z, r7.w, l(0), r12.z
    if_z r7.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r10.xw, r11.zzzz, cb4[1].zzzw
      mad r10.xw, r11.yyyy, cb4[0].zzzw, r10.xxxw
      mad r10.xw, r11.wwww, cb4[2].zzzw, r10.xxxw
      add r10.xw, r10.xxxw, cb4[3].zzzw
      div r10.x, r10.x, r10.w
      mad r12.xw, -r2.wwwz, r2.yyyx, r9.yyyx
      div r12.xw, r12.xxxw, r8.xxxy
      add r10.w, -r12.x, r12.w
      mad_sat r12.y, r4.w, r10.w, r12.x
      add r10.w, -r7.z, r6.w
      mad r10.w, r12.y, r10.w, r7.z
      add r10.x, -r10.x, r10.w
      mul r10.w, r3.z, r6.z
      add r12.x, r3.z, -r6.z
      mad r12.x, r12.y, r12.x, r6.z
      div r10.w, r10.w, r12.x
      add r10.z, -r11.w, r10.w
      lt r10.w, l(0.000000), r10.x
      lt r10.x, r10.x, cb9[1].z
      and r10.x, r10.x, r10.w
      mov r13.y, l(1)
      movc r13.xy, r10.xxxx, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    else 
      mov r10.x, l(-1)
    endif 
    or r7.w, r7.w, r10.x
    movc r10.y, r7.w, l(62), l(63)
  else 
    mov r7.w, l(-1)
  endif 
  not r7.w, r7.w
  and r3.w, r3.w, r7.w
  ilt r5.w, r10.y, r5.w
  and r3.w, r3.w, r5.w
  if_nz r3.w
    add r8.zw, r8.zzzw, r9.yyyx
    div r9.zw, r8.wwwz, r2.xxxy
    ge r9.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r9.zwzz
    ge r10.xy, r9.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
    or r3.w, r9.x, r10.x
    or r3.w, r9.y, r3.w
    or r3.w, r10.y, r3.w
    movc r12.z, r3.w, l(0), r12.z
    if_z r3.w
      sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
      mul r9.xy, r11.zzzz, cb4[1].zwzz
      mad r9.xy, r11.yyyy, cb4[0].zwzz, r9.xyxx
      mad r9.xy, r11.wwww, cb4[2].zwzz, r9.xyxx
      add r9.xy, r9.xyxx, cb4[3].zwzz
      div r3.w, r9.x, r9.y
      mad r2.zw, -r2.wwwz, r2.yyyx, r8.zzzw
      div r2.zw, r2.zzzw, r8.xxxy
      add r2.w, -r2.z, r2.w
      mad_sat r12.y, r4.w, r2.w, r2.z
      add r2.z, -r7.z, r6.w
      mad r2.z, r12.y, r2.z, r7.z
      add r2.z, -r3.w, r2.z
      mul r2.w, r3.z, r6.z
      add r3.w, r3.z, -r6.z
      mad r3.w, r12.y, r3.w, r6.z
      div r2.w, r2.w, r3.w
      add r10.z, -r11.w, r2.w
      lt r2.w, l(0.000000), r2.z
      lt r2.z, r2.z, cb9[1].z
      and r2.z, r2.z, r2.w
      mov r13.y, l(1)
      movc r13.xy, r2.zzzz, r13.xyxx, r12.yzyy
      mov r12.z, r13.y
    endif 
  endif 
  add r2.z, -r13.x, r12.y
  mad r8.x, r2.z, l(0.500000), r13.x
  imul null, r2.w, r12.z, l(10)
  ilt r3.w, l(0), r12.z
  if_nz r3.w
    mad r9.xy, r6.xyxx, r2.xyxx, -r7.xyxx
    mad r9.xy, r8.xxxx, r9.xyxx, r7.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
    mul r9.xy, r11.zzzz, cb4[1].zwzz
    mad r9.xy, r11.yyyy, cb4[0].zwzz, r9.xyxx
    mad r9.xy, r11.wwww, cb4[2].zwzz, r9.xyxx
    add r9.xy, r9.xyxx, cb4[3].zwzz
    div r3.w, r9.x, r9.y
    add r4.w, -r7.z, r6.w
    mad r4.w, r8.x, r4.w, r7.z
    add r3.w, -r3.w, r4.w
    lt r4.w, l(0.000000), r3.w
    lt r3.w, r3.w, cb9[1].z
    and r3.w, r3.w, r4.w
    mad r13.y, r2.z, l(0.250000), r13.x
    mad r8.z, r2.z, l(0.250000), r8.x
    mov r13.z, l(1)
    mov r8.y, l(0)
    movc r8.xyz, r3.wwww, r13.xzyx, r8.xyzx
    mov r13.x, r8.x
    mov r8.xy, r8.zyzz
    mov r2.z, l(1)
  else 
    mov r8.y, l(0)
    mov r2.z, l(0)
  endif 
  ilt r3.w, r2.z, r2.w
  if_nz r3.w
    mad r9.xy, r6.xyxx, r2.xyxx, -r7.xyxx
    mad r9.xy, r8.xxxx, r9.xyxx, r7.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
    mul r9.xy, r11.zzzz, cb4[1].zwzz
    mad r9.xy, r11.yyyy, cb4[0].zwzz, r9.xyxx
    mad r9.xy, r11.wwww, cb4[2].zwzz, r9.xyxx
    add r9.xy, r9.xyxx, cb4[3].zwzz
    div r4.w, r9.x, r9.y
    add r5.w, -r7.z, r6.w
    mad r5.w, r8.x, r5.w, r7.z
    add r4.w, -r4.w, r5.w
    lt r5.w, l(0.000000), r4.w
    lt r4.w, r4.w, cb9[1].z
    and r4.w, r4.w, r5.w
    add r5.w, -r13.x, r8.x
    mad r13.y, r5.w, l(0.500000), r13.x
    mad r8.z, r5.w, l(0.500000), r8.x
    mov r13.z, l(1)
    movc r8.xyz, r4.wwww, r13.xzyx, r8.xyzx
    mov r13.x, r8.x
    mov r8.xy, r8.zyzz
    mov r2.z, l(2)
  endif 
  ilt r4.w, r2.z, r2.w
  and r3.w, r3.w, r4.w
  if_nz r3.w
    mad r9.xy, r6.xyxx, r2.xyxx, -r7.xyxx
    mad r9.xy, r8.xxxx, r9.xyxx, r7.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
    mul r9.xy, r11.zzzz, cb4[1].zwzz
    mad r9.xy, r11.yyyy, cb4[0].zwzz, r9.xyxx
    mad r9.xy, r11.wwww, cb4[2].zwzz, r9.xyxx
    add r9.xy, r9.xyxx, cb4[3].zwzz
    div r4.w, r9.x, r9.y
    add r5.w, -r7.z, r6.w
    mad r5.w, r8.x, r5.w, r7.z
    add r4.w, -r4.w, r5.w
    lt r5.w, l(0.000000), r4.w
    lt r4.w, r4.w, cb9[1].z
    and r4.w, r4.w, r5.w
    add r5.w, -r13.x, r8.x
    mad r13.y, r5.w, l(0.500000), r13.x
    mad r8.z, r5.w, l(0.500000), r8.x
    mov r13.z, l(1)
    movc r8.xyz, r4.wwww, r13.xzyx, r8.xyzx
    mov r13.x, r8.x
    mov r8.xy, r8.zyzz
    mov r2.z, l(3)
  endif 
  ilt r4.w, r2.z, r2.w
  and r3.w, r3.w, r4.w
  if_nz r3.w
    mad r9.xy, r6.xyxx, r2.xyxx, -r7.xyxx
    mad r9.xy, r8.xxxx, r9.xyxx, r7.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
    mul r9.xy, r11.zzzz, cb4[1].zwzz
    mad r9.xy, r11.yyyy, cb4[0].zwzz, r9.xyxx
    mad r9.xy, r11.wwww, cb4[2].zwzz, r9.xyxx
    add r9.xy, r9.xyxx, cb4[3].zwzz
    div r4.w, r9.x, r9.y
    add r5.w, -r7.z, r6.w
    mad r5.w, r8.x, r5.w, r7.z
    add r4.w, -r4.w, r5.w
    lt r5.w, l(0.000000), r4.w
    lt r4.w, r4.w, cb9[1].z
    and r4.w, r4.w, r5.w
    add r5.w, -r13.x, r8.x
    mad r13.y, r5.w, l(0.500000), r13.x
    mad r8.z, r5.w, l(0.500000), r8.x
    mov r13.z, l(1)
    movc r8.xyz, r4.wwww, r13.xzyx, r8.xyzx
    mov r13.x, r8.x
    mov r8.xy, r8.zyzz
    mov r2.z, l(4)
  endif 
  ilt r4.w, r2.z, r2.w
  and r3.w, r3.w, r4.w
  if_nz r3.w
    mad r9.xy, r6.xyxx, r2.xyxx, -r7.xyxx
    mad r9.xy, r8.xxxx, r9.xyxx, r7.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
    mul r9.xy, r11.zzzz, cb4[1].zwzz
    mad r9.xy, r11.yyyy, cb4[0].zwzz, r9.xyxx
    mad r9.xy, r11.wwww, cb4[2].zwzz, r9.xyxx
    add r9.xy, r9.xyxx, cb4[3].zwzz
    div r4.w, r9.x, r9.y
    add r5.w, -r7.z, r6.w
    mad r5.w, r8.x, r5.w, r7.z
    add r4.w, -r4.w, r5.w
    lt r5.w, l(0.000000), r4.w
    lt r4.w, r4.w, cb9[1].z
    and r4.w, r4.w, r5.w
    add r5.w, -r13.x, r8.x
    mad r13.y, r5.w, l(0.500000), r13.x
    mad r8.z, r5.w, l(0.500000), r8.x
    mov r13.z, l(1)
    movc r8.xyz, r4.wwww, r13.xzyx, r8.xyzx
    mov r13.x, r8.x
    mov r8.xy, r8.zyzz
    mov r2.z, l(5)
  endif 
  ilt r4.w, r2.z, r2.w
  and r3.w, r3.w, r4.w
  if_nz r3.w
    mad r9.xy, r6.xyxx, r2.xyxx, -r7.xyxx
    mad r9.xy, r8.xxxx, r9.xyxx, r7.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
    mul r9.xy, r11.zzzz, cb4[1].zwzz
    mad r9.xy, r11.yyyy, cb4[0].zwzz, r9.xyxx
    mad r9.xy, r11.wwww, cb4[2].zwzz, r9.xyxx
    add r9.xy, r9.xyxx, cb4[3].zwzz
    div r4.w, r9.x, r9.y
    add r5.w, -r7.z, r6.w
    mad r5.w, r8.x, r5.w, r7.z
    add r4.w, -r4.w, r5.w
    lt r5.w, l(0.000000), r4.w
    lt r4.w, r4.w, cb9[1].z
    and r4.w, r4.w, r5.w
    add r5.w, -r13.x, r8.x
    mad r13.y, r5.w, l(0.500000), r13.x
    mad r8.z, r5.w, l(0.500000), r8.x
    mov r13.z, l(1)
    movc r8.xyz, r4.wwww, r13.xzyx, r8.xyzx
    mov r13.x, r8.x
    mov r8.xy, r8.zyzz
    mov r2.z, l(6)
  endif 
  ilt r4.w, r2.z, r2.w
  and r3.w, r3.w, r4.w
  if_nz r3.w
    mad r9.xy, r6.xyxx, r2.xyxx, -r7.xyxx
    mad r9.xy, r8.xxxx, r9.xyxx, r7.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
    mul r9.xy, r11.zzzz, cb4[1].zwzz
    mad r9.xy, r11.yyyy, cb4[0].zwzz, r9.xyxx
    mad r9.xy, r11.wwww, cb4[2].zwzz, r9.xyxx
    add r9.xy, r9.xyxx, cb4[3].zwzz
    div r4.w, r9.x, r9.y
    add r5.w, -r7.z, r6.w
    mad r5.w, r8.x, r5.w, r7.z
    add r4.w, -r4.w, r5.w
    lt r5.w, l(0.000000), r4.w
    lt r4.w, r4.w, cb9[1].z
    and r4.w, r4.w, r5.w
    add r5.w, -r13.x, r8.x
    mad r13.y, r5.w, l(0.500000), r13.x
    mad r8.z, r5.w, l(0.500000), r8.x
    mov r13.z, l(1)
    movc r8.xyz, r4.wwww, r13.xzyx, r8.xyzx
    mov r13.x, r8.x
    mov r8.xy, r8.zyzz
    mov r2.z, l(7)
  endif 
  ilt r4.w, r2.z, r2.w
  and r3.w, r3.w, r4.w
  if_nz r3.w
    mad r9.xy, r6.xyxx, r2.xyxx, -r7.xyxx
    mad r9.xy, r8.xxxx, r9.xyxx, r7.xyxx
    div r9.zw, r9.xxxy, r2.xxxy
    sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
    mul r9.xy, r11.zzzz, cb4[1].zwzz
    mad r9.xy, r11.yyyy, cb4[0].zwzz, r9.xyxx
    mad r9.xy, r11.wwww, cb4[2].zwzz, r9.xyxx
    add r9.xy, r9.xyxx, cb4[3].zwzz
    div r4.w, r9.x, r9.y
    add r5.w, -r7.z, r6.w
    mad r5.w, r8.x, r5.w, r7.z
    add r4.w, -r4.w, r5.w
    lt r5.w, l(0.000000), r4.w
    lt r4.w, r4.w, cb9[1].z
    and r4.w, r4.w, r5.w
    add r5.w, -r13.x, r8.x
    mad r13.y, r5.w, l(0.500000), r13.x
    mad r8.z, r5.w, l(0.500000), r8.x
    mov r13.z, l(1)
    movc r8.xyz, r4.wwww, r13.xzyx, r8.xyzx
    mov r13.x, r8.x
    mov r8.xy, r8.zyzz
    mov r2.z, l(8)
  endif 
  ilt r4.w, r2.z, r2.w
  and r3.w, r3.w, r4.w
  if_nz r3.w
    mad r8.zw, r6.xxxy, r2.xxxy, -r7.xxxy
    mad r8.zw, r8.xxxx, r8.zzzw, r7.xxxy
    div r9.zw, r8.zzzw, r2.xxxy
    sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
    mul r8.zw, r11.zzzz, cb4[1].zzzw
    mad r8.zw, r11.yyyy, cb4[0].zzzw, r8.zzzw
    mad r8.zw, r11.wwww, cb4[2].zzzw, r8.zzzw
    add r8.zw, r8.zzzw, cb4[3].zzzw
    div r4.w, r8.z, r8.w
    add r5.w, -r7.z, r6.w
    mad r5.w, r8.x, r5.w, r7.z
    add r4.w, -r4.w, r5.w
    lt r5.w, l(0.000000), r4.w
    lt r4.w, r4.w, cb9[1].z
    and r4.w, r4.w, r5.w
    add r5.w, -r13.x, r8.x
    mad r9.x, r5.w, l(0.500000), r13.x
    mad r8.x, r5.w, l(0.500000), r8.x
    mov r9.y, l(1)
    movc r8.xy, r4.wwww, r9.xyxx, r8.xyxx
    mov r2.z, l(9)
  endif 
  ilt r2.z, r2.z, r2.w
  and r2.z, r2.z, r3.w
  if_nz r2.z
    mad r2.zw, r6.xxxy, r2.xxxy, -r7.xxxy
    mad r2.zw, r8.xxxx, r2.zzzw, r7.xxxy
    div r9.zw, r2.zzzw, r2.xxxy
    sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r9.zwzz, t1.wxyz, s4
    mul r2.xy, r11.zzzz, cb4[1].zwzz
    mad r2.xy, r11.yyyy, cb4[0].zwzz, r2.xyxx
    mad r2.xy, r11.wwww, cb4[2].zwzz, r2.xyxx
    add r2.xy, r2.xyxx, cb4[3].zwzz
    div r2.x, r2.x, r2.y
    add r2.y, -r7.z, r6.w
    mad r2.y, r8.x, r2.y, r7.z
    add r2.x, -r2.x, r2.y
    lt r2.y, l(0.000000), r2.x
    lt r2.x, r2.x, cb9[1].z
    and r2.x, r2.x, r2.y
    movc r8.y, r2.x, l(1), r8.y
  endif 
  itof r2.x, r8.y
  dp3 r2.y, r3.xyzx, r3.xyzx
  rsq r2.y, r2.y
  mul r2.yzw, r2.yyyy, r3.xxyz
  dp3 r2.y, -r2.yzwy, r5.xyzx
  max r2.y, r2.y, l(0.000000)
  add r2.y, -r2.y, l(1.000000)
  mul r2.x, r2.y, r2.x
  div_sat r2.y, r10.z, cb9[1].z
  add r2.y, -r2.y, l(1.000000)
  mul r2.x, r2.y, r2.x
  mul r2.x, r11.x, r2.x
  lt r2.yz, r9.zzwz, l(0.000000, 0.000000, 0.000000, 0.000000)
  lt r3.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r9.zwzz
  or r2.y, r2.y, r3.x
  or r2.y, r2.z, r2.y
  or r2.y, r3.y, r2.y
  movc r2.y, r2.y, l(0), l(1.000000)
  mul_sat r2.x, r2.y, r2.x
  dp3 r2.y, r5.xyzx, r4.xyzx
  max r2.y, r2.y, l(0.000000)
  add r2.y, -r2.y, l(1.000000)
  mul r2.z, r2.y, r2.y
  mul r2.z, r2.z, r2.z
  mul r2.y, r2.z, r2.y
  mad_sat r2.y, r2.y, l(0.960000), l(0.040000)
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, r9.zwzz, t0.xyzw, s3
  mul r2.yzw, r2.yyyy, r3.xxyz
  mul r2.xyz, r2.xxxx, r2.yzwy
  mad r0.xyz, r2.xyzx, cb1[0].yyyy, r0.xyzx
endif 
mov r2.xy, l(-1,0,0,0)
loop 
  uge r2.z, r2.y, l(4)
  breakc_nz r2.z
  dp4 r2.z, cb3[16].xyzw, icb[r2.y + 0].xyzw
  lt r2.z, r1.w, r2.z
  if_nz r2.z
    mov r2.x, r2.y
    break 
  endif 
  iadd r2.y, r2.y, l(1)
  mov r2.x, l(-1)
endloop 
ilt r2.y, l(-1), r2.x
if_nz r2.y
  mul r3.xyzw, r1.zzzz, cb4[18].xyzw
  mad r3.xyzw, r1.yyyy, cb4[17].xyzw, r3.xyzw
  mad r3.xyzw, r1.xxxx, cb4[19].xyzw, r3.xyzw
  add r3.xyzw, r3.xyzw, cb4[20].xyzw
  div r3.xyzw, r3.xyzw, r3.wwww
  ishl r1.y, r2.x, l(2)
  mul r4.xyzw, r3.yyyy, cb3[r1.y + 1].xyzw
  mad r4.xyzw, r3.xxxx, cb3[r1.y + 0].xyzw, r4.xyzw
  mad r4.xyzw, r3.zzzz, cb3[r1.y + 2].xyzw, r4.xyzw
  mad r3.xyzw, r3.wwww, cb3[r1.y + 3].xyzw, r4.xyzw
  div r3.xyz, r3.xyzx, r3.wwww
  mad r4.xy, r3.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  itof r4.z, r2.x
  add r1.y, r3.z, -cb9[0].y
  sample_c_lz_indexable(texture2darray)(float,float,float,float) r1.y, r4.xyzx, t7.xxxx, s7, r1.y
  mov r1.z, r1.y
else 
  mov r1.y, l(1.000000)
endif 
mov r2.xz, l(-1,0,0,0)
loop 
  uge r2.w, r2.z, l(4)
  breakc_nz r2.w
  dp4 r2.w, cb3[16].xyzw, icb[r2.z + 0].xyzw
  lt r2.w, r1.w, r2.w
  if_nz r2.w
    mov r2.x, r2.z
    break 
  endif 
  iadd r2.z, r2.z, l(1)
  mov r2.x, l(-1)
endloop 
ilt r1.w, l(-1), r2.x
if_nz r1.w
  movc r1.y, r2.y, r1.z, r1.y
  if_nz cb9[0].z
    mov r2.xyz, icb[r2.x + 1].yzwy
  else 
    mov r2.xyz, l(1.000000,1.000000,1.000000,0)
  endif 
  add r1.z, -cb9[0].x, l(1.000000)
  mad r1.y, r1.y, r1.z, cb9[0].x
  mul r1.yzw, r2.xxyz, r1.yyyy
  mul r0.xyz, r0.xyzx, r1.yzwy
endif 
if_nz cb1[1].y
  if_nz cb8[2].z
    resinfo_indexable(texture2d)(float,float,float,float)_uint r1.yz, l(0), t3.zxyw
    utof r1.yz, r1.yyzy
    mov r2.xy, l(0,0,0,0)
    mov r1.w, l(-4.000000)
    loop 
      lt r2.z, l(4.000000), r1.w
      breakc_nz r2.z
      div r3.x, r1.w, r1.y
      mov r4.xy, r2.xyxx
      mov r4.z, l(-4.000000)
      loop 
        lt r2.z, l(4.000000), r4.z
        breakc_nz r2.z
        div r3.y, r4.z, r1.z
        add r2.zw, r3.xxxy, v1.xxxy
        sample_indexable(texture2d)(float,float,float,float) r3.y, r2.zwzz, t5.yxzw, s3
        mul r3.z, r4.z, r4.z
        mad r3.z, r1.w, r1.w, r3.z
        mul r3.z, r3.z, l(-0.045084)
        exp r3.z, r3.z
        sample_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t3.yzxw, s3
        add r2.z, r1.x, -r2.z
        mul r2.z, r2.z, r2.z
        mul r2.z, r2.z, l(-14426.950195)
        exp r2.z, r2.z
        mul r2.w, r3.z, r3.y
        mad r4.x, r2.w, r2.z, r4.x
        mad r4.y, r3.z, r2.z, r4.y
        add r4.z, r4.z, l(1.000000)
      endloop 
      mov r2.xy, r4.xyxx
      add r1.w, r1.w, l(1.000000)
    endloop 
    max r1.x, r2.y, l(0.000010)
    div r1.x, r2.x, r1.x
  else 
    sample_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t5.xyzw, s3
  endif 
  mul r1.yzw, cb8[0].wwww, cb8[0].xxyz
  max r1.x, r1.x, l(0.000000)
  mad r0.xyz, r1.yzwy, r1.xxxx, r0.xyzx
endif 
if_nz cb1[1].z
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t4.xyzw, s0
  add r0.xyz, r0.xyzx, r1.xyzx
endif 
dp3 r1.x, r0.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
add r1.yzw, r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
div r1.yzw, r0.xxyz, r1.yyzw
add r1.x, r1.x, l(1.000000)
div r0.xyz, r0.xyzx, r1.xxxx
add r2.xyz, -r0.xyzx, r1.yzwy
mad r0.xyz, r1.yzwy, r2.xyzx, r0.xyzx
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
exp o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 3416 instruction slots used
