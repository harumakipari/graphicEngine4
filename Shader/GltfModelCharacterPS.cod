//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64 [unused]
//   float4 cpuColor;                   // Offset:   64 Size:    16 [unused]
//   int material;                      // Offset:   80 Size:     4
//   bool hasTangent;                   // Offset:   84 Size:     4
//   int skin;                          // Offset:   88 Size:     4 [unused]
//   float dissolveValue;               // Offset:   92 Size:     4 [unused]
//   float emission;                    // Offset:   96 Size:     4 [unused]
//   float3 pads;                       // Offset:  100 Size:    12 [unused]
//   row_major float4x4 invWorld;       // Offset:  112 Size:    64 [unused]
//
// }
//
// cbuffer VIEW_CONSTANTS_BUFFER
// {
//
//   row_major float4x4 vviewProjection;// Offset:    0 Size:    64 [unused]
//   float4 vcameraPositon;             // Offset:   64 Size:    16
//   row_major float4x4 vview;          // Offset:   80 Size:    64 [unused]
//   row_major float4x4 vprojection;    // Offset:  144 Size:    64 [unused]
//   row_major float4x4 vinverseProjection;// Offset:  208 Size:    64 [unused]
//   row_major float4x4 vinverseViewProjection;// Offset:  272 Size:    64 [unused]
//   row_major float4x4 vinvView;       // Offset:  336 Size:    64 [unused]
//
// }
//
// cbuffer LIGHT_CONSTANT_BUFFER
// {
//
//   float4 lightDirection;             // Offset:    0 Size:    16
//   float4 colorLight;                 // Offset:   16 Size:    16
//   float iblIntensity;                // Offset:   32 Size:     4 [unused]
//   int directionalLightEnable;        // Offset:   36 Size:     4 [unused]
//   int pointLightEnable;              // Offset:   40 Size:     4 [unused]
//   int pointLightCount;               // Offset:   44 Size:     4 [unused]
//   
//   struct PointLights
//   {
//       
//       float4 position;               // Offset:   48
//       float4 color;                  // Offset:   64
//       float range;                   // Offset:   80
//       float3 pads;                   // Offset:   84
//
//   } pointLights[8];                  // Offset:   48 Size:   384 [unused]
//
// }
//
// Resource bind info for materials
// {
//
//   struct MaterialConstants
//   {
//       
//       float3 emissiveFactor;         // Offset:    0
//       int alphaMode;                 // Offset:   12
//       float alphaCutoff;             // Offset:   16
//       bool doubleSided;              // Offset:   20
//       
//       struct PbrMetallicRoughness
//       {
//           
//           float4 basecolorFactor;    // Offset:   24
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   40
//               int texcoord;          // Offset:   44
//
//           } basecolorTexture;        // Offset:   40
//           float metallicFactor;      // Offset:   48
//           float roughnessFactor;     // Offset:   52
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   56
//               int texcoord;          // Offset:   60
//
//           } metallicRoughnessTexture;// Offset:   56
//
//       } pbrMetallicRoughness;        // Offset:   24
//       
//       struct NormalTextureInfo
//       {
//           
//           int index;                 // Offset:   64
//           int texcoord;              // Offset:   68
//           float scale;               // Offset:   72
//
//       } normalTexture;               // Offset:   64
//       
//       struct OcclusionTextureInfo
//       {
//           
//           int index;                 // Offset:   76
//           int texcoord;              // Offset:   80
//           float strength;            // Offset:   84
//
//       } occlusionTexture;            // Offset:   76
//       
//       struct TextureInfo
//       {
//           
//           int index;                 // Offset:   88
//           int texcoord;              // Offset:   92
//
//       } emissiveTexture;             // Offset:   88
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerStates[1]                  sampler      NA          NA             s1      1 
// samplerStates[2]                  sampler      NA          NA             s2      1 
// materials                         texture  struct         r/o             t0      1 
// materialTextures[0]               texture  float4          2d             t1      1 
// materialTextures[1]               texture  float4          2d             t2      1 
// materialTextures[2]               texture  float4          2d             t3      1 
// materialTextures[3]               texture  float4          2d             t4      1 
// materialTextures[4]               texture  float4          2d             t5      1 
// diffuseIem                        texture  float4        cube            t33      1 
// specularPmrem                     texture  float4        cube            t34      1 
// lutGgx                            texture  float4          2d            t35      1 
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// VIEW_CONSTANTS_BUFFER             cbuffer      NA          NA            cb8      1 
// LIGHT_CONSTANT_BUFFER             cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// SV_IsFrontFace           0   x           5    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[6], immediateIndexed
dcl_constantbuffer CB8[5], immediateIndexed
dcl_constantbuffer CB11[2], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_structured t0, 96
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t33
dcl_resource_texturecube (float,float,float,float) t34
dcl_resource_texture2d (float,float,float,float) t35
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps_sgv constant v5.x, is_front_face
dcl_output o0.xyzw
dcl_temps 14
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.wPosition.x; v1.y <- pin.wPosition.y; v1.z <- pin.wPosition.z; v1.w <- pin.wPosition.w; 
//   v2.x <- pin.wNormal.x; v2.y <- pin.wNormal.y; v2.z <- pin.wNormal.z; v2.w <- pin.wNormal.w; 
//   v3.x <- pin.wTangent.x; v3.y <- pin.wTangent.y; v3.z <- pin.wTangent.z; v3.w <- pin.wTangent.w; 
//   v4.x <- pin.texcoord.x; v4.y <- pin.texcoord.y; 
//   v5.x <- isFrontFace; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 26 "C:\Users\2240225\Desktop\graphicEngine4\Shader\GltfModelCharacterPS.hlsl"
mov r0.x, l(2.200000)  // r0.x <- GAMMA

#line 27
mov r0.y, cb0[5].x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.x, r0.y, l(0), t0.xxxx  // r1.x <- m.emissiveFactor.x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.y, r0.y, l(4), t0.xxxx  // r1.y <- m.emissiveFactor.y
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.z, r0.y, l(8), t0.xxxx  // r1.z <- m.emissiveFactor.z
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.z, r0.y, l(12), t0.xxxx  // r0.z <- m.alphaMode
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.w, r0.y, l(16), t0.xxxx  // r0.w <- m.alphaCutoff
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.x, r0.y, l(24), t0.xxxx  // r2.x <- m.pbrMetallicRoughness.basecolorFactor.x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.y, r0.y, l(28), t0.xxxx  // r2.y <- m.pbrMetallicRoughness.basecolorFactor.y
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.z, r0.y, l(32), t0.xxxx  // r2.z <- m.pbrMetallicRoughness.basecolorFactor.z
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.w, r0.y, l(36), t0.xxxx  // r2.w <- m.pbrMetallicRoughness.basecolorFactor.w
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.w, r0.y, l(40), t0.xxxx  // r1.w <- m.pbrMetallicRoughness.basecolorTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.x, r0.y, l(48), t0.xxxx  // r3.x <- m.pbrMetallicRoughness.metallicFactor
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r4.y, r0.y, l(52), t0.xxxx  // r4.y <- m.pbrMetallicRoughness.roughnessFactor
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.y, r0.y, l(56), t0.xxxx  // r3.y <- m.pbrMetallicRoughness.metallicRoughnessTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.z, r0.y, l(64), t0.xxxx  // r3.z <- m.normalTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r5.x, r0.y, l(72), t0.xxxx  // r5.x <- m.normalTexture.scale
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.w, r0.y, l(76), t0.xxxx  // r3.w <- m.occlusionTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r4.z, r0.y, l(84), t0.xxxx  // r4.z <- m.occlusionTexture.strength
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.y, r0.y, l(88), t0.xxxx  // r0.y <- m.emissiveTexture.index

#line 29
mov r2.xyzw, r2.xyzw  // r2.x <- basecolorFactor.x; r2.y <- basecolorFactor.y; r2.z <- basecolorFactor.z; r2.w <- basecolorFactor.w

#line 30
mov r1.w, r1.w  // r1.w <- basecolorTexture

#line 32
ilt r1.w, l(-1), r1.w
if_nz r1.w

#line 34
  sample_indexable(texture2d)(float,float,float,float) r6.xyzw, v4.xyxx, t1.xyzw, s2  // r6.x <- sampled.x; r6.y <- sampled.y; r6.z <- sampled.z; r6.w <- sampled.w

#line 35
  log r7.xyz, r6.xyzx
  mul r7.xyz, r0.xxxx, r7.xyzx
  exp r6.xyz, r7.xyzx

#line 36
  mul r2.xyzw, r2.xyzw, r6.xyzw

#line 37
endif 

#line 39
if_z r0.z

#line 41
  mov r2.w, l(1.000000)

#line 42
endif 

#line 43
lt r0.z, r2.w, r0.w
if_nz r0.z

#line 45
  discard_nz l(-1)

#line 46
endif 

#line 48
mov r1.xyz, r1.xyzx  // r1.x <- emmisiveFactor.x; r1.y <- emmisiveFactor.y; r1.z <- emmisiveFactor.z

#line 49
mov r0.y, r0.y  // r0.y <- emissiveTexture

#line 50
ilt r0.y, l(-1), r0.y
if_nz r0.y

#line 52
  sample_indexable(texture2d)(float,float,float,float) r0.yzw, v4.xyxx, t4.wxyz, s2
  mov r0.yzw, r0.yyzw  // r0.y <- sampled.x; r0.z <- sampled.y; r0.w <- sampled.z

#line 53
  log r0.yzw, r0.yyzw
  mul r0.xyz, r0.yzwy, r0.xxxx
  exp r0.xyz, r0.xyzx  // r0.x <- sampled.x; r0.y <- sampled.y; r0.z <- sampled.z

#line 54
  mul r1.xyz, r0.xyzx, r1.xyzx

#line 55
endif 

#line 57
mov r4.y, r4.y  // r4.y <- roughnessFactor

#line 58
mov r3.x, r3.x  // r3.x <- metallicFactor

#line 59
mov r3.y, r3.y  // r3.y <- metallicRoughnessTexture

#line 60
ilt r0.x, l(-1), r3.y
if_nz r0.x

#line 62
  sample_indexable(texture2d)(float,float,float,float) r0.xy, v4.xyxx, t2.yzxw, s1  // r0.x <- sampled.y; r0.y <- sampled.z

#line 63
  mul r4.y, r0.x, r4.y

#line 64
  mul r3.x, r0.y, r3.x

#line 65
endif 

#line 67
mov r0.x, l(1.000000)  // r0.x <- occlusionFactor

#line 68
mov r3.w, r3.w  // r3.w <- occlusionTexture

#line 69
ilt r0.y, l(-1), r3.w
if_nz r0.y

#line 71
  sample_indexable(texture2d)(float,float,float,float) r0.y, v4.xyxx, t5.yxzw, s1  // r0.y <- sampled.x

#line 72
  mul r0.x, r0.y, r0.x

#line 73
endif 

#line 74
mov r4.z, r4.z  // r4.z <- occlusionStrength

#line 76
mov r0.yzw, l(-0.000000,-0.040000,-0.040000,-0.040000)
add r0.yzw, r0.yyzw, r2.xxyz
mul r0.yzw, r0.yyzw, r3.xxxx
add r0.yzw, r0.yyzw, l(0.000000, 0.040000, 0.040000, 0.040000)  // r0.y <- f0.x; r0.z <- f0.y; r0.w <- f0.z

#line 77
mov r6.xyz, l(1.000000,1.000000,1.000000,0)  // r6.x <- f90.x; r6.y <- f90.y; r6.z <- f90.z

#line 78
mul r1.w, r4.y, r4.y  // r1.w <- alphaRoughness

#line 79
mov r7.xyz, -r2.xyzx
add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r3.xyw, r3.xxxx, r7.xyxz
add r2.xyz, r2.xyzx, r3.xywx  // r2.x <- cDiff.x; r2.y <- cDiff.y; r2.z <- cDiff.z

#line 82
mov r3.xyw, -v1.xyxz
add r3.xyw, r3.xyxw, cb8[4].xyxz
dp3 r4.w, r3.xywx, r3.xywx
rsq r4.w, r4.w
mul r3.xyw, r3.xyxw, r4.wwww  // r3.x <- V.x; r3.y <- V.y; r3.w <- V.z

#line 84
dp3 r4.w, v2.xyzx, v2.xyzx
rsq r4.w, r4.w
mul r7.xyz, r4.wwww, v2.xyzx  // r7.x <- N.x; r7.y <- N.y; r7.z <- N.z

#line 85
ine r4.w, l(0, 0, 0, 0), cb0[5].y
dp3 r5.y, v3.xyzx, v3.xyzx
rsq r5.y, r5.y
mul r8.xyz, r5.yyyy, v3.xyzx
itof r9.xyz, l(1, 0, 0, 0)
movc r8.xyz, r4.wwww, r8.xyzx, r9.xyzx  // r8.x <- T.x; r8.y <- T.y; r8.z <- T.z

#line 86
ine r4.w, l(0, 0, 0, 0), cb0[5].y
movc r4.w, r4.w, v3.w, l(1.000000)  // r4.w <- sigma

#line 87
dp3 r5.y, r7.xyzx, r8.xyzx
mul r9.xyz, r5.yyyy, r7.xyzx
mov r9.xyz, -r9.xyzx
add r8.xyz, r8.xyzx, r9.xyzx
dp3 r5.y, r8.xyzx, r8.xyzx
rsq r5.y, r5.y
mul r8.xyz, r5.yyyy, r8.xyzx  // r8.x <- T.x; r8.y <- T.y; r8.z <- T.z

#line 88
mul r9.xyz, r7.yzxy, r8.zxyz
mul r10.xyz, r7.zxyz, r8.yzxy
mov r10.xyz, -r10.xyzx
add r9.xyz, r9.xyzx, r10.xyzx
mul r9.xyz, r4.wwww, r9.xyzx
dp3 r4.w, r9.xyzx, r9.xyzx
rsq r4.w, r4.w
mul r9.xyz, r4.wwww, r9.xyzx  // r9.x <- B.x; r9.y <- B.y; r9.z <- B.z

#line 91
if_z v5.x

#line 93
  mov r8.xyz, -r8.xyzx

#line 94
  mov r9.xyz, -r9.xyzx

#line 95
  mov r7.xyz, -r7.xyzx

#line 96
endif 

#line 98
mov r3.z, r3.z  // r3.z <- normalTexture

#line 99
ilt r3.z, l(-1), r3.z
if_nz r3.z

#line 101
  sample_indexable(texture2d)(float,float,float,float) r10.xyz, v4.xyxx, t3.xyzw, s1  // r10.x <- sampled.x; r10.y <- sampled.y; r10.z <- sampled.z

#line 102
  mov r10.xyz, r10.xyzx  // r10.x <- normalFactor.x; r10.y <- normalFactor.y; r10.z <- normalFactor.z

#line 103
  mul r10.xyz, r10.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  mov r11.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
  add r10.xyz, r10.xyzx, r11.xyzx  // r10.x <- normalFactor.x; r10.y <- normalFactor.y; r10.z <- normalFactor.z

#line 104
  mov r5.z, l(1.000000)
  mul r5.xyz, r5.xxzx, r10.xyzx
  dp3 r3.z, r5.xyzx, r5.xyzx
  rsq r3.z, r3.z
  mul r5.xyz, r3.zzzz, r5.xyzx  // r5.x <- normalFactor.x; r5.y <- normalFactor.y; r5.z <- normalFactor.z

#line 105
  mul r8.xyz, r8.xyzx, r5.xxxx
  mul r5.xyw, r9.xyxz, r5.yyyy
  add r5.xyw, r5.xyxw, r8.xyxz
  mul r8.xyz, r7.xyzx, r5.zzzz
  add r5.xyz, r5.xywx, r8.xyzx
  dp3 r3.z, r5.xyzx, r5.xyzx
  rsq r3.z, r3.z
  mul r7.xyz, r3.zzzz, r5.xyzx

#line 106
endif 

#line 108
itof r5.xyz, l(0, 0, 0, 0)  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z

#line 109
itof r8.xyz, l(0, 0, 0, 0)  // r8.x <- specular.x; r8.y <- specular.y; r8.z <- specular.z

#line 113
mov r9.xyz, -cb11[0].xyzx
dp3 r3.z, r9.xyzx, r9.xyzx
rsq r3.z, r3.z
mul r9.xyz, r3.zzzz, r9.xyzx  // r9.x <- L.x; r9.y <- L.y; r9.z <- L.z

#line 114
mul r10.xyz, cb11[1].wwww, cb11[1].xyzx  // r10.x <- Li.x; r10.y <- Li.y; r10.z <- Li.z

#line 116
dp3 r3.z, r7.xyzx, r9.xyzx
max r3.z, r3.z, l(0.000000)  // r3.z <- NoL

#line 117
dp3 r4.w, r7.xyzx, r3.xywx
max r4.w, r4.w, l(0.000000)  // r4.w <- NoV

#line 118
lt r5.w, l(0.000000), r3.z
lt r6.w, l(0.000000), r4.w
or r5.w, r5.w, r6.w
if_nz r5.w

#line 121
  add r9.xyz, r3.xywx, r9.xyzx
  dp3 r5.w, r9.xyzx, r9.xyzx
  rsq r5.w, r5.w
  mul r9.xyz, r5.wwww, r9.xyzx  // r9.x <- H.x; r9.y <- H.y; r9.z <- H.z

#line 123
  dp3 r5.w, r7.xyzx, r9.xyzx
  max r5.w, r5.w, l(0.000000)  // r5.w <- NoH

#line 124
  dp3 r6.w, r9.xyzx, r3.xywx
  max r6.w, r6.w, l(0.000000)  // r6.w <- HoV

#line 126
  mul r9.xyz, r3.zzzz, r10.xyzx
  nop 
  mov r11.xyz, r0.yzwy
  mov r12.xyz, r6.xyzx
  mov r2.xyz, r2.xyzx
  mov r6.w, r6.w

#line 31 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
  mov r7.w, l(3.141593)  // r7.w <- PI

#line 32
  nop 
  mov r11.xyz, r11.xyzx
  mov r12.xyz, r12.xyzx
  mov r6.w, r6.w

#line 7
  mov r13.xyz, -r11.xyzx
  add r12.xyz, r12.xyzx, r13.xyzx
  mov r8.w, -r6.w
  add r8.w, r8.w, l(1.000000)
  max r8.w, r8.w, l(0.000000)
  min r8.w, r8.w, l(1.000000)
  mov r9.w, l(1.000000)
  mul r9.w, r8.w, r9.w
  mul r8.w, r8.w, r8.w
  mul r8.w, r8.w, r8.w
  mul r8.w, r8.w, r9.w
  mul r12.xyz, r8.wwww, r12.xyzx
  add r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- <FSchlick return value>.x; r11.y <- <FSchlick return value>.y; r11.z <- <FSchlick return value>.z

#line 32
  mov r11.xyz, -r11.xyzx
  add r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r12.xyz, r2.xyzx, r7.wwww
  mul r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- <BrdfLambertian return value>.x; r11.y <- <BrdfLambertian return value>.y; r11.z <- <BrdfLambertian return value>.z

#line 126 "C:\Users\2240225\Desktop\graphicEngine4\Shader\GltfModelCharacterPS.hlsl"
  mul r9.xyz, r9.xyzx, r11.xyzx
  add r5.xyz, r5.xyzx, r9.xyzx

#line 127
  mul r9.xyz, r3.zzzz, r10.xyzx
  nop 
  mov r10.xyz, r0.yzwy
  mov r6.xyz, r6.xyzx
  mov r1.w, r1.w
  mov r6.w, r6.w
  mov r3.z, r3.z
  mov r4.w, r4.w
  mov r5.w, r5.w

#line 37 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
  nop 
  mov r10.xyz, r10.xyzx
  mov r6.xyz, r6.xyzx
  mov r6.w, r6.w

#line 7
  mov r11.xyz, -r10.xyzx
  add r6.xyz, r6.xyzx, r11.xyzx
  mov r6.w, -r6.w
  add r6.w, r6.w, l(1.000000)
  max r6.w, r6.w, l(0.000000)
  min r6.w, r6.w, l(1.000000)
  mov r7.w, l(1.000000)
  mul r7.w, r6.w, r7.w
  mul r6.w, r6.w, r6.w
  mul r6.w, r6.w, r6.w
  mul r6.w, r6.w, r7.w
  mul r6.xyz, r6.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, r10.xyzx  // r6.x <- <FSchlick return value>.x; r6.y <- <FSchlick return value>.y; r6.z <- <FSchlick return value>.z

#line 37
  mov r6.xyz, r6.xyzx  // r6.x <- F.x; r6.y <- F.y; r6.z <- F.z

#line 38
  nop 
  mov r3.z, r3.z
  mov r4.w, r4.w
  mov r1.w, r1.w

#line 12
  mul r6.w, r1.w, r1.w  // r6.w <- alphaRoughnessSq

#line 14
  mul r7.w, r4.w, r4.w
  mov r8.w, -r6.w
  add r8.w, r8.w, l(1.000000)
  mul r7.w, r7.w, r8.w
  add r7.w, r6.w, r7.w
  sqrt r7.w, r7.w
  mul r7.w, r3.z, r7.w  // r7.w <- ggxv

#line 15
  mul r3.z, r3.z, r3.z
  mov r8.w, -r6.w
  add r8.w, r8.w, l(1.000000)
  mul r3.z, r3.z, r8.w
  add r3.z, r6.w, r3.z
  sqrt r3.z, r3.z
  mul r3.z, r3.z, r4.w  // r3.z <- ggxl

#line 17
  add r3.z, r3.z, r7.w  // r3.z <- ggx

#line 18
  lt r4.w, l(0.000000), r3.z
  div r3.z, l(0.500000), r3.z
  movc r3.z, r4.w, r3.z, l(0)  // r3.z <- <VGgx return value>

#line 38
  mov r3.z, r3.z  // r3.z <- Vis

#line 39
  nop 
  mov r5.w, r5.w
  mov r1.w, r1.w

#line 23
  mov r4.w, l(3.141593)  // r4.w <- PI

#line 24
  mul r1.w, r1.w, r1.w  // r1.w <- alphaRoughnessSq

#line 25
  mul r5.w, r5.w, r5.w
  mov r6.w, l(-1.000000)
  add r6.w, r1.w, r6.w
  mul r5.w, r5.w, r6.w
  add r5.w, r5.w, l(1.000000)  // r5.w <- f

#line 26
  mul r4.w, r4.w, r5.w
  mul r4.w, r5.w, r4.w
  div r1.w, r1.w, r4.w  // r1.w <- <DGgx return value>

#line 39
  mov r1.w, r1.w  // r1.w <- D

#line 41
  mul r6.xyz, r3.zzzz, r6.xyzx
  mul r6.xyz, r1.wwww, r6.xyzx  // r6.x <- <BrdfSpecularGgx return value>.x; r6.y <- <BrdfSpecularGgx return value>.y; r6.z <- <BrdfSpecularGgx return value>.z

#line 127 "C:\Users\2240225\Desktop\graphicEngine4\Shader\GltfModelCharacterPS.hlsl"
  mul r6.xyz, r6.xyzx, r9.xyzx
  add r8.xyz, r6.xyzx, r8.xyzx

#line 128
endif 

#line 134
nop 
mov r7.xyz, r7.xyzx
mov r3.xyw, r3.xyxw
mov r4.y, r4.y
mov r2.xyz, r2.xyzx
mov r0.yzw, r0.yyzw

#line 46 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
dp3 r1.w, r7.xyzx, r3.xywx
max r1.w, r1.w, l(0.000000)
min r4.x, r1.w, l(1.000000)  // r4.x <- NoV

#line 48
max r6.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r6.xy, r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)  // r6.x <- brdfSamplePoint.x; r6.y <- brdfSamplePoint.y

#line 49
nop 
mov r6.xy, r6.xyxx

#line 18 "C:\Users\2240225\Desktop\graphicEngine4\Shader\imageBasedLighting.hlsli"
sample_indexable(texture2d)(float,float,float,float) r6.xy, r6.xyxx, t35.xyzw, s1
mov r6.xy, r6.xyxx  // r6.x <- <sampleLutGgx return value>.x; r6.y <- <sampleLutGgx return value>.y

#line 49 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
mov r6.xy, r6.xyxx  // r6.x <- fAb.x; r6.y <- fAb.y

#line 51
nop 
mov r7.xyz, r7.xyzx

#line 38 "C:\Users\2240225\Desktop\graphicEngine4\Shader\imageBasedLighting.hlsli"
sample_indexable(texturecube)(float,float,float,float) r9.xyz, r7.xyzx, t33.xyzw, s1
mov r9.xyz, r9.xyzx  // r9.x <- <sampleDiffuseIem return value>.x; r9.y <- <sampleDiffuseIem return value>.y; r9.z <- <sampleDiffuseIem return value>.z

#line 51 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
mov r9.xyz, r9.xyzx  // r9.x <- irradiance.x; r9.y <- irradiance.y; r9.z <- irradiance.z

#line 53
mov r1.w, -r4.y
add r1.w, r1.w, l(1.000000)
max r10.xyz, r0.yzwy, r1.wwww
mov r11.xyz, -r0.yzwy
add r10.xyz, r10.xyzx, r11.xyzx  // r10.x <- fr.x; r10.y <- fr.y; r10.z <- fr.z

#line 54
mov r1.w, -r4.x
add r1.w, r1.w, l(1.000000)
mov r3.z, l(1.000000)
mul r3.z, r1.w, r3.z
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r3.z
mul r10.xyz, r1.wwww, r10.xyzx
add r10.xyz, r0.yzwy, r10.xyzx  // r10.x <- k_s.x; r10.y <- k_s.y; r10.z <- k_s.z

#line 55
mul r10.xyz, r6.xxxx, r10.xyzx
add r10.xyz, r6.yyyy, r10.xyzx  // r10.x <- fss_ess.x; r10.y <- fss_ess.y; r10.z <- fss_ess.z

#line 57
add r1.w, r6.y, r6.x
mov r1.w, -r1.w
add r1.w, r1.w, l(1.000000)  // r1.w <- ems

#line 58
mov r6.xyz, -r0.yzwy
add r6.xyz, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r6.xyz, r6.xyzx, l(21.000000, 21.000000, 21.000000, 0.000000)
add r6.xyz, r0.yzwy, r6.xyzx  // r6.x <- f_avg.x; r6.y <- f_avg.y; r6.z <- f_avg.z

#line 59
mul r11.xyz, r10.xyzx, r1.wwww
mul r11.xyz, r6.xyzx, r11.xyzx
mul r6.xyz, r1.wwww, r6.xyzx
mov r6.xyz, -r6.xyzx
add r6.xyz, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r6.xyz, r11.xyzx, r6.xyzx  // r6.x <- fms_ems.x; r6.y <- fms_ems.y; r6.z <- fms_ems.z

#line 61
mov r10.xyz, -r10.xyzx
add r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r10.xyz, r6.xyzx, r10.xyzx
mul r2.xyz, r2.xyzx, r10.xyzx  // r2.x <- k_d.x; r2.y <- k_d.y; r2.z <- k_d.z

#line 62
add r2.xyz, r2.xyzx, r6.xyzx
mul r2.xyz, r9.xyzx, r2.xyzx  // r2.x <- <IblRadianceLambertian return value>.x; r2.y <- <IblRadianceLambertian return value>.y; r2.z <- <IblRadianceLambertian return value>.z

#line 134 "C:\Users\2240225\Desktop\graphicEngine4\Shader\GltfModelCharacterPS.hlsl"
add r2.xyz, r2.xyzx, r5.xyzx  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z

#line 136
nop 
mov r7.xyz, r7.xyzx
mov r3.xyw, r3.xyxw
mov r4.y, r4.y
mov r0.yzw, r0.yyzw

#line 67 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
dp3 r1.w, r7.xyzx, r3.xywx
max r1.w, r1.w, l(0.000000)
min r4.x, r1.w, l(1.000000)  // r4.x <- NoV

#line 69
max r5.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)  // r5.x <- brdf_sample_point.x; r5.y <- brdf_sample_point.y

#line 70
nop 
mov r5.xy, r5.xyxx

#line 18 "C:\Users\2240225\Desktop\graphicEngine4\Shader\imageBasedLighting.hlsli"
sample_indexable(texture2d)(float,float,float,float) r5.xy, r5.xyxx, t35.xyzw, s1
mov r5.xy, r5.xyxx  // r5.x <- <sampleLutGgx return value>.x; r5.y <- <sampleLutGgx return value>.y

#line 70 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
mov r5.xy, r5.xyxx  // r5.x <- f_ab.x; r5.y <- f_ab.y

#line 72
mov r3.xyz, -r3.xywx
dp3 r1.w, r3.xyzx, r7.xyzx
add r1.w, r1.w, r1.w
mov r1.w, -r1.w
mul r6.xyz, r1.wwww, r7.xyzx
add r3.xyz, r3.xyzx, r6.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx  // r3.x <- R.x; r3.y <- R.y; r3.z <- R.z

#line 73
nop 
mov r3.xyz, r3.xyzx
mov r4.y, r4.y

#line 52 "C:\Users\2240225\Desktop\graphicEngine4\Shader\imageBasedLighting.hlsli"
resinfo_indexable(texturecube)(float,float,float,float)_uint r1.w, l(0), t34.xyzw
mov r1.w, r1.w  // r1.w <- numberOfLevels

#line 54
mov r3.w, l(1)
ineg r3.w, r3.w
iadd r1.w, r1.w, r3.w
utof r1.w, r1.w
mul r1.w, r1.w, r4.y  // r1.w <- lod

#line 56
sample_l_indexable(texturecube)(float,float,float,float) r3.xyz, r3.xyzx, t34.xyzw, s1, r1.w
mov r3.xyz, r3.xyzx  // r3.x <- <sampleSpecularPmrem return value>.x; r3.y <- <sampleSpecularPmrem return value>.y; r3.z <- <sampleSpecularPmrem return value>.z

#line 73 "C:\Users\2240225\Desktop\graphicEngine4\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
mov r3.xyz, r3.xyzx  // r3.x <- specular_light.x; r3.y <- specular_light.y; r3.z <- specular_light.z

#line 77
mov r1.w, -r4.y
add r1.w, r1.w, l(1.000000)
max r6.xyz, r0.yzwy, r1.wwww
mov r7.xyz, -r0.yzwy
add r6.xyz, r6.xyzx, r7.xyzx  // r6.x <- fr.x; r6.y <- fr.y; r6.z <- fr.z

#line 78
mov r1.w, -r4.x
add r1.w, r1.w, l(1.000000)
mov r3.w, l(1.000000)
mul r3.w, r1.w, r3.w
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r3.w
mul r4.xyw, r1.wwww, r6.xyxz
add r0.yzw, r0.yyzw, r4.xxyw  // r0.y <- k_s.x; r0.z <- k_s.y; r0.w <- k_s.z

#line 79
mul r0.yzw, r5.xxxx, r0.yyzw
add r0.yzw, r5.yyyy, r0.yyzw  // r0.y <- fss_ess.x; r0.z <- fss_ess.y; r0.w <- fss_ess.z

#line 81
mul r0.yzw, r0.yyzw, r3.xxyz  // r0.y <- <IblRadianceGgx return value>.x; r0.z <- <IblRadianceGgx return value>.y; r0.w <- <IblRadianceGgx return value>.z

#line 136 "C:\Users\2240225\Desktop\graphicEngine4\Shader\GltfModelCharacterPS.hlsl"
add r0.yzw, r0.yyzw, r8.xxyz  // r0.y <- specular.x; r0.z <- specular.y; r0.w <- specular.z

#line 141
mov r1.xyz, r1.xyzx  // r1.x <- emmisive.x; r1.y <- emmisive.y; r1.z <- emmisive.z

#line 142
mul r3.xyz, r0.xxxx, r2.xyzx
mov r4.xyw, -r2.xyxz
add r3.xyz, r3.xyzx, r4.xywx
mul r3.xyz, r3.xyzx, r4.zzzz
add r2.xyz, r2.xyzx, r3.xyzx

#line 143
mul r3.xyz, r0.xxxx, r0.yzwy
mov r4.xyw, -r0.yzyw
add r3.xyz, r3.xyzx, r4.xywx
mul r3.xyz, r3.xyzx, r4.zzzz
add r0.xyz, r0.yzwy, r3.xyzx  // r0.x <- specular.x; r0.y <- specular.y; r0.z <- specular.z

#line 145
add r0.xyz, r0.xyzx, r2.xyzx
add r0.xyz, r1.xyzx, r0.xyzx  // r0.x <- Lo.x; r0.y <- Lo.y; r0.z <- Lo.z

#line 147
mov o0.xyz, r0.xyzx
mov o0.w, r2.w
ret 
// Approximately 384 instruction slots used
