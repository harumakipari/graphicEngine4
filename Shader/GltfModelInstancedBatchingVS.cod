//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer VIEW_CONSTANTS_BUFFER
// {
//
//   row_major float4x4 vviewProjection;// Offset:    0 Size:    64
//   float4 vcameraPositon;             // Offset:   64 Size:    16 [unused]
//   row_major float4x4 vview;          // Offset:   80 Size:    64 [unused]
//   row_major float4x4 vprojection;    // Offset:  144 Size:    64 [unused]
//   row_major float4x4 vinverseProjection;// Offset:  208 Size:    64 [unused]
//   row_major float4x4 vinverseViewProjection;// Offset:  272 Size:    64 [unused]
//   row_major float4x4 vinvView;       // Offset:  336 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// VIEW_CONSTANTS_BUFFER             cbuffer      NA          NA            cb8      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// INSTANCE_MATRIX          0   xyzw        4     NONE   float   xyzw
// INSTANCE_MATRIX          1   xyzw        5     NONE   float   xyzw
// INSTANCE_MATRIX          2   xyzw        6     NONE   float   xyzw
// INSTANCE_MATRIX          3   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB8[4], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xy
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_input v7.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_temps 11
//
// Initial variable locations:
//   v0.x <- vsIn.position.x; v0.y <- vsIn.position.y; v0.z <- vsIn.position.z; v0.w <- vsIn.position.w; 
//   v1.x <- vsIn.normal.x; v1.y <- vsIn.normal.y; v1.z <- vsIn.normal.z; v1.w <- vsIn.normal.w; 
//   v2.x <- vsIn.tangent.x; v2.y <- vsIn.tangent.y; v2.z <- vsIn.tangent.z; v2.w <- vsIn.tangent.w; 
//   v3.x <- vsIn.texcoord.x; v3.y <- vsIn.texcoord.y; 
//   v4.x <- vsIn.instance_matrix._m00; v4.y <- vsIn.instance_matrix._m01; v4.z <- vsIn.instance_matrix._m02; v4.w <- vsIn.instance_matrix._m03; 
//   v5.x <- vsIn.instance_matrix._m10; v5.y <- vsIn.instance_matrix._m11; v5.z <- vsIn.instance_matrix._m12; v5.w <- vsIn.instance_matrix._m13; 
//   v6.x <- vsIn.instance_matrix._m20; v6.y <- vsIn.instance_matrix._m21; v6.z <- vsIn.instance_matrix._m22; v6.w <- vsIn.instance_matrix._m23; 
//   v7.x <- vsIn.instance_matrix._m30; v7.y <- vsIn.instance_matrix._m31; v7.z <- vsIn.instance_matrix._m32; v7.w <- vsIn.instance_matrix._m33; 
//   o4.x <- <main return value>.texcoord.x; o4.y <- <main return value>.texcoord.y; 
//   o3.x <- <main return value>.wTangent.x; o3.y <- <main return value>.wTangent.y; o3.z <- <main return value>.wTangent.z; o3.w <- <main return value>.wTangent.w; 
//   o2.x <- <main return value>.wNormal.x; o2.y <- <main return value>.wNormal.y; o2.z <- <main return value>.wNormal.z; o2.w <- <main return value>.wNormal.w; 
//   o1.x <- <main return value>.wPosition.x; o1.y <- <main return value>.wPosition.y; o1.z <- <main return value>.wPosition.z; o1.w <- <main return value>.wPosition.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 8 "C:\Users\2240225\Desktop\graphicEngine4\Shader\GltfModelInstancedBatchingVS.hlsl"
mov r0.x, v4.x  // r0.x <- worldTransform._m00
mov r1.x, v4.y  // r1.x <- worldTransform._m01
mov r2.x, v4.z  // r2.x <- worldTransform._m02
mov r3.x, v4.w  // r3.x <- worldTransform._m03
mov r0.y, v5.x  // r0.y <- worldTransform._m10
mov r1.y, v5.y  // r1.y <- worldTransform._m11
mov r2.y, v5.z  // r2.y <- worldTransform._m12
mov r3.y, v5.w  // r3.y <- worldTransform._m13
mov r0.z, v6.x  // r0.z <- worldTransform._m20
mov r1.z, v6.y  // r1.z <- worldTransform._m21
mov r2.z, v6.z  // r2.z <- worldTransform._m22
mov r3.z, v6.w  // r3.z <- worldTransform._m23
mov r4.xyzw, v7.xyzw  // r4.x <- worldTransform._m30; r4.y <- worldTransform._m31; r4.z <- worldTransform._m32; r4.w <- worldTransform._m33

#line 10
itof r5.x, l(1)
mul r6.xyzw, r0.xxxx, cb8[0].xyzw
mul r7.xyzw, r1.xxxx, cb8[1].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r2.xxxx, cb8[2].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r3.xxxx, cb8[3].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r0.yyyy, cb8[0].xyzw
mul r8.xyzw, r1.yyyy, cb8[1].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, r2.yyyy, cb8[2].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, r3.yyyy, cb8[3].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, r0.zzzz, cb8[0].xyzw
mul r9.xyzw, r1.zzzz, cb8[1].xyzw
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, r2.zzzz, cb8[2].xyzw
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, r3.zzzz, cb8[3].xyzw
add r8.xyzw, r8.xyzw, r9.xyzw
mul r9.xyzw, r4.xxxx, cb8[0].xyzw
mul r10.xyzw, r4.yyyy, cb8[1].xyzw
add r9.xyzw, r9.xyzw, r10.xyzw
mul r10.xyzw, r4.zzzz, cb8[2].xyzw
add r9.xyzw, r9.xyzw, r10.xyzw
mul r10.xyzw, r4.wwww, cb8[3].xyzw
add r9.xyzw, r9.xyzw, r10.xyzw
mul r6.xyzw, r6.xyzw, v0.xxxx
mul r7.xyzw, r7.xyzw, v0.yyyy
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r8.xyzw, v0.zzzz
add r6.xyzw, r6.xyzw, r7.xyzw
mul r5.xyzw, r5.xxxx, r9.xyzw
add r5.xyzw, r5.xyzw, r6.xyzw  // r5.x <- vsOut.position.x; r5.y <- vsOut.position.y; r5.z <- vsOut.position.z; r5.w <- vsOut.position.w

#line 11
itof r6.w, l(1)
mov r6.xyz, v0.xyzx
mov r0.w, r4.x
dp4 r7.x, r6.xyzw, r0.xyzw  // r7.x <- vsOut.wPosition.x
mov r1.w, r4.y
dp4 r7.y, r6.xyzw, r1.xyzw  // r7.y <- vsOut.wPosition.y
mov r2.w, r4.z
dp4 r7.z, r6.xyzw, r2.xyzw  // r7.z <- vsOut.wPosition.z
mov r3.w, r4.w
dp4 r7.w, r6.xyzw, r3.xyzw  // r7.w <- vsOut.wPosition.w

#line 13
itof r4.w, l(0)
mov r4.xyz, v1.xyzx
dp4 r6.x, r4.xyzw, r0.xyzw
dp4 r6.y, r4.xyzw, r1.xyzw
dp4 r6.z, r4.xyzw, r2.xyzw
dp4 r6.w, r4.xyzw, r3.xyzw
dp4 r4.x, r6.xyzw, r6.xyzw
rsq r4.x, r4.x
mul r4.xyz, r4.xxxx, r6.xyzx  // r4.x <- vsOut.wNormal.x; r4.y <- vsOut.wNormal.y; r4.z <- vsOut.wNormal.z

#line 14
itof r4.w, l(0)  // r4.w <- vsOut.wNormal.w

#line 16
mov r6.x, v2.w  // r6.x <- sigma

#line 17
itof r8.w, l(0)
mov r8.xyz, v2.xyzx
dp4 r0.x, r8.xyzw, r0.xyzw
dp4 r0.y, r8.xyzw, r1.xyzw
dp4 r0.z, r8.xyzw, r2.xyzw
dp4 r0.w, r8.xyzw, r3.xyzw
dp4 r0.w, r0.xyzw, r0.xyzw
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- vsOut.wTangent.x; r0.y <- vsOut.wTangent.y; r0.z <- vsOut.wTangent.z

#line 19
mov r6.x, r6.x  // r6.x <- vsOut.wTangent.w

#line 23
mov r1.xy, v3.xyxx  // r1.x <- vsOut.texcoord.x; r1.y <- vsOut.texcoord.y

#line 26
mov o0.xyzw, r5.xyzw
mov o1.xyzw, r7.xyzw
mov o2.xyz, r4.xyzx
mov o2.w, r4.w
mov o3.xyz, r0.xyzx
mov o3.w, r6.x
mov o4.xy, r1.xyxx
ret 
// Approximately 89 instruction slots used
