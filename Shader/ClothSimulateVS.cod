//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 cpuColor;                   // Offset:   64 Size:    16 [unused]
//   int material;                      // Offset:   80 Size:     4 [unused]
//   bool hasTangent;                   // Offset:   84 Size:     4 [unused]
//   int skin;                          // Offset:   88 Size:     4 [unused]
//   float dissolveValue;               // Offset:   92 Size:     4 [unused]
//   float emission;                    // Offset:   96 Size:     4 [unused]
//   float3 pads;                       // Offset:  100 Size:    12 [unused]
//   row_major float4x4 invWorld;       // Offset:  112 Size:    64 [unused]
//
// }
//
// cbuffer VIEW_CONSTANTS_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//   float4 cameraPositon;              // Offset:   64 Size:    16 [unused]
//   row_major float4x4 view;           // Offset:   80 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:  144 Size:    64 [unused]
//   row_major float4x4 inverseProjection;// Offset:  208 Size:    64 [unused]
//   row_major float4x4 inverseViewProjection;// Offset:  272 Size:    64 [unused]
//   row_major float4x4 invView;        // Offset:  336 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// VIEW_CONSTANTS_BUFFER             cbuffer      NA          NA            cb4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy  
// VELOCITY                 0   xyz         4     NONE   float       
// OLDPOSITION              0   xyz         5     NONE   float       
// OLDVELOCITY              0   xyz         6     NONE   float       
// ROTATION                 0   xyzw        7     NONE   float   xyzw
// ISPINNED                 0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB4[4], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xy
dcl_input v7.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_temps 2
mul r0.xyzw, cb0[1].yyyy, cb4[1].xyzw
mad r0.xyzw, cb0[1].xxxx, cb4[0].xyzw, r0.xyzw
mad r0.xyzw, cb0[1].zzzz, cb4[2].xyzw, r0.xyzw
mad r0.xyzw, cb0[1].wwww, cb4[3].xyzw, r0.xyzw
mul r0.xyzw, r0.xyzw, v0.yyyy
mul r1.xyzw, cb0[0].yyyy, cb4[1].xyzw
mad r1.xyzw, cb0[0].xxxx, cb4[0].xyzw, r1.xyzw
mad r1.xyzw, cb0[0].zzzz, cb4[2].xyzw, r1.xyzw
mad r1.xyzw, cb0[0].wwww, cb4[3].xyzw, r1.xyzw
mad r0.xyzw, v0.xxxx, r1.xyzw, r0.xyzw
mul r1.xyzw, cb0[2].yyyy, cb4[1].xyzw
mad r1.xyzw, cb0[2].xxxx, cb4[0].xyzw, r1.xyzw
mad r1.xyzw, cb0[2].zzzz, cb4[2].xyzw, r1.xyzw
mad r1.xyzw, cb0[2].wwww, cb4[3].xyzw, r1.xyzw
mad r0.xyzw, v0.zzzz, r1.xyzw, r0.xyzw
mul r1.xyzw, cb0[3].yyyy, cb4[1].xyzw
mad r1.xyzw, cb0[3].xxxx, cb4[0].xyzw, r1.xyzw
mad r1.xyzw, cb0[3].zzzz, cb4[2].xyzw, r1.xyzw
mad r1.xyzw, cb0[3].wwww, cb4[3].xyzw, r1.xyzw
add o0.xyzw, r0.xyzw, r1.xyzw
mul r0.xyzw, v0.yyyy, cb0[1].xyzw
mad r0.xyzw, v0.xxxx, cb0[0].xyzw, r0.xyzw
mad r0.xyzw, v0.zzzz, cb0[2].xyzw, r0.xyzw
add o1.xyzw, r0.xyzw, cb0[3].xyzw
dp2 r0.x, v7.wyww, v1.xzxx
mad r0.x, -v7.z, v1.y, r0.x
dp3 r0.y, v7.xyzx, v1.xyzx
mul r0.z, r0.y, v7.x
mad r0.z, r0.x, v7.w, r0.z
mul r0.xw, r0.xxxx, -v7.zzzy
mul r1.x, v1.z, v7.x
mad r1.x, v7.w, v1.y, -r1.x
mad r1.x, v7.z, v1.x, r1.x
mad r0.z, r1.x, -v7.z, r0.z
dp2 r1.y, v7.xwxx, v1.yzyy
mad r1.y, -v7.y, v1.x, r1.y
mad r0.z, -r1.y, -v7.y, r0.z
mad r0.x, r0.y, v7.y, -r0.x
mad r0.y, r0.y, v7.z, r0.w
mad r0.y, -r1.x, -v7.x, r0.y
mad r0.x, r1.x, v7.w, r0.x
mad r0.x, r1.y, -v7.x, r0.x
mad r0.y, r1.y, v7.w, r0.y
mul r1.xyzw, r0.xxxx, cb0[1].xyzw
mad r1.xyzw, r0.zzzz, cb0[0].xyzw, r1.xyzw
mad r0.xyzw, r0.yyyy, cb0[2].xyzw, r1.xyzw
dp4 r1.x, r0.xyzw, r0.xyzw
rsq r1.x, r1.x
mul o2.xyzw, r0.xyzw, r1.xxxx
dp2 r0.x, v7.wyww, v2.xzxx
mad r0.x, -v7.z, v2.y, r0.x
dp3 r0.y, v7.xyzx, v2.xyzx
mul r0.z, r0.y, v7.x
mad r0.z, r0.x, v7.w, r0.z
mul r0.xw, r0.xxxx, -v7.zzzy
mul r1.x, v2.z, v7.x
mad r1.x, v7.w, v2.y, -r1.x
mad r1.x, v7.z, v2.x, r1.x
mad r0.z, r1.x, -v7.z, r0.z
dp2 r1.y, v7.xwxx, v2.yzyy
mad r1.y, -v7.y, v2.x, r1.y
mad r0.z, -r1.y, -v7.y, r0.z
mad r0.x, r0.y, v7.y, -r0.x
mad r0.y, r0.y, v7.z, r0.w
mad r0.y, -r1.x, -v7.x, r0.y
mad r0.x, r1.x, v7.w, r0.x
mad r0.x, r1.y, -v7.x, r0.x
mad r0.y, r1.y, v7.w, r0.y
mul r1.xyzw, r0.xxxx, cb0[1].xyzw
mad r1.xyzw, r0.zzzz, cb0[0].xyzw, r1.xyzw
mad r0.xyzw, r0.yyyy, cb0[2].xyzw, r1.xyzw
dp4 r0.w, r0.xyzw, r0.xyzw
rsq r0.w, r0.w
mul o3.xyz, r0.wwww, r0.xyzx
mov o3.w, v2.w
mov o4.xy, v3.xyxx
ret 
// Approximately 77 instruction slots used
