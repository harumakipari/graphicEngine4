//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SHADER_CONSTANT_BUFFER
// {
//
//   float shadowColor;                 // Offset:    0 Size:     4
//   float shadowDepthBias;             // Offset:    4 Size:     4
//   bool colorizeCascadedLayer;        // Offset:    8 Size:     4
//   float maxDistance;                 // Offset:   12 Size:     4 [unused]
//   float resolution;                  // Offset:   16 Size:     4 [unused]
//   int steps;                         // Offset:   20 Size:     4 [unused]
//   float thickness;                   // Offset:   24 Size:     4 [unused]
//
// }
//
// cbuffer CSM_CONSTANTS
// {
//
//   row_major float4x4 cascadedMatrices[4];// Offset:    0 Size:   256
//   float4 cascadedPlaneDistances;     // Offset:  256 Size:    16
//
// }
//
// cbuffer VIEW_CONSTANTS_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 cameraPositon;              // Offset:   64 Size:    16 [unused]
//   row_major float4x4 view;           // Offset:   80 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:  144 Size:    64 [unused]
//   row_major float4x4 inverseProjection;// Offset:  208 Size:    64
//   row_major float4x4 inverseViewProjection;// Offset:  272 Size:    64
//   row_major float4x4 invView;        // Offset:  336 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerStates[3]                  sampler      NA          NA             s3      1 
// comparisonSamplerstate          sampler_c      NA          NA             s7      1 
// colorMap                          texture  float4          2d             t0      1 
// depthMap                          texture  float4          2d             t2      1 
// cascadedShadowMaps                texture  float4     2darray             t3      1 
// CSM_CONSTANTS                     cbuffer      NA          NA            cb3      1 
// VIEW_CONSTANTS_BUFFER             cbuffer      NA          NA            cb4      1 
// SHADER_CONSTANT_BUFFER            cbuffer      NA          NA            cb9      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { 0, 1.000000, 1.000000, 0} }
dcl_constantbuffer CB9[1], immediateIndexed
dcl_constantbuffer CB3[17], dynamicIndexed
dcl_constantbuffer CB4[21], immediateIndexed
dcl_sampler s3, mode_default
dcl_sampler s7, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2darray (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t2.xyzw, s3
mad r1.y, v1.x, l(2.000000), l(-1.000000)
mad r1.z, v1.y, l(-2.000000), l(1.000000)
mul r2.xy, r1.zzzz, cb4[14].zwzz
mad r2.xy, r1.yyyy, cb4[13].zwzz, r2.xyxx
mad r2.xy, r1.xxxx, cb4[15].zwzz, r2.xyxx
add r2.xy, r2.xyxx, cb4[16].zwzz
div r1.w, r2.x, r2.y
mov r2.xy, l(-1,0,0,0)
loop 
  uge r2.z, r2.y, l(4)
  breakc_nz r2.z
  dp4 r2.z, cb3[16].xyzw, icb[r2.y + 0].xyzw
  lt r2.z, r1.w, r2.z
  if_nz r2.z
    mov r2.x, r2.y
    break 
  endif 
  iadd r2.y, r2.y, l(1)
  mov r2.x, l(-1)
endloop 
ilt r1.w, l(-1), r2.x
if_nz r1.w
  mul r3.xyzw, r1.zzzz, cb4[18].xyzw
  mad r3.xyzw, r1.yyyy, cb4[17].xyzw, r3.xyzw
  mad r1.xyzw, r1.xxxx, cb4[19].xyzw, r3.xyzw
  add r1.xyzw, r1.xyzw, cb4[20].xyzw
  div r1.xyzw, r1.xyzw, r1.wwww
  ishl r2.y, r2.x, l(2)
  mul r3.xyzw, r1.yyyy, cb3[r2.y + 1].xyzw
  mad r3.xyzw, r1.xxxx, cb3[r2.y + 0].xyzw, r3.xyzw
  mad r3.xyzw, r1.zzzz, cb3[r2.y + 2].xyzw, r3.xyzw
  mad r1.xyzw, r1.wwww, cb3[r2.y + 3].xyzw, r3.xyzw
  div r1.xyz, r1.xyzx, r1.wwww
  mad r3.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  itof r3.z, r2.x
  add r1.x, r1.z, -cb9[0].y
  sample_c_lz_indexable(texture2darray)(float,float,float,float) r1.x, r3.xyzx, t3.xxxx, s7, r1.x
  if_nz cb9[0].z
    mov r1.yzw, icb[r2.x + 1].yyzw
  else 
    mov r1.yzw, l(0,1.000000,1.000000,1.000000)
  endif 
  add r2.x, -cb9[0].x, l(1.000000)
  mad r1.x, r1.x, r2.x, cb9[0].x
  mul r1.xyz, r1.yzwy, r1.xxxx
  mul r0.xyz, r0.xyzx, r1.xyzx
endif 
mul r0.xyz, r0.xyzx, l(-1.731234, -1.731234, -1.731234, 0.000000)
exp r0.xyz, r0.xyzx
add r0.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
exp o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 57 instruction slots used
