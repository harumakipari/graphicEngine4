//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CLOTH_SIMULATE_CBUFFER
// {
//
//   float g;                           // Offset:    0 Size:     4 [unused]
//   uint vertexCount;                  // Offset:    4 Size:     4
//   float align[2];                    // Offset:   16 Size:    20 [unused]
//
// }
//
// Resource bind info for inVertices
// {
//
//   struct
//   {
//       
//       float3 position;               // Offset:    0
//       float3 normal;                 // Offset:   12
//       float4 tangent;                // Offset:   24
//       float2 texcoord;               // Offset:   40
//       float3 velocity;               // Offset:   48
//       float3 oldPosition;            // Offset:   60
//       float3 oldVelocity;            // Offset:   72
//       float4 rotation;               // Offset:   84
//       uint isPinned;                 // Offset:  100
//
//   } $Element;                        // Offset:    0 Size:   104
//
// }
//
// Resource bind info for clothEdgeSRV
// {
//
//   struct
//   {
//       
//       uint neighbor;                 // Offset:    0
//       float3 delta;                  // Offset:    4
//       float restLength;              // Offset:   16
//
//   } $Element;                        // Offset:    0 Size:    20
//
// }
//
// Resource bind info for outVertices
// {
//
//   struct
//   {
//       
//       float3 position;               // Offset:    0
//       float3 normal;                 // Offset:   12
//       float4 tangent;                // Offset:   24
//       float2 texcoord;               // Offset:   40
//       float3 velocity;               // Offset:   48
//       float3 oldPosition;            // Offset:   60
//       float3 oldVelocity;            // Offset:   72
//       float4 rotation;               // Offset:   84
//       uint isPinned;                 // Offset:  100
//
//   } $Element;                        // Offset:    0 Size:   104
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// inVertices                        texture  struct         r/o             t0      1 
// clothEdgeSRV                      texture  struct         r/o             t1      1 
// outVertices                           UAV  struct         r/w             u0      1 
// CLOTH_SIMULATE_CBUFFER            cbuffer      NA          NA           cb10      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_4_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB10[1], immediateIndexed
dcl_resource_structured t0, 104
dcl_resource_structured t1, 20
dcl_uav_structured u0, 104
dcl_input vThreadID.x
dcl_temps 17
dcl_thread_group 16, 1, 1
uge r0.x, vThreadID.x, cb10[0].y
if_nz r0.x
  ret 
endif 
ld_structured r0.xyzw, vThreadID.x, l(0), t0.xyzw
ld_structured r1.xyzw, vThreadID.x, l(16), t0.xyzw
ld_structured r2.xyzw, vThreadID.x, l(32), t0.xyzw
ld_structured r3.xyzw, vThreadID.x, l(48), t0.xyzw
ld_structured r4.xyzw, vThreadID.x, l(64), t0.xyzw
ld_structured r5.xyzw, vThreadID.x, l(80), t0.xyzw
ld_structured r6.xy, vThreadID.x, l(96), t0.xyxx
ieq r7.x, r6.y, l(1)
if_nz r7.x
  store_structured u0.xyzw, vThreadID.x, l(0), r0.xyzw
  store_structured u0.xyzw, vThreadID.x, l(16), r1.xyzw
  store_structured u0.xyzw, vThreadID.x, l(32), r2.xyzw
  mov r7.x, l(0)
  mov r7.w, r3.w
  store_structured u0.xyzw, vThreadID.x, l(48), r7.xxxw
  store_structured u0.xyzw, vThreadID.x, l(64), r4.xyzw
  store_structured u0.xyzw, vThreadID.x, l(80), r5.xyzw
  mov r6.z, l(1)
  store_structured u0.xy, vThreadID.x, l(96), r6.xzxx
  ret 
endif 
ld_structured r7.xyz, vThreadID.x, l(0), t0.xyzx
ishl r6.z, vThreadID.x, l(3)
mov r8.xyzw, l(0,0,0,0)
mov r9.xyzw, l(0,0,0,0)
mov r10.xyzw, l(0,0,0,0)
mov r11.xyzw, l(0,0,0,0)
mov r7.w, l(0)
loop 
  uge r12.x, r7.w, l(8)
  breakc_nz r12.x
  iadd r12.x, r6.z, r7.w
  ld_structured r12.xyzw, r12.x, l(0), t1.xyzw
  ieq r13.x, r12.x, l(-1)
  if_nz r13.x
    iadd r13.x, r7.w, l(1)
    mov r7.w, r13.x
    continue 
  endif 
  ld_structured r13.xyz, r12.x, l(0), t0.xyzx
  add r13.xyz, -r7.xyzx, r13.xyzx
  mov r13.w, -r13.z
  mul r14.xyz, r13.zxyz, l(1.000000, -1.000000, 1.000000, 0.000000)
  mul r15.xyz, r13.yxzy, l(-1.000000, 1.000000, 1.000000, 0.000000)
  mad r16.xyz, r12.wzyw, l(1.000000, -1.000000, 1.000000, 0.000000), -r13.wyxw
  mad r14.xyz, r12.wyzw, l(-1.000000, 1.000000, 1.000000, 0.000000), -r14.xyzx
  mad r15.xyz, r12.zywz, l(1.000000, -1.000000, 1.000000, 0.000000), -r15.xyzx
  mad r12.xyz, -r13.xywx, l(-1.000000, -1.000000, 1.000000, 0.000000), -r12.yzwy
  dp3 r13.x, r16.xyzx, r16.xyzx
  dp2 r13.y, r16.yzyy, r14.yzyy
  dp2 r13.z, r16.xzxx, r15.yzyy
  dp2 r13.w, r16.xyxx, r12.yzyy
  dp3 r16.y, r14.xyzx, r14.xyzx
  dp2 r16.z, r14.xzxx, r15.xzxx
  dp2 r16.w, r14.xyxx, r12.xzxx
  dp3 r14.z, r15.xyzx, r15.xyzx
  dp2 r14.w, r15.xyxx, r12.xyxx
  dp3 r12.w, r12.xyzx, r12.xyzx
  add r8.xyzw, r8.xyzw, r13.xyzw
  mov r16.x, r13.y
  add r9.xyzw, r9.xyzw, r16.xyzw
  mov r14.x, r13.z
  mov r14.y, r16.z
  add r10.xyzw, r10.xyzw, r14.xyzw
  mov r12.x, r13.w
  mov r12.y, r16.w
  mov r12.z, r14.w
  add r11.xyzw, r11.xyzw, r12.xyzw
  iadd r7.w, r7.w, l(1)
endloop 
mov r7.xyz, r5.yzwy
mov r7.w, r6.x
dp4 r8.x, r7.xyzw, r8.xyzw
dp4 r8.y, r7.xyzw, r9.xyzw
dp4 r8.z, r7.xyzw, r10.xyzw
dp4 r8.w, r7.xyzw, r11.xyzw
mad r7.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000), r7.xyzw
dp4 r6.x, r7.xyzw, r7.xyzw
rsq r6.x, r6.x
mul r7.xyzw, r6.xxxx, r7.xyzw
store_structured u0.xyzw, vThreadID.x, l(0), r0.xyzw
store_structured u0.xyzw, vThreadID.x, l(16), r1.xyzw
store_structured u0.xyzw, vThreadID.x, l(32), r2.xyzw
store_structured u0.xyzw, vThreadID.x, l(48), r3.xyzw
store_structured u0.xyzw, vThreadID.x, l(64), r4.xyzw
mov r5.yzw, r7.xxyz
store_structured u0.xyzw, vThreadID.x, l(80), r5.xyzw
mov r6.w, r7.w
store_structured u0.xy, vThreadID.x, l(96), r6.wyww
ret 
// Approximately 94 instruction slots used
