//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PARTICLE_SYSTEM_CONSTANTS
// {
//
//   float4 emissionPosition;           // Offset:    0 Size:    16 [unused]
//   float2 emissionOffset;             // Offset:   16 Size:     8 [unused]
//   float2 emissionSize;               // Offset:   24 Size:     8 [unused]
//   float2 emisionConeAngle;           // Offset:   32 Size:     8 [unused]
//   float2 emissionSpeed;              // Offset:   40 Size:     8 [unused]
//   float2 emissionAngularSpeed;       // Offset:   48 Size:     8 [unused]
//   float2 lifespan;                   // Offset:   56 Size:     8 [unused]
//   float2 spawnDelay;                 // Offset:   64 Size:     8 [unused]
//   float2 fadeDuration;               // Offset:   72 Size:     8 [unused]
//   float4 emissionStartColor;         // Offset:   80 Size:    16 [unused]
//   float4 emissionEndColor;           // Offset:   96 Size:    16 [unused]
//   float currentTime;                 // Offset:  112 Size:     4 [unused]
//   float deltaTime;                   // Offset:  116 Size:     4 [unused]
//   float _noiseScale;                 // Offset:  120 Size:     4 [unused]
//   float gravity;                     // Offset:  124 Size:     4 [unused]
//   uint2 spriteSheetGrid;             // Offset:  128 Size:     8
//   uint maxParticleCount;             // Offset:  136 Size:     4 [unused]
//   float3 direction;                  // Offset:  144 Size:    12 [unused]
//   float strength;                    // Offset:  156 Size:     4 [unused]
//   row_major float4x4 nodeWorldTransform;// Offset:  160 Size:    64 [unused]
//   row_major float4x4 worldTransform; // Offset:  224 Size:    64 [unused]
//   float2 radius;                     // Offset:  288 Size:     8 [unused]
//   bool loop;                         // Offset:  296 Size:     4 [unused]
//   int type;                          // Offset:  300 Size:     4 [unused]
//      = 0x00000000 
//   int isStatic;                      // Offset:  304 Size:     4 [unused]
//
// }
//
// cbuffer VIEW_CONSTANTS_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//   float4 cameraPositon;              // Offset:   64 Size:    16 [unused]
//   row_major float4x4 view;           // Offset:   80 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:  144 Size:    64 [unused]
//   row_major float4x4 inverseProjection;// Offset:  208 Size:    64 [unused]
//   row_major float4x4 inverseViewProjection;// Offset:  272 Size:    64 [unused]
//   row_major float4x4 invView;        // Offset:  336 Size:    64 [unused]
//
// }
//
// Resource bind info for particleBuffer
// {
//
//   struct Particle
//   {
//       
//       int state;                     // Offset:    0
//       float4 color;                  // Offset:    4
//       float3 position;               // Offset:   20
//       float mass;                    // Offset:   32
//       float angle;                   // Offset:   36
//       float angularSpeed;            // Offset:   40
//       float3 velocity;               // Offset:   44
//       float lifespan;                // Offset:   56
//       float age;                     // Offset:   60
//       float2 size;                   // Offset:   64
//       uint chip;                     // Offset:   72
//
//   } $Element;                        // Offset:    0 Size:    76
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// particleBuffer                    texture  struct         r/o             t9      1 
// VIEW_CONSTANTS_BUFFER             cbuffer      NA          NA            cb4      1 
// PARTICLE_SYSTEM_CONSTANTS         cbuffer      NA          NA            cb9      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// VERTEXID                 0   x           0     NONE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB9[9], immediateIndexed
dcl_constantbuffer CB4[4], immediateIndexed
dcl_resource_structured t9, 76
dcl_input v[1][0].x
dcl_temps 9
dcl_inputprimitive point 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_maxout 4
ld_structured_indexable(structured_buffer, stride=76)(mixed,mixed,mixed,mixed) r0.xyzw, v[0][0].x, l(56), t9.xyzw
ge r1.x, l(0.000000), r0.y
ge r1.y, r0.y, r0.x
or r1.x, r1.y, r1.x
if_nz r1.x
  ret 
endif 
ld_structured_indexable(structured_buffer, stride=76)(mixed,mixed,mixed,mixed) r1.xyzw, v[0][0].x, l(4), t9.xyzw
ld_structured_indexable(structured_buffer, stride=76)(mixed,mixed,mixed,mixed) r2.xyz, v[0][0].x, l(20), t9.xyzx
ld_structured_indexable(structured_buffer, stride=76)(mixed,mixed,mixed,mixed) r2.w, v[0][0].x, l(36), t9.xxxx
ld_structured_indexable(structured_buffer, stride=76)(mixed,mixed,mixed,mixed) r3.x, v[0][0].x, l(72), t9.xxxx
div_sat r0.x, r0.y, r0.x
add r0.y, -r0.z, r0.w
mad r0.x, r0.x, r0.y, r0.z
mul r4.xyzw, r2.yyyy, cb4[1].xyzw
mad r4.xyzw, r2.xxxx, cb4[0].xyzw, r4.xyzw
mad r4.xyzw, r2.zzzz, cb4[2].xyzw, r4.xyzw
add r4.xyzw, r4.xyzw, cb4[3].xyzw
sincos r2.x, r5.x, r2.w
add r6.y, r2.x, -r5.x
add r6.z, -r2.x, -r5.x
mul r0.y, r0.x, l(1.777778)
mad r0.zw, r6.yyyz, r0.xxxy, r4.xxxy
utof r2.yz, cb9[8].xxyx
div r7.xyzw, l(0.000000, 1.000000, 1.000000, 0.000000), r2.yzyz
div r2.yz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.yyzy
udiv r3.x, r8.x, r3.x, cb9[8].x
utof r8.x, r8.x
utof r8.y, r3.x
mul r3.xy, r2.yzyy, r8.xyxx
mad r7.xyzw, r2.yzyz, r8.xyxy, r7.xyzw
mov o0.xy, r0.zwzz
mov o0.zw, r4.zzzw
mov o1.xyzw, r1.xyzw
mov o2.xy, r7.xyxx
emit_stream m0
add r6.w, -r2.x, r5.x
mad r0.zw, r6.zzzw, r0.xxxy, r4.xxxy
mov o0.xy, r0.zwzz
mov o0.zw, r4.zzzw
mov o1.xyzw, r1.xyzw
mov o2.xy, r3.xyxx
emit_stream m0
add r6.x, r2.x, r5.x
mad r0.xyzw, r6.xywx, r0.xyxy, r4.xyxy
mad r2.xy, r2.yzyy, r8.xyxx, r2.yzyy
mov o0.xy, r0.xyxx
mov o0.zw, r4.zzzw
mov o1.xyzw, r1.xyzw
mov o2.xy, r2.xyxx
emit_stream m0
mov o0.xy, r0.zwzz
mov o0.zw, r4.zzzw
mov o1.xyzw, r1.xyzw
mov o2.xy, r7.zwzz
emit_stream m0
cut_stream m0
ret 
// Approximately 58 instruction slots used
