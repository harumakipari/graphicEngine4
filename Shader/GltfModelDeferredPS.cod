//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64 [unused]
//   float4 cpuColor;                   // Offset:   64 Size:    16 [unused]
//   int material;                      // Offset:   80 Size:     4
//   bool hasTangent;                   // Offset:   84 Size:     4
//   int skin;                          // Offset:   88 Size:     4 [unused]
//   float dissolveValue;               // Offset:   92 Size:     4 [unused]
//   float emission;                    // Offset:   96 Size:     4 [unused]
//   float3 pads;                       // Offset:  100 Size:    12 [unused]
//   row_major float4x4 invWorld;       // Offset:  112 Size:    64 [unused]
//
// }
//
// Resource bind info for materials
// {
//
//   struct MaterialConstants
//   {
//       
//       float3 emissiveFactor;         // Offset:    0
//       int alphaMode;                 // Offset:   12
//       float alphaCutoff;             // Offset:   16
//       bool doubleSided;              // Offset:   20
//       
//       struct PbrMetallicRoughness
//       {
//           
//           float4 baseColorFactor;    // Offset:   24
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   40
//               int texcoord;          // Offset:   44
//
//           } basecolorTexture;        // Offset:   40
//           float metallicFactor;      // Offset:   48
//           float roughnessFactor;     // Offset:   52
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   56
//               int texcoord;          // Offset:   60
//
//           } metallicRoughnessTexture;// Offset:   56
//
//       } pbrMetallicRoughness;        // Offset:   24
//       
//       struct NormalTextureInfo
//       {
//           
//           int index;                 // Offset:   64
//           int texcoord;              // Offset:   68
//           float scale;               // Offset:   72
//
//       } normalTexture;               // Offset:   64
//       
//       struct OcclusionTextureInfo
//       {
//           
//           int index;                 // Offset:   76
//           int texcoord;              // Offset:   80
//           float strength;            // Offset:   84
//
//       } occlusionTexture;            // Offset:   76
//       
//       struct TextureInfo
//       {
//           
//           int index;                 // Offset:   88
//           int texcoord;              // Offset:   92
//
//       } emissiveTexture;             // Offset:   88
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerStates[1]                  sampler      NA          NA             s1      1 
// samplerStates[2]                  sampler      NA          NA             s2      1 
// materials                         texture  struct         r/o             t0      1 
// materialTextures[0]               texture  float4          2d             t1      1 
// materialTextures[1]               texture  float4          2d             t2      1 
// materialTextures[2]               texture  float4          2d             t3      1 
// materialTextures[3]               texture  float4          2d             t4      1 
// materialTextures[4]               texture  float4          2d             t5      1 
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// SV_IsFrontFace           0   x           5    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
// SV_TARGET                3   xyzw        3   TARGET   float   xyzw
// SV_TARGET                4   xyzw        4   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_structured t0, 96
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps_sgv constant v5.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 7
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.xyzw, cb0[5].x, l(0), t0.xyzw
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.x, cb0[5].x, l(16), t0.xxxx
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.xyzw, cb0[5].x, l(24), t0.xyzw
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.y, cb0[5].x, l(40), t0.xxxx
ilt r1.y, l(-1), r1.y
if_nz r1.y
  sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v4.xyxx, t1.xyzw, s2
  log r1.yzw, r3.xxyz
  mul r1.yzw, r1.yyzw, l(0.000000, 2.200000, 2.200000, 2.200000)
  exp r3.xyz, r1.yzwy
  mul o2.xyzw, r2.xyzw, r3.xyzw
else 
  mov o2.xyzw, r2.xyzw
endif 
movc r0.w, r0.w, r2.w, l(1.000000)
lt r0.w, r0.w, r1.x
discard_nz r0.w
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.xyz, cb0[5].x, l(48), t0.xyzx
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.w, cb0[5].x, l(64), t0.xxxx
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.xy, cb0[5].x, l(72), t0.xyxx
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.xw, cb0[5].x, l(84), t0.yxxx
ilt r1.w, l(-1), r3.x
if_nz r1.w
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, v4.xyxx, t4.xyzw, s2
  log r4.xyz, r4.xyzx
  mul r4.xyz, r4.xyzx, l(2.200000, 2.200000, 2.200000, 0.000000)
  exp r4.xyz, r4.xyzx
  mul r0.xyz, r0.xyzx, r4.xyzx
endif 
ilt r1.z, l(-1), r1.z
if_nz r1.z
  sample_indexable(texture2d)(float,float,float,float) r1.zw, v4.xyxx, t2.xwyz, s1
  mul r3.xy, r1.zwzz, r1.yxyy
else 
  mov r3.xy, r1.yxyy
endif 
ilt r1.x, l(-1), r2.y
if_nz r1.x
  sample_indexable(texture2d)(float,float,float,float) r3.z, v4.xyxx, t5.yzxw, s1
else 
  mov r3.z, l(1.000000)
endif 
dp3 r1.x, v2.xyzx, v2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v2.zxyz
movc r4.xyz, v5.xxxx, r1.yzxy, -r1.yzxy
ilt r0.w, l(-1), r0.w
if_nz r0.w
  dp3 r0.w, v3.xyzx, v3.xyzx
  rsq r0.w, r0.w
  mul r5.xyz, r0.wwww, v3.xyzx
  movc r5.xyz, cb0[5].yyyy, r5.xyzx, l(1.000000,0,0,0)
  movc r0.w, cb0[5].y, v3.w, l(1.000000)
  dp3 r1.w, r1.yzxy, r5.xyzx
  mad r5.xyz, -r1.yzxy, r1.wwww, r5.xyzx
  dp3 r1.w, r5.xyzx, r5.xyzx
  rsq r1.w, r1.w
  mul r5.xyz, r1.wwww, r5.xyzx
  mul r6.xyz, r1.xyzx, r5.yzxy
  mad r1.xyz, r1.zxyz, r5.zxyz, -r6.xyzx
  mul r1.xyz, r0.wwww, r1.xyzx
  dp3 r0.w, r1.xyzx, r1.xyzx
  rsq r0.w, r0.w
  mul r1.xyz, r0.wwww, r1.xyzx
  movc r5.xyz, v5.xxxx, r5.xyzx, -r5.xyzx
  movc r1.xyz, v5.xxxx, r1.xyzx, -r1.xyzx
  sample_indexable(texture2d)(float,float,float,float) r6.xyz, v4.xyxx, t3.xyzw, s1
  mad r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mov r2.z, l(1.000000)
  mul r2.xyz, r2.xxzx, r6.xyzx
  dp3 r0.w, r2.xyzx, r2.xyzx
  rsq r0.w, r0.w
  mul r2.xyz, r0.wwww, r2.xyzx
  mul r1.xyz, r1.xyzx, r2.yyyy
  mad r1.xyz, r2.xxxx, r5.xyzx, r1.xyzx
  mad r1.xyz, r2.zzzz, r4.xyzx, r1.xyzx
  dp3 r0.w, r1.xyzx, r1.xyzx
  rsq r0.w, r0.w
  mul r4.xyz, r0.wwww, r1.xyzx
endif 
mov o0.xyz, r4.xyzx
mov o0.w, l(0)
mov o1.xyzw, r3.yzxw
mov o3.xyzw, v1.xyzw
mov o4.xyz, r0.xyzx
mov o4.w, l(0)
ret 
// Approximately 87 instruction slots used
