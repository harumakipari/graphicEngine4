//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64 [unused]
//   float4 cpuColor;                   // Offset:   64 Size:    16
//   int material;                      // Offset:   80 Size:     4
//   bool hasTangent;                   // Offset:   84 Size:     4
//   int skin;                          // Offset:   88 Size:     4 [unused]
//   float dissolveValue;               // Offset:   92 Size:     4 [unused]
//   float emission;                    // Offset:   96 Size:     4
//   float3 pads;                       // Offset:  100 Size:    12 [unused]
//   row_major float4x4 invWorld;       // Offset:  112 Size:    64 [unused]
//
// }
//
// cbuffer VIEW_CONSTANTS_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 cameraPositon;              // Offset:   64 Size:    16
//   row_major float4x4 view;           // Offset:   80 Size:    64
//   row_major float4x4 projection;     // Offset:  144 Size:    64 [unused]
//   row_major float4x4 inverseProjection;// Offset:  208 Size:    64 [unused]
//   row_major float4x4 inverseViewProjection;// Offset:  272 Size:    64 [unused]
//   row_major float4x4 invView;        // Offset:  336 Size:    64 [unused]
//
// }
//
// cbuffer LIGHT_CONSTANT_BUFFER
// {
//
//   float4 lightDirection;             // Offset:    0 Size:    16
//   float4 colorLight;                 // Offset:   16 Size:    16
//   float iblIntensity;                // Offset:   32 Size:     4
//   int directionalLightEnable;        // Offset:   36 Size:     4 [unused]
//   int pointLightEnable;              // Offset:   40 Size:     4 [unused]
//   int pointLightCount;               // Offset:   44 Size:     4 [unused]
//   
//   struct PointLights
//   {
//       
//       float4 position;               // Offset:   48
//       float4 color;                  // Offset:   64
//       float range;                   // Offset:   80
//       float3 pads;                   // Offset:   84
//
//   } pointLights[8];                  // Offset:   48 Size:   384 [unused]
//
// }
//
// Resource bind info for materials
// {
//
//   struct MaterialConstants
//   {
//       
//       float3 emissiveFactor;         // Offset:    0
//       int alphaMode;                 // Offset:   12
//       float alphaCutoff;             // Offset:   16
//       bool doubleSided;              // Offset:   20
//       
//       struct PbrMetallicRoughness
//       {
//           
//           float4 baseColorFactor;    // Offset:   24
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   40
//               int texcoord;          // Offset:   44
//
//           } basecolorTexture;        // Offset:   40
//           float metallicFactor;      // Offset:   48
//           float roughnessFactor;     // Offset:   52
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   56
//               int texcoord;          // Offset:   60
//
//           } metallicRoughnessTexture;// Offset:   56
//
//       } pbrMetallicRoughness;        // Offset:   24
//       
//       struct NormalTextureInfo
//       {
//           
//           int index;                 // Offset:   64
//           int texcoord;              // Offset:   68
//           float scale;               // Offset:   72
//
//       } normalTexture;               // Offset:   64
//       
//       struct OcclusionTextureInfo
//       {
//           
//           int index;                 // Offset:   76
//           int texcoord;              // Offset:   80
//           float strength;            // Offset:   84
//
//       } occlusionTexture;            // Offset:   76
//       
//       struct TextureInfo
//       {
//           
//           int index;                 // Offset:   88
//           int texcoord;              // Offset:   92
//
//       } emissiveTexture;             // Offset:   88
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerStates[1]                  sampler      NA          NA             s1      1 
// samplerStates[2]                  sampler      NA          NA             s2      1 
// materials                         texture  struct         r/o             t0      1 
// materialTextures[0]               texture  float4          2d             t1      1 
// materialTextures[1]               texture  float4          2d             t2      1 
// materialTextures[2]               texture  float4          2d             t3      1 
// materialTextures[4]               texture  float4          2d             t5      1 
// diffuseIem                        texture  float4        cube            t33      1 
// specularPmrem                     texture  float4        cube            t34      1 
// lutGgx                            texture  float4          2d            t35      1 
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// VIEW_CONSTANTS_BUFFER             cbuffer      NA          NA            cb4      1 
// LIGHT_CONSTANT_BUFFER             cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// SV_IsFrontFace           0   x           5    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[7], immediateIndexed
dcl_constantbuffer CB4[9], immediateIndexed
dcl_constantbuffer CB11[3], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_structured t0, 96
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t33
dcl_resource_texturecube (float,float,float,float) t34
dcl_resource_texture2d (float,float,float,float) t35
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps_sgv constant v5.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 12
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.xy, cb0[5].x, l(12), t0.xyxx
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.xyzw, cb0[5].x, l(24), t0.xyzw
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.z, cb0[5].x, l(40), t0.xxxx
ilt r0.z, l(-1), r0.z
if_nz r0.z
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v4.xyxx, t1.xyzw, s2
  log r3.xyz, r2.xyzx
  mul r3.xyz, r3.xyzx, l(2.200000, 2.200000, 2.200000, 0.000000)
  exp r2.xyz, r3.xyzx
  mul r1.xyzw, r1.xyzw, r2.xyzw
endif 
movc r2.w, r0.x, r1.w, l(1.000000)
lt r0.x, r2.w, r0.y
discard_nz r0.x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.xyz, cb0[5].x, l(48), t0.xyzx
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.w, cb0[5].x, l(64), t0.xxxx
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.xy, cb0[5].x, l(72), t0.xyxx
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.w, cb0[5].x, l(84), t0.xxxx
ilt r0.z, l(-1), r0.z
if_nz r0.z
  sample_indexable(texture2d)(float,float,float,float) r4.xy, v4.xyxx, t2.yzxw, s1
  mul r0.xy, r0.xyxx, r4.yxyy
endif 
ilt r0.z, l(-1), r3.y
if_nz r0.z
  sample_indexable(texture2d)(float,float,float,float) r0.z, v4.xyxx, t5.yzxw, s1
else 
  mov r0.z, l(1.000000)
endif 
add r4.xyz, r1.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r4.xyz, r0.xxxx, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r5.xyz, r0.xxxx, -r1.xyzx, r1.xyzx
add r6.xyz, -v1.xyzx, cb4[4].xyzx
dp3 r3.y, r6.xyzx, r6.xyzx
rsq r3.y, r3.y
mul r7.xyz, r3.yyyy, r6.xyzx
dp3 r4.w, v2.xyzx, v2.xyzx
rsq r4.w, r4.w
mul r8.xyz, r4.wwww, v2.zxyz
movc r9.xyz, v5.xxxx, r8.yzxy, -r8.yzxy
ilt r0.w, l(-1), r0.w
if_nz r0.w
  dp3 r0.w, v3.xyzx, v3.xyzx
  rsq r0.w, r0.w
  mul r10.xyz, r0.wwww, v3.xyzx
  movc r10.xyz, cb0[5].yyyy, r10.xyzx, l(1.000000,0,0,0)
  movc r0.w, cb0[5].y, v3.w, l(1.000000)
  dp3 r4.w, r8.yzxy, r10.xyzx
  mad r10.xyz, -r8.yzxy, r4.wwww, r10.xyzx
  dp3 r4.w, r10.xyzx, r10.xyzx
  rsq r4.w, r4.w
  mul r10.xyz, r4.wwww, r10.xyzx
  mul r11.xyz, r8.xyzx, r10.yzxy
  mad r8.xyz, r8.zxyz, r10.zxyz, -r11.xyzx
  mul r8.xyz, r0.wwww, r8.xyzx
  dp3 r0.w, r8.xyzx, r8.xyzx
  rsq r0.w, r0.w
  mul r8.xyz, r0.wwww, r8.xyzx
  movc r10.xyz, v5.xxxx, r10.xyzx, -r10.xyzx
  movc r8.xyz, v5.xxxx, r8.xyzx, -r8.xyzx
  sample_indexable(texture2d)(float,float,float,float) r11.xyz, v4.xyxx, t3.xyzw, s1
  mad r11.xyz, r11.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mov r3.z, l(1.000000)
  mul r11.xyz, r3.xxzx, r11.xyzx
  dp3 r0.w, r11.xyzx, r11.xyzx
  rsq r0.w, r0.w
  mul r11.xyz, r0.wwww, r11.xyzx
  mul r8.xyz, r8.xyzx, r11.yyyy
  mad r8.xyz, r11.xxxx, r10.xyzx, r8.xyzx
  mad r8.xyz, r11.zzzz, r9.xyzx, r8.xyzx
  dp3 r0.w, r8.xyzx, r8.xyzx
  rsq r0.w, r0.w
  mul r9.xyz, r0.wwww, r8.xyzx
endif 
dp3 r0.w, -cb11[0].xyzx, -cb11[0].xyzx
rsq r0.w, r0.w
mul r8.xyz, r0.wwww, -cb11[0].xyzx
dp3 r0.w, r9.xyzx, r8.xyzx
mad r0.w, r0.w, l(0.500000), l(0.500000)
max r0.w, r0.w, l(0.000000)
dp3 r3.x, r9.xyzx, r7.xyzx
max r3.x, r3.x, l(0.000000)
lt r3.z, l(0.000000), r0.w
lt r4.w, l(0.000000), r3.x
or r3.z, r3.z, r4.w
if_nz r3.z
  mul r3.z, r0.y, r0.y
  mul r10.xyz, cb11[1].wwww, cb11[1].xyzx
  mad r6.xyz, r6.xyzx, r3.yyyy, r8.xyzx
  dp3 r3.y, r6.xyzx, r6.xyzx
  rsq r3.y, r3.y
  mul r6.xyz, r3.yyyy, r6.xyzx
  dp3 r3.y, r9.xyzx, r6.xyzx
  max r3.y, r3.y, l(0.000000)
  dp3 r4.w, r6.xyzx, r7.xyzx
  max r4.w, r4.w, l(0.000000)
  mul r6.xyz, r0.wwww, r10.xyzx
  add r8.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  add r4.w, -r4.w, l(1.000000)
  max r4.w, r4.w, l(0.000000)
  mul r5.w, r4.w, r4.w
  mul r5.w, r5.w, r5.w
  mul r4.w, r4.w, r5.w
  mad r8.xyz, r8.xyzx, r4.wwww, r4.xyzx
  add r10.xyz, -r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r10.xyz, r5.xyzx, r10.xyzx
  mul r10.xyz, r6.xyzx, r10.xyzx
  mul r10.xyz, r10.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
  mul r4.w, r3.z, r3.z
  mul r5.w, r3.x, r3.x
  mad r6.w, -r3.z, r3.z, l(1.000000)
  mad r5.w, r5.w, r6.w, r4.w
  sqrt r5.w, r5.w
  mul r7.w, r0.w, r0.w
  mad r6.w, r7.w, r6.w, r4.w
  sqrt r6.w, r6.w
  mul r6.w, r3.x, r6.w
  mad r0.w, r0.w, r5.w, r6.w
  lt r5.w, l(0.000000), r0.w
  div r0.w, l(0.500000), r0.w
  and r0.w, r0.w, r5.w
  mul r3.y, r3.y, r3.y
  mad r3.z, r3.z, r3.z, l(-1.000000)
  mad r3.y, r3.y, r3.z, l(1.000000)
  mul r3.y, r3.y, r3.y
  mul r3.y, r3.y, l(3.141593)
  div r3.y, r4.w, r3.y
  mul r8.xyz, r0.wwww, r8.xyzx
  mul r8.xyz, r3.yyyy, r8.xyzx
  mul r6.xyz, r6.xyzx, r8.xyzx
else 
  mov r10.xyz, l(0,0,0,0)
  mov r6.xyz, l(0,0,0,0)
endif 
min r0.x, r3.x, l(1.000000)
mov_sat r3.xy, r0.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t35.xyzw, s1
sample_indexable(texturecube)(float,float,float,float) r8.xyz, r9.xyzx, t33.xyzw, s1
add r0.xw, -r0.yyyx, l(1.000000, 0.000000, 0.000000, 1.000000)
max r11.xyz, r4.xyzx, r0.xxxx
add r11.xyz, -r4.xyzx, r11.xyzx
mul r0.x, r0.w, r0.w
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.w
mad r11.xyz, r11.xyzx, r0.xxxx, r4.xyzx
mad r11.xyz, r11.xyzx, r3.xxxx, r3.yyyy
add r0.x, r3.y, r3.x
add r0.x, -r0.x, l(1.000000)
add r3.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r3.xyzx, l(0.047619, 0.047619, 0.047619, 0.000000), r4.xyzx
mul r4.xyz, r11.xyzx, r0.xxxx
mul r4.xyz, r3.xyzx, r4.xyzx
mad r3.xyz, -r3.xyzx, r0.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r3.xyz, r4.xyzx, r3.xyzx
add r4.xyz, -r11.xyzx, r3.xyzx
add r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r5.xyzx, r4.xyzx, r3.xyzx
mul r3.xyz, r8.xyzx, r3.xyzx
mad r3.xyz, r3.xyzx, cb11[2].xxxx, r10.xyzx
dp3 r0.x, -r7.xyzx, r9.xyzx
add r0.x, r0.x, r0.x
mad r4.xyz, r9.xyzx, -r0.xxxx, -r7.xyzx
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r4.xyz, r0.xxxx, r4.xyzx
resinfo_indexable(texturecube)(float,float,float,float)_uint r0.x, l(0), t34.wxyz
iadd r0.x, r0.x, l(-1)
utof r0.x, r0.x
mul r0.x, r0.x, r0.y
sample_l_indexable(texturecube)(float,float,float,float) r0.xyw, r4.xyzx, t34.xywz, s1, r0.x
mul r0.xyw, r11.xyxz, r0.xyxw
mad r0.xyw, r0.xyxw, cb11[2].xxxx, r6.xyxz
mad r4.xyz, r3.xyzx, r0.zzzz, -r3.xyzx
mad r3.xyz, r3.wwww, r4.xyzx, r3.xyzx
mad r4.xyz, r0.xywx, r0.zzzz, -r0.xywx
mad r0.xyz, r3.wwww, r4.xyzx, r0.xywx
add r0.xyz, r0.xyzx, r3.xyzx
mad r2.xyz, cb0[4].xyzx, cb0[6].xxxx, r0.xyzx
mov r1.w, r2.w
mul r0.xyzw, r1.xyzw, r2.xyzw
mul o0.xyzw, r0.xyzw, l(1.300000, 1.300000, 1.300000, 1.300000)
mul r0.xyzw, v1.yyyy, cb4[6].xyzw
mad r0.xyzw, v1.xxxx, cb4[5].xyzw, r0.xyzw
mad r0.xyzw, v1.zzzz, cb4[7].xyzw, r0.xyzw
mad o1.xyzw, v1.wwww, cb4[8].xyzw, r0.xyzw
mul r0.xyzw, r9.yyyy, cb4[6].xyzw
mad r0.xyzw, r9.xxxx, cb4[5].xyzw, r0.xyzw
mad o2.xyzw, r9.zzzz, cb4[7].xyzw, r0.xyzw
ret 
// Approximately 189 instruction slots used
