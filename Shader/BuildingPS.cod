//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64 [unused]
//   float4 cpuColor;                   // Offset:   64 Size:    16
//   int material;                      // Offset:   80 Size:     4
//   bool hasTangent;                   // Offset:   84 Size:     4
//   int skin;                          // Offset:   88 Size:     4 [unused]
//   float dissolveValue;               // Offset:   92 Size:     4 [unused]
//   float emission;                    // Offset:   96 Size:     4 [unused]
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16
//   float4 cameraPositon;              // Offset:   80 Size:    16
//   float4 colorLight;                 // Offset:   96 Size:    16
//   row_major float4x4 view;           // Offset:  112 Size:    64
//   row_major float4x4 projection;     // Offset:  176 Size:    64 [unused]
//   row_major float4x4 inverseProjection;// Offset:  240 Size:    64 [unused]
//   row_major float4x4 inverseViewProjection;// Offset:  304 Size:    64 [unused]
//   float iblIntensity;                // Offset:  368 Size:     4
//   bool enableSSAO;                   // Offset:  372 Size:     4 [unused]
//   float reflectionIntensity;         // Offset:  376 Size:     4 [unused]
//   float time;                        // Offset:  380 Size:     4 [unused]
//   bool enableCascadedShadowMaps;     // Offset:  384 Size:     4 [unused]
//   bool enableSSR;                    // Offset:  388 Size:     4 [unused]
//   bool enableFog;                    // Offset:  392 Size:     4 [unused]
//   bool enableBloom;                  // Offset:  396 Size:     4 [unused]
//   row_major float4x4 invView;        // Offset:  400 Size:    64 [unused]
//
// }
//
// Resource bind info for materials
// {
//
//   struct MaterialConstants
//   {
//       
//       float3 emissiveFactor;         // Offset:    0
//       int alphaMode;                 // Offset:   12
//       float alphaCutoff;             // Offset:   16
//       bool doubleSided;              // Offset:   20
//       
//       struct PbrMetallicRoughness
//       {
//           
//           float4 basecolorFactor;    // Offset:   24
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   40
//               int texcoord;          // Offset:   44
//
//           } basecolorTexture;        // Offset:   40
//           float metallicFactor;      // Offset:   48
//           float roughnessFactor;     // Offset:   52
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   56
//               int texcoord;          // Offset:   60
//
//           } metallicRoughnessTexture;// Offset:   56
//
//       } pbrMetallicRoughness;        // Offset:   24
//       
//       struct NormalTextureInfo
//       {
//           
//           int index;                 // Offset:   64
//           int texcoord;              // Offset:   68
//           float scale;               // Offset:   72
//
//       } normalTexture;               // Offset:   64
//       
//       struct OcclusionTextureInfo
//       {
//           
//           int index;                 // Offset:   76
//           int texcoord;              // Offset:   80
//           float strength;            // Offset:   84
//
//       } occlusionTexture;            // Offset:   76
//       
//       struct TextureInfo
//       {
//           
//           int index;                 // Offset:   88
//           int texcoord;              // Offset:   92
//
//       } emissiveTexture;             // Offset:   88
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerStates[1]                  sampler      NA          NA             s1      1 
// samplerStates[2]                  sampler      NA          NA             s2      1 
// materials                         texture  struct         r/o             t0      1 
// materialTextures[0]               texture  float4          2d             t1      1 
// materialTextures[1]               texture  float4          2d             t2      1 
// materialTextures[2]               texture  float4          2d             t3      1 
// materialTextures[3]               texture  float4          2d             t4      1 
// materialTextures[4]               texture  float4          2d             t5      1 
// diffuseIem                        texture  float4        cube            t33      1 
// specularPmrem                     texture  float4        cube            t34      1 
// lutGgx                            texture  float4          2d            t35      1 
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// SV_IsFrontFace           0   x           5    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[6], immediateIndexed
dcl_constantbuffer CB1[24], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_structured t0, 96
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t33
dcl_resource_texturecube (float,float,float,float) t34
dcl_resource_texture2d (float,float,float,float) t35
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps_sgv constant v5.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 17
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.wPosition.x; v1.y <- pin.wPosition.y; v1.z <- pin.wPosition.z; v1.w <- pin.wPosition.w; 
//   v2.x <- pin.wNormal.x; v2.y <- pin.wNormal.y; v2.z <- pin.wNormal.z; v2.w <- pin.wNormal.w; 
//   v3.x <- pin.wTangent.x; v3.y <- pin.wTangent.y; v3.z <- pin.wTangent.z; v3.w <- pin.wTangent.w; 
//   v4.x <- pin.texcoord.x; v4.y <- pin.texcoord.y; 
//   v5.x <- isFrontFace; 
//   o2.x <- <main return value>.normal.x; o2.y <- <main return value>.normal.y; o2.z <- <main return value>.normal.z; o2.w <- <main return value>.normal.w; 
//   o1.x <- <main return value>.position.x; o1.y <- <main return value>.position.y; o1.z <- <main return value>.position.z; o1.w <- <main return value>.position.w; 
//   o0.x <- <main return value>.color.x; o0.y <- <main return value>.color.y; o0.z <- <main return value>.color.z; o0.w <- <main return value>.color.w
//
#line 27 "C:\Users\2240225\Desktop\graphicEngine2\Shader\BuildingPS.hlsl"
mov r0.x, l(2.200000)  // r0.x <- GAMMA

#line 28
mov r0.y, cb0[5].x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.x, r0.y, l(0), t0.xxxx  // r1.x <- m.emissiveFactor.x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.y, r0.y, l(4), t0.xxxx  // r1.y <- m.emissiveFactor.y
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.z, r0.y, l(8), t0.xxxx  // r1.z <- m.emissiveFactor.z
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.x, r0.y, l(24), t0.xxxx  // r2.x <- m.pbrMetallicRoughness.basecolorFactor.x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.y, r0.y, l(28), t0.xxxx  // r2.y <- m.pbrMetallicRoughness.basecolorFactor.y
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.z, r0.y, l(32), t0.xxxx  // r2.z <- m.pbrMetallicRoughness.basecolorFactor.z
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.z, r0.y, l(40), t0.xxxx  // r0.z <- m.pbrMetallicRoughness.basecolorTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.w, r0.y, l(48), t0.xxxx  // r0.w <- m.pbrMetallicRoughness.metallicFactor
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.y, r0.y, l(52), t0.xxxx  // r3.y <- m.pbrMetallicRoughness.roughnessFactor
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.w, r0.y, l(56), t0.xxxx  // r1.w <- m.pbrMetallicRoughness.metallicRoughnessTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.w, r0.y, l(64), t0.xxxx  // r2.w <- m.normalTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r4.y, r0.y, l(72), t0.xxxx  // r4.y <- m.normalTexture.scale
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.z, r0.y, l(76), t0.xxxx  // r3.z <- m.occlusionTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.w, r0.y, l(84), t0.xxxx  // r3.w <- m.occlusionTexture.strength
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.y, r0.y, l(88), t0.xxxx  // r0.y <- m.emissiveTexture.index

#line 30
mov r2.xyz, r2.xyzx  // r2.x <- basecolorFactor.x; r2.y <- basecolorFactor.y; r2.z <- basecolorFactor.z

#line 31
mov r0.z, r0.z  // r0.z <- basecolorTexture

#line 33
ilt r0.z, l(-1), r0.z
if_nz r0.z

#line 35
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, v4.xyxx, t1.xyzw, s2
  mov r5.xyz, r5.xyzx  // r5.x <- sampled.x; r5.y <- sampled.y; r5.z <- sampled.z

#line 36
  log r5.xyz, r5.xyzx
  mul r5.xyz, r0.xxxx, r5.xyzx
  exp r5.xyz, r5.xyzx

#line 37
  mul r2.xyz, r2.xyzx, r5.xyzx

#line 38
endif 

#line 39
mov r5.xyz, -r2.xyzx
add r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r5.xyz, r5.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000)
add r2.xyz, r2.xyzx, r5.xyzx

#line 43
mov r5.w, cb0[4].w  // r5.w <- basecolorFactor.w

#line 49
mov r1.xyz, r1.xyzx  // r1.x <- emmisiveFactor.x; r1.y <- emmisiveFactor.y; r1.z <- emmisiveFactor.z

#line 50
mov r0.y, r0.y  // r0.y <- emissiveTexture

#line 51
ilt r0.y, l(-1), r0.y
if_nz r0.y

#line 53
  sample_indexable(texture2d)(float,float,float,float) r6.xyz, v4.xyxx, t4.xyzw, s2
  mov r6.xyz, r6.xyzx  // r6.x <- sampled.x; r6.y <- sampled.y; r6.z <- sampled.z

#line 54
  log r6.xyz, r6.xyzx
  mul r0.xyz, r0.xxxx, r6.xyzx
  exp r0.xyz, r0.xyzx  // r0.x <- sampled.x; r0.y <- sampled.y; r0.z <- sampled.z

#line 55
  mul r1.xyz, r0.xyzx, r1.xyzx

#line 56
endif 

#line 58
mov r3.y, r3.y  // r3.y <- roughnessFactor

#line 59
mov r0.w, r0.w  // r0.w <- metallicFactor

#line 60
mov r1.w, r1.w  // r1.w <- metallicRoughnessTexture

#line 61
ilt r0.x, l(-1), r1.w
if_nz r0.x

#line 63
  sample_indexable(texture2d)(float,float,float,float) r0.xy, v4.xyxx, t2.yzxw, s1  // r0.x <- sampled.y; r0.y <- sampled.z

#line 64
  mul r3.y, r0.x, r3.y

#line 65
  mul r0.w, r0.y, r0.w

#line 66
endif 

#line 68
mov r0.x, l(1.000000)  // r0.x <- occlusionFactor

#line 69
mov r3.z, r3.z  // r3.z <- occlusionTexture

#line 70
ilt r0.y, l(-1), r3.z
if_nz r0.y

#line 72
  sample_indexable(texture2d)(float,float,float,float) r0.y, v4.xyxx, t5.yxzw, s1  // r0.y <- sampled.x

#line 73
  mul r0.x, r0.y, r0.x

#line 74
endif 

#line 75
mov r3.w, r3.w  // r3.w <- occlusionStrength

#line 77
mov r6.xyz, l(-0.040000,-0.040000,-0.040000,-0.000000)
add r6.xyz, r2.xyzx, r6.xyzx
mul r6.xyz, r0.wwww, r6.xyzx
add r6.xyz, r6.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)  // r6.x <- f0.x; r6.y <- f0.y; r6.z <- f0.z

#line 78
mov r7.xyz, l(1.000000,1.000000,1.000000,0)  // r7.x <- f90.x; r7.y <- f90.y; r7.z <- f90.z

#line 79
mul r0.y, r3.y, r3.y  // r0.y <- alphaRoughness

#line 80
mov r8.xyz, -r2.xyzx
add r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r8.xyz, r0.wwww, r8.xyzx
add r8.xyz, r2.xyzx, r8.xyzx  // r8.x <- cDiff.x; r8.y <- cDiff.y; r8.z <- cDiff.z

#line 83
mov r9.xyz, -v1.xyzx
add r9.xyz, r9.xyzx, cb1[5].xyzx
dp3 r0.z, r9.xyzx, r9.xyzx
rsq r0.z, r0.z
mul r9.xyz, r0.zzzz, r9.xyzx  // r9.x <- V.x; r9.y <- V.y; r9.z <- V.z

#line 85
dp3 r0.z, v2.xyzx, v2.xyzx
rsq r0.z, r0.z
mul r10.xyz, r0.zzzz, v2.xyzx  // r10.x <- N.x; r10.y <- N.y; r10.z <- N.z

#line 86
ine r0.z, l(0, 0, 0, 0), cb0[5].y
dp3 r0.w, v3.xyzx, v3.xyzx
rsq r0.w, r0.w
mul r11.xyz, r0.wwww, v3.xyzx
itof r12.xyz, l(1, 0, 0, 0)
movc r11.xyz, r0.zzzz, r11.xyzx, r12.xyzx  // r11.x <- T.x; r11.y <- T.y; r11.z <- T.z

#line 87
ine r0.z, l(0, 0, 0, 0), cb0[5].y
movc r0.z, r0.z, v3.w, l(1.000000)  // r0.z <- sigma

#line 88
dp3 r0.w, r10.xyzx, r11.xyzx
mul r12.xyz, r0.wwww, r10.xyzx
mov r12.xyz, -r12.xyzx
add r11.xyz, r11.xyzx, r12.xyzx
dp3 r0.w, r11.xyzx, r11.xyzx
rsq r0.w, r0.w
mul r11.xyz, r0.wwww, r11.xyzx  // r11.x <- T.x; r11.y <- T.y; r11.z <- T.z

#line 89
mul r12.xyz, r10.yzxy, r11.zxyz
mul r13.xyz, r10.zxyz, r11.yzxy
mov r13.xyz, -r13.xyzx
add r12.xyz, r12.xyzx, r13.xyzx
mul r12.xyz, r0.zzzz, r12.xyzx
dp3 r0.z, r12.xyzx, r12.xyzx
rsq r0.z, r0.z
mul r12.xyz, r0.zzzz, r12.xyzx  // r12.x <- B.x; r12.y <- B.y; r12.z <- B.z

#line 92
if_z v5.x

#line 94
  mov r11.xyz, -r11.xyzx

#line 95
  mov r12.xyz, -r12.xyzx

#line 96
  mov r10.xyz, -r10.xyzx

#line 97
endif 

#line 99
mov r2.w, r2.w  // r2.w <- normalTexture

#line 100
ilt r0.z, l(-1), r2.w
if_nz r0.z

#line 102
  sample_indexable(texture2d)(float,float,float,float) r13.xyz, v4.xyxx, t3.xyzw, s1  // r13.x <- sampled.x; r13.y <- sampled.y; r13.z <- sampled.z

#line 103
  mov r13.xyz, r13.xyzx  // r13.x <- normalFactor.x; r13.y <- normalFactor.y; r13.z <- normalFactor.z

#line 104
  mul r13.xyz, r13.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  mov r14.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
  add r13.xyz, r13.xyzx, r14.xyzx  // r13.x <- normalFactor.x; r13.y <- normalFactor.y; r13.z <- normalFactor.z

#line 105
  mov r4.z, l(1.000000)
  mul r4.xyz, r4.yyzy, r13.xyzx
  dp3 r0.z, r4.xyzx, r4.xyzx
  rsq r0.z, r0.z
  mul r4.xyz, r0.zzzz, r4.xyzx  // r4.x <- normalFactor.x; r4.y <- normalFactor.y; r4.z <- normalFactor.z

#line 106
  mul r11.xyz, r11.xyzx, r4.xxxx
  mul r4.xyw, r12.xyxz, r4.yyyy
  add r4.xyw, r4.xyxw, r11.xyxz
  mul r11.xyz, r10.xyzx, r4.zzzz
  add r4.xyz, r4.xywx, r11.xyzx
  dp3 r0.z, r4.xyzx, r4.xyzx
  rsq r0.z, r0.z
  mul r10.xyz, r0.zzzz, r4.xyzx

#line 107
endif 

#line 109
itof r4.xyz, l(0, 0, 0, 0)  // r4.x <- diffuse.x; r4.y <- diffuse.y; r4.z <- diffuse.z

#line 110
itof r11.xyz, l(0, 0, 0, 0)  // r11.x <- specular.x; r11.y <- specular.y; r11.z <- specular.z

#line 114
mov r12.xyz, -cb1[4].xyzx
dp3 r0.z, r12.xyzx, r12.xyzx
rsq r0.z, r0.z
mul r12.xyz, r0.zzzz, r12.xyzx  // r12.x <- L.x; r12.y <- L.y; r12.z <- L.z

#line 115
mul r13.xyz, cb1[6].wwww, cb1[6].xyzx  // r13.x <- Li.x; r13.y <- Li.y; r13.z <- Li.z

#line 117
dp3 r0.z, r10.xyzx, r12.xyzx
max r0.z, r0.z, l(0.000000)  // r0.z <- NoL

#line 118
dp3 r0.w, r10.xyzx, r9.xyzx
max r0.w, r0.w, l(0.000000)  // r0.w <- NoV

#line 119
lt r1.w, l(0.000000), r0.z
lt r2.w, l(0.000000), r0.w
or r1.w, r1.w, r2.w
if_nz r1.w

#line 122
  add r12.xyz, r9.xyzx, r12.xyzx
  dp3 r1.w, r12.xyzx, r12.xyzx
  rsq r1.w, r1.w
  mul r12.xyz, r1.wwww, r12.xyzx  // r12.x <- H.x; r12.y <- H.y; r12.z <- H.z

#line 124
  dp3 r1.w, r10.xyzx, r12.xyzx
  max r1.w, r1.w, l(0.000000)  // r1.w <- NoH

#line 125
  dp3 r2.w, r12.xyzx, r9.xyzx
  max r2.w, r2.w, l(0.000000)  // r2.w <- HoV

#line 127
  mul r12.xyz, r0.zzzz, r13.xyzx
  nop 
  mov r14.xyz, r6.xyzx
  mov r15.xyz, r7.xyzx
  mov r8.xyz, r8.xyzx
  mov r2.w, r2.w

#line 31 "C:\Users\2240225\Desktop\graphicEngine2\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
  mov r3.z, l(3.141593)  // r3.z <- PI

#line 32
  nop 
  mov r14.xyz, r14.xyzx
  mov r15.xyz, r15.xyzx
  mov r2.w, r2.w

#line 7
  mov r16.xyz, -r14.xyzx
  add r15.xyz, r15.xyzx, r16.xyzx
  mov r4.w, -r2.w
  add r4.w, r4.w, l(1.000000)
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, l(1.000000)
  mov r6.w, l(1.000000)
  mul r6.w, r4.w, r6.w
  mul r4.w, r4.w, r4.w
  mul r4.w, r4.w, r4.w
  mul r4.w, r4.w, r6.w
  mul r15.xyz, r4.wwww, r15.xyzx
  add r14.xyz, r14.xyzx, r15.xyzx  // r14.x <- <FSchlick return value>.x; r14.y <- <FSchlick return value>.y; r14.z <- <FSchlick return value>.z

#line 32
  mov r14.xyz, -r14.xyzx
  add r14.xyz, r14.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r15.xyz, r8.xyzx, r3.zzzz
  mul r14.xyz, r14.xyzx, r15.xyzx  // r14.x <- <BrdfLambertian return value>.x; r14.y <- <BrdfLambertian return value>.y; r14.z <- <BrdfLambertian return value>.z

#line 127 "C:\Users\2240225\Desktop\graphicEngine2\Shader\BuildingPS.hlsl"
  mul r12.xyz, r12.xyzx, r14.xyzx
  add r4.xyz, r4.xyzx, r12.xyzx

#line 128
  mul r12.xyz, r0.zzzz, r13.xyzx
  nop 
  mov r13.xyz, r6.xyzx
  mov r7.xyz, r7.xyzx
  mov r0.y, r0.y
  mov r2.w, r2.w
  mov r0.z, r0.z
  mov r0.w, r0.w
  mov r1.w, r1.w

#line 37 "C:\Users\2240225\Desktop\graphicEngine2\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
  nop 
  mov r13.xyz, r13.xyzx
  mov r7.xyz, r7.xyzx
  mov r2.w, r2.w

#line 7
  mov r14.xyz, -r13.xyzx
  add r7.xyz, r7.xyzx, r14.xyzx
  mov r2.w, -r2.w
  add r2.w, r2.w, l(1.000000)
  max r2.w, r2.w, l(0.000000)
  min r2.w, r2.w, l(1.000000)
  mov r3.z, l(1.000000)
  mul r3.z, r2.w, r3.z
  mul r2.w, r2.w, r2.w
  mul r2.w, r2.w, r2.w
  mul r2.w, r2.w, r3.z
  mul r7.xyz, r2.wwww, r7.xyzx
  add r7.xyz, r7.xyzx, r13.xyzx  // r7.x <- <FSchlick return value>.x; r7.y <- <FSchlick return value>.y; r7.z <- <FSchlick return value>.z

#line 37
  mov r7.xyz, r7.xyzx  // r7.x <- F.x; r7.y <- F.y; r7.z <- F.z

#line 38
  nop 
  mov r0.z, r0.z
  mov r0.w, r0.w
  mov r0.y, r0.y

#line 12
  mul r2.w, r0.y, r0.y  // r2.w <- alphaRoughnessSq

#line 14
  mul r3.z, r0.w, r0.w
  mov r4.w, -r2.w
  add r4.w, r4.w, l(1.000000)
  mul r3.z, r3.z, r4.w
  add r3.z, r2.w, r3.z
  sqrt r3.z, r3.z
  mul r3.z, r0.z, r3.z  // r3.z <- ggxv

#line 15
  mul r0.z, r0.z, r0.z
  mov r4.w, -r2.w
  add r4.w, r4.w, l(1.000000)
  mul r0.z, r0.z, r4.w
  add r0.z, r2.w, r0.z
  sqrt r0.z, r0.z
  mul r0.z, r0.z, r0.w  // r0.z <- ggxl

#line 17
  add r0.z, r0.z, r3.z  // r0.z <- ggx

#line 18
  lt r0.w, l(0.000000), r0.z
  div r0.z, l(0.500000), r0.z
  movc r0.z, r0.w, r0.z, l(0)  // r0.z <- <VGgx return value>

#line 38
  mov r0.z, r0.z  // r0.z <- Vis

#line 39
  nop 
  mov r1.w, r1.w
  mov r0.y, r0.y

#line 23
  mov r0.w, l(3.141593)  // r0.w <- PI

#line 24
  mul r0.y, r0.y, r0.y  // r0.y <- alphaRoughnessSq

#line 25
  mul r1.w, r1.w, r1.w
  mov r2.w, l(-1.000000)
  add r2.w, r0.y, r2.w
  mul r1.w, r1.w, r2.w
  add r1.w, r1.w, l(1.000000)  // r1.w <- f

#line 26
  mul r0.w, r0.w, r1.w
  mul r0.w, r1.w, r0.w
  div r0.y, r0.y, r0.w  // r0.y <- <DGgx return value>

#line 39
  mov r0.y, r0.y  // r0.y <- D

#line 41
  mul r7.xyz, r0.zzzz, r7.xyzx
  mul r0.yzw, r0.yyyy, r7.xxyz  // r0.y <- <BrdfSpecularGgx return value>.x; r0.z <- <BrdfSpecularGgx return value>.y; r0.w <- <BrdfSpecularGgx return value>.z

#line 128 "C:\Users\2240225\Desktop\graphicEngine2\Shader\BuildingPS.hlsl"
  mul r0.yzw, r0.yyzw, r12.xxyz
  add r11.xyz, r0.yzwy, r11.xyzx

#line 129
endif 

#line 135
nop 
mov r10.xyz, r10.xyzx
mov r9.xyz, r9.xyzx
mov r3.y, r3.y
mov r8.xyz, r8.xyzx
mov r6.xyz, r6.xyzx

#line 46 "C:\Users\2240225\Desktop\graphicEngine2\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
dp3 r0.y, r10.xyzx, r9.xyzx
max r0.y, r0.y, l(0.000000)
min r3.x, r0.y, l(1.000000)  // r3.x <- NoV

#line 48
max r0.yz, r3.xxyx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.yz, r0.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)  // r0.y <- brdfSamplePoint.x; r0.z <- brdfSamplePoint.y

#line 49
nop 
mov r0.yz, r0.yyzy

#line 18 "C:\Users\2240225\Desktop\graphicEngine2\Shader\imageBasedLighting.hlsli"
sample_indexable(texture2d)(float,float,float,float) r0.yz, r0.yzyy, t35.zxyw, s1
mov r0.yz, r0.yyzy  // r0.y <- <sampleLutGgx return value>.x; r0.z <- <sampleLutGgx return value>.y

#line 49 "C:\Users\2240225\Desktop\graphicEngine2\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
mov r0.yz, r0.yyzy  // r0.y <- fAb.x; r0.z <- fAb.y

#line 51
nop 
mov r10.xyz, r10.xyzx

#line 38 "C:\Users\2240225\Desktop\graphicEngine2\Shader\imageBasedLighting.hlsli"
sample_indexable(texturecube)(float,float,float,float) r7.xyz, r10.xyzx, t33.xyzw, s1
mov r7.xyz, r7.xyzx  // r7.x <- <sampleDiffuseIem return value>.x; r7.y <- <sampleDiffuseIem return value>.y; r7.z <- <sampleDiffuseIem return value>.z

#line 51 "C:\Users\2240225\Desktop\graphicEngine2\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
mov r7.xyz, r7.xyzx  // r7.x <- irradiance.x; r7.y <- irradiance.y; r7.z <- irradiance.z

#line 53
mov r0.w, -r3.y
add r0.w, r0.w, l(1.000000)
max r12.xyz, r6.xyzx, r0.wwww
mov r13.xyz, -r6.xyzx
add r12.xyz, r12.xyzx, r13.xyzx  // r12.x <- fr.x; r12.y <- fr.y; r12.z <- fr.z

#line 54
mov r0.w, -r3.x
add r0.w, r0.w, l(1.000000)
mov r1.w, l(1.000000)
mul r1.w, r0.w, r1.w
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
mul r12.xyz, r0.wwww, r12.xyzx
add r12.xyz, r6.xyzx, r12.xyzx  // r12.x <- k_s.x; r12.y <- k_s.y; r12.z <- k_s.z

#line 55
mul r12.xyz, r0.yyyy, r12.xyzx
add r12.xyz, r0.zzzz, r12.xyzx  // r12.x <- fss_ess.x; r12.y <- fss_ess.y; r12.z <- fss_ess.z

#line 57
add r0.y, r0.z, r0.y
mov r0.y, -r0.y
add r0.y, r0.y, l(1.000000)  // r0.y <- ems

#line 58
mov r13.xyz, -r6.xyzx
add r13.xyz, r13.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r13.xyz, r13.xyzx, l(21.000000, 21.000000, 21.000000, 0.000000)
add r13.xyz, r6.xyzx, r13.xyzx  // r13.x <- f_avg.x; r13.y <- f_avg.y; r13.z <- f_avg.z

#line 59
mul r14.xyz, r12.xyzx, r0.yyyy
mul r14.xyz, r13.xyzx, r14.xyzx
mul r0.yzw, r0.yyyy, r13.xxyz
mov r0.yzw, -r0.yyzw
add r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
div r0.yzw, r14.xxyz, r0.yyzw  // r0.y <- fms_ems.x; r0.z <- fms_ems.y; r0.w <- fms_ems.z

#line 61
mov r12.xyz, -r12.xyzx
add r12.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r12.xyz, r0.yzwy, r12.xyzx
mul r8.xyz, r8.xyzx, r12.xyzx  // r8.x <- k_d.x; r8.y <- k_d.y; r8.z <- k_d.z

#line 62
add r0.yzw, r0.yyzw, r8.xxyz
mul r0.yzw, r7.xxyz, r0.yyzw  // r0.y <- <IblRadianceLambertian return value>.x; r0.z <- <IblRadianceLambertian return value>.y; r0.w <- <IblRadianceLambertian return value>.z

#line 135 "C:\Users\2240225\Desktop\graphicEngine2\Shader\BuildingPS.hlsl"
mul r0.yzw, r0.yyzw, cb1[23].xxxx
add r0.yzw, r0.yyzw, r4.xxyz  // r0.y <- diffuse.x; r0.z <- diffuse.y; r0.w <- diffuse.z

#line 137
nop 
mov r10.xyz, r10.xyzx
mov r9.xyz, r9.xyzx
mov r3.y, r3.y
mov r6.xyz, r6.xyzx

#line 67 "C:\Users\2240225\Desktop\graphicEngine2\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
dp3 r1.w, r10.xyzx, r9.xyzx
max r1.w, r1.w, l(0.000000)
min r3.x, r1.w, l(1.000000)  // r3.x <- NoV

#line 69
max r4.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r4.xy, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)  // r4.x <- brdf_sample_point.x; r4.y <- brdf_sample_point.y

#line 70
nop 
mov r4.xy, r4.xyxx

#line 18 "C:\Users\2240225\Desktop\graphicEngine2\Shader\imageBasedLighting.hlsli"
sample_indexable(texture2d)(float,float,float,float) r4.xy, r4.xyxx, t35.xyzw, s1
mov r4.xy, r4.xyxx  // r4.x <- <sampleLutGgx return value>.x; r4.y <- <sampleLutGgx return value>.y

#line 70 "C:\Users\2240225\Desktop\graphicEngine2\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
mov r4.xy, r4.xyxx  // r4.x <- f_ab.x; r4.y <- f_ab.y

#line 72
mov r7.xyz, -r9.xyzx
dp3 r1.w, r7.xyzx, r10.xyzx
add r1.w, r1.w, r1.w
mov r1.w, -r1.w
mul r8.xyz, r1.wwww, r10.xyzx
add r7.xyz, r7.xyzx, r8.xyzx
dp3 r1.w, r7.xyzx, r7.xyzx
rsq r1.w, r1.w
mul r7.xyz, r1.wwww, r7.xyzx  // r7.x <- R.x; r7.y <- R.y; r7.z <- R.z

#line 73
nop 
mov r7.xyz, r7.xyzx
mov r3.y, r3.y

#line 52 "C:\Users\2240225\Desktop\graphicEngine2\Shader\imageBasedLighting.hlsli"
resinfo_indexable(texturecube)(float,float,float,float)_uint r1.w, l(0), t34.xyzw
mov r1.w, r1.w  // r1.w <- numberOfLevels

#line 54
mov r2.w, l(1)
ineg r2.w, r2.w
iadd r1.w, r1.w, r2.w
utof r1.w, r1.w
mul r1.w, r1.w, r3.y  // r1.w <- lod

#line 56
sample_l_indexable(texturecube)(float,float,float,float) r7.xyz, r7.xyzx, t34.xyzw, s1, r1.w
mov r7.xyz, r7.xyzx  // r7.x <- <sampleSpecularPmrem return value>.x; r7.y <- <sampleSpecularPmrem return value>.y; r7.z <- <sampleSpecularPmrem return value>.z

#line 73 "C:\Users\2240225\Desktop\graphicEngine2\Shader\BidirectionalReflectanceDistributionFunction.hlsli"
mov r7.xyz, r7.xyzx  // r7.x <- specular_light.x; r7.y <- specular_light.y; r7.z <- specular_light.z

#line 77
mov r1.w, -r3.y
add r1.w, r1.w, l(1.000000)
max r8.xyz, r6.xyzx, r1.wwww
mov r9.xyz, -r6.xyzx
add r8.xyz, r8.xyzx, r9.xyzx  // r8.x <- fr.x; r8.y <- fr.y; r8.z <- fr.z

#line 78
mov r1.w, -r3.x
add r1.w, r1.w, l(1.000000)
mov r2.w, l(1.000000)
mul r2.w, r1.w, r2.w
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.w
mul r3.xyz, r1.wwww, r8.xyzx
add r3.xyz, r3.xyzx, r6.xyzx  // r3.x <- k_s.x; r3.y <- k_s.y; r3.z <- k_s.z

#line 79
mul r3.xyz, r4.xxxx, r3.xyzx
add r3.xyz, r4.yyyy, r3.xyzx  // r3.x <- fss_ess.x; r3.y <- fss_ess.y; r3.z <- fss_ess.z

#line 81
mul r3.xyz, r3.xyzx, r7.xyzx  // r3.x <- <IblRadianceGgx return value>.x; r3.y <- <IblRadianceGgx return value>.y; r3.z <- <IblRadianceGgx return value>.z

#line 137 "C:\Users\2240225\Desktop\graphicEngine2\Shader\BuildingPS.hlsl"
mul r3.xyz, r3.xyzx, cb1[23].xxxx
add r3.xyz, r3.xyzx, r11.xyzx  // r3.x <- specular.x; r3.y <- specular.y; r3.z <- specular.z

#line 141
mov r1.xyz, r1.xyzx  // r1.x <- emmisive.x; r1.y <- emmisive.y; r1.z <- emmisive.z

#line 142
mul r4.xyz, r0.xxxx, r0.yzwy
mov r6.xyz, -r0.yzwy
add r4.xyz, r4.xyzx, r6.xyzx
mul r4.xyz, r3.wwww, r4.xyzx
add r0.yzw, r0.yyzw, r4.xxyz

#line 143
mul r4.xyz, r0.xxxx, r3.xyzx
mov r6.xyz, -r3.xyzx
add r4.xyz, r4.xyzx, r6.xyzx
mul r4.xyz, r3.wwww, r4.xyzx
add r3.xyz, r3.xyzx, r4.xyzx

#line 147
add r0.xyz, r0.yzwy, r3.xyzx
add r0.xyz, r1.xyzx, r0.xyzx
mul r5.xyz, r2.xyzx, r0.xyzx  // r5.x <- pout.color.x; r5.y <- pout.color.y; r5.z <- pout.color.z
mov r5.w, r5.w  // r5.w <- pout.color.w

#line 149
mul r0.xyzw, v1.xxxx, cb1[7].xyzw
mul r1.xyzw, v1.yyyy, cb1[8].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, v1.zzzz, cb1[9].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, v1.wwww, cb1[10].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- pout.position.x; r0.y <- pout.position.y; r0.z <- pout.position.z; r0.w <- pout.position.w

#line 150
itof r1.x, l(0)
mul r2.xyzw, r10.xxxx, cb1[7].xyzw
mul r3.xyzw, r10.yyyy, cb1[8].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, r10.zzzz, cb1[9].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r1.xyzw, r1.xxxx, cb1[10].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- pout.normal.x; r1.y <- pout.normal.y; r1.z <- pout.normal.z; r1.w <- pout.normal.w

#line 151
mov o0.xyzw, r5.xyzw
mov o1.xyzw, r0.xyzw
mov o2.xyzw, r1.xyzw
ret 
// Approximately 400 instruction slots used
