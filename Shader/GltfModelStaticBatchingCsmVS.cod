//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 cpuColor;                   // Offset:   64 Size:    16 [unused]
//   int material;                      // Offset:   80 Size:     4 [unused]
//   bool hasTangent;                   // Offset:   84 Size:     4 [unused]
//   int skin;                          // Offset:   88 Size:     4 [unused]
//   float dissolveValue;               // Offset:   92 Size:     4 [unused]
//   float emission;                    // Offset:   96 Size:     4 [unused]
//   float3 pads;                       // Offset:  100 Size:    12 [unused]
//   row_major float4x4 invWorld;       // Offset:  112 Size:    64 [unused]
//
// }
//
// cbuffer csmConstants
// {
//
//   struct CsmConstants
//   {
//       
//       row_major float4x4 cascadedMatrices[4];// Offset:    0
//       float4 cascadedPlaneDistances; // Offset:  256
//
//   } csmData;                         // Offset:    0 Size:   272
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// csmConstants                      cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz 
// SV_INSTANCEID            0   x           1   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// INSTANCEID               0   x           1     NONE    uint   x   
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB3[17], dynamicIndexed
dcl_input v0.xyz
dcl_input_sgv v1.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.x
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- instanceId; 
//   o1.x <- <main return value>.instanceId; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 35 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\GltfModelStaticBatchingCsmVS.hlsl"
itof r0.x, l(1)  // r0.x <- position.w

#line 39
mov r0.y, v1.x  // r0.y <- voutCSM.instanceId

#line 40
imul null, r0.z, v1.x, l(4)
mul r1.xyzw, cb0[0].xxxx, cb3[r0.z + 0].xyzw
mul r2.xyzw, cb0[0].yyyy, cb3[r0.z + 1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[0].zzzz, cb3[r0.z + 2].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[0].wwww, cb3[r0.z + 3].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, cb0[1].xxxx, cb3[r0.z + 0].xyzw
mul r3.xyzw, cb0[1].yyyy, cb3[r0.z + 1].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[1].zzzz, cb3[r0.z + 2].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[1].wwww, cb3[r0.z + 3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[2].xxxx, cb3[r0.z + 0].xyzw
mul r4.xyzw, cb0[2].yyyy, cb3[r0.z + 1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[2].zzzz, cb3[r0.z + 2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[2].wwww, cb3[r0.z + 3].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[3].xxxx, cb3[r0.z + 0].xyzw
mul r5.xyzw, cb0[3].yyyy, cb3[r0.z + 1].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[3].zzzz, cb3[r0.z + 2].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[3].wwww, cb3[r0.z + 3].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r1.xyzw, r1.xyzw, v0.xxxx
mul r2.xyzw, r2.xyzw, v0.yyyy
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r3.xyzw, v0.zzzz
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.xxxx, r4.xyzw
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- voutCSM.position.x; r1.y <- voutCSM.position.y; r1.z <- voutCSM.position.z; r1.w <- voutCSM.position.w

#line 42
mov o0.xyzw, r1.xyzw
mov o1.x, r0.y
ret 
// Approximately 41 instruction slots used
