//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// lowFreqPerlinWorley                   UAV  float4          3d             u0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_input vThreadID.xyz
dcl_temps 9
dcl_thread_group 8, 8, 8
utof r0.xyz, vThreadID.xyzx
mul r1.xyz, r0.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
round_ni r2.xyz, r1.xyzx
frc r1.xyz, r1.xyzx
mov r0.w, l(10000.000000)
mov r3.x, l(-1.000000)
loop 
  lt r1.w, l(1.000000), r3.x
  breakc_nz r1.w
  mov r1.w, r0.w
  mov r3.y, l(-1.000000)
  loop 
    lt r2.w, l(1.000000), r3.y
    breakc_nz r2.w
    mov r2.w, r1.w
    mov r3.z, l(-1.000000)
    loop 
      lt r3.w, l(1.000000), r3.z
      breakc_nz r3.w
      add r4.xyz, r2.xyzx, r3.xyzx
      mul r4.xyz, r4.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
      ge r5.xyz, r4.xyzx, -r4.xyzx
      frc r4.xyz, |r4.xyzx|
      movc r4.xyz, r5.xyzx, r4.xyzx, -r4.xyzx
      mul r4.xyz, r4.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
      ftoi r4.xyz, r4.xyzx
      imul null, r4.xyz, r4.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      xor r3.w, r4.y, r4.x
      xor r3.w, r4.z, r3.w
      imul null, r4.xyz, r3.wwww, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      utof r4.xyz, r4.xyzx
      mad r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
      add r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r4.xyz, r1.xyzx, -r4.xyzx
      dp3 r3.w, r4.xyzx, r4.xyzx
      min r2.w, r2.w, r3.w
      add r3.z, r3.z, l(1.000000)
    endloop 
    mov r1.w, r2.w
    add r3.y, r3.y, l(1.000000)
  endloop 
  mov r0.w, r1.w
  add r3.x, r3.x, l(1.000000)
endloop 
add r0.w, -r0.w, l(1.000000)
mul r1.xyz, r0.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
round_ni r2.xyz, r1.xyzx
frc r1.xyz, r1.xyzx
mov r1.w, l(10000.000000)
mov r3.x, l(-1.000000)
loop 
  lt r2.w, l(1.000000), r3.x
  breakc_nz r2.w
  mov r2.w, r1.w
  mov r3.y, l(-1.000000)
  loop 
    lt r3.w, l(1.000000), r3.y
    breakc_nz r3.w
    mov r3.w, r2.w
    mov r3.z, l(-1.000000)
    loop 
      lt r4.x, l(1.000000), r3.z
      breakc_nz r4.x
      add r4.xyz, r2.xyzx, r3.xyzx
      mul r4.xyz, r4.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
      ge r5.xyz, r4.xyzx, -r4.xyzx
      frc r4.xyz, |r4.xyzx|
      movc r4.xyz, r5.xyzx, r4.xyzx, -r4.xyzx
      mul r4.xyz, r4.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000)
      ftoi r4.xyz, r4.xyzx
      imul null, r4.xyz, r4.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      xor r4.x, r4.y, r4.x
      xor r4.x, r4.z, r4.x
      imul null, r4.xyz, r4.xxxx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      utof r4.xyz, r4.xyzx
      mad r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
      add r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r4.xyz, r1.xyzx, -r4.xyzx
      dp3 r4.x, r4.xyzx, r4.xyzx
      min r3.w, r3.w, r4.x
      add r3.z, r3.z, l(1.000000)
    endloop 
    mov r2.w, r3.w
    add r3.y, r3.y, l(1.000000)
  endloop 
  mov r1.w, r2.w
  add r3.x, r3.x, l(1.000000)
endloop 
add r1.w, -r1.w, l(1.000000)
mul r1.w, r1.w, l(0.250000)
mad r0.w, r0.w, l(0.625000), r1.w
mul r3.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
round_ni r4.xyz, r3.xyzx
frc r3.xyz, r3.xyzx
mov r1.w, l(10000.000000)
mov r5.x, l(-1.000000)
loop 
  lt r2.w, l(1.000000), r5.x
  breakc_nz r2.w
  mov r2.w, r1.w
  mov r5.y, l(-1.000000)
  loop 
    lt r3.w, l(1.000000), r5.y
    breakc_nz r3.w
    mov r3.w, r2.w
    mov r5.z, l(-1.000000)
    loop 
      lt r4.w, l(1.000000), r5.z
      breakc_nz r4.w
      add r6.xyz, r4.xyzx, r5.xyzx
      mul r6.xyz, r6.xyzx, l(0.062500, 0.062500, 0.062500, 0.000000)
      ge r7.xyz, r6.xyzx, -r6.xyzx
      frc r6.xyz, |r6.xyzx|
      movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
      mul r6.xyz, r6.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000)
      ftoi r6.xyz, r6.xyzx
      imul null, r6.xyz, r6.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      xor r4.w, r6.y, r6.x
      xor r4.w, r6.z, r4.w
      imul null, r6.xyz, r4.wwww, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      utof r6.xyz, r6.xyzx
      mad r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r5.xyzx
      add r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r6.xyz, r3.xyzx, -r6.xyzx
      dp3 r4.w, r6.xyzx, r6.xyzx
      min r3.w, r3.w, r4.w
      add r5.z, r5.z, l(1.000000)
    endloop 
    mov r2.w, r3.w
    add r5.y, r5.y, l(1.000000)
  endloop 
  mov r1.w, r2.w
  add r5.x, r5.x, l(1.000000)
endloop 
add r1.w, -r1.w, l(1.000000)
mad r5.x, r1.w, l(0.125000), r0.w
mov r0.w, l(10000.000000)
mov r6.x, l(-1.000000)
loop 
  lt r1.w, l(1.000000), r6.x
  breakc_nz r1.w
  mov r1.w, r0.w
  mov r6.y, l(-1.000000)
  loop 
    lt r2.w, l(1.000000), r6.y
    breakc_nz r2.w
    mov r2.w, r1.w
    mov r6.z, l(-1.000000)
    loop 
      lt r3.w, l(1.000000), r6.z
      breakc_nz r3.w
      add r7.xyz, r2.xyzx, r6.xyzx
      mul r7.xyz, r7.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
      ge r8.xyz, r7.xyzx, -r7.xyzx
      frc r7.xyz, |r7.xyzx|
      movc r7.xyz, r8.xyzx, r7.xyzx, -r7.xyzx
      mul r7.xyz, r7.xyzx, l(8.000000, 8.000000, 8.000000, 0.000000)
      ftoi r7.xyz, r7.xyzx
      imul null, r7.xyz, r7.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      xor r3.w, r7.y, r7.x
      xor r3.w, r7.z, r3.w
      imul null, r7.xyz, r3.wwww, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      utof r7.xyz, r7.xyzx
      mad r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r6.xyzx
      add r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r7.xyz, r1.xyzx, -r7.xyzx
      dp3 r3.w, r7.xyzx, r7.xyzx
      min r2.w, r2.w, r3.w
      add r6.z, r6.z, l(1.000000)
    endloop 
    mov r1.w, r2.w
    add r6.y, r6.y, l(1.000000)
  endloop 
  mov r0.w, r1.w
  add r6.x, r6.x, l(1.000000)
endloop 
add r0.w, -r0.w, l(1.000000)
mov r1.x, l(10000.000000)
mov r2.x, l(-1.000000)
loop 
  lt r1.y, l(1.000000), r2.x
  breakc_nz r1.y
  mov r1.y, r1.x
  mov r2.y, l(-1.000000)
  loop 
    lt r1.z, l(1.000000), r2.y
    breakc_nz r1.z
    mov r1.z, r1.y
    mov r2.z, l(-1.000000)
    loop 
      lt r1.w, l(1.000000), r2.z
      breakc_nz r1.w
      add r6.xyz, r2.xyzx, r4.xyzx
      mul r6.xyz, r6.xyzx, l(0.062500, 0.062500, 0.062500, 0.000000)
      ge r7.xyz, r6.xyzx, -r6.xyzx
      frc r6.xyz, |r6.xyzx|
      movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
      mul r6.xyz, r6.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000)
      ftoi r6.xyz, r6.xyzx
      imul null, r6.xyz, r6.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      xor r1.w, r6.y, r6.x
      xor r1.w, r6.z, r1.w
      imul null, r6.xyz, r1.wwww, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      utof r6.xyz, r6.xyzx
      mad r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r2.xyzx
      add r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r6.xyz, r3.xyzx, -r6.xyzx
      dp3 r1.w, r6.xyzx, r6.xyzx
      min r1.z, r1.w, r1.z
      add r2.z, r2.z, l(1.000000)
    endloop 
    mov r1.y, r1.z
    add r2.y, r2.y, l(1.000000)
  endloop 
  mov r1.x, r1.y
  add r2.x, r2.x, l(1.000000)
endloop 
add r1.x, -r1.x, l(1.000000)
mul r1.x, r1.x, l(0.250000)
mad r0.w, r0.w, l(0.625000), r1.x
mov r1.x, l(10000.000000)
mov r2.x, l(-1.000000)
loop 
  lt r1.y, l(1.000000), r2.x
  breakc_nz r1.y
  mov r1.y, r1.x
  mov r2.y, l(-1.000000)
  loop 
    lt r1.z, l(1.000000), r2.y
    breakc_nz r1.z
    mov r1.z, r1.y
    mov r2.z, l(-1.000000)
    loop 
      lt r1.w, l(1.000000), r2.z
      breakc_nz r1.w
      add r6.xyz, r0.xyzx, r2.xyzx
      mul r6.xyz, r6.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000)
      ge r7.xyz, r6.xyzx, -r6.xyzx
      frc r6.xyz, |r6.xyzx|
      movc r6.xyz, r7.xyzx, r6.xyzx, -r6.xyzx
      mul r6.xyz, r6.xyzx, l(32.000000, 32.000000, 32.000000, 0.000000)
      ftoi r6.xyz, r6.xyzx
      imul null, r6.xyz, r6.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      xor r1.w, r6.y, r6.x
      xor r1.w, r6.z, r1.w
      imul null, r6.xyz, r1.wwww, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      utof r6.xyz, r6.xyzx
      mad r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r2.xyzx
      add r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      dp3 r1.w, -r6.xyzx, -r6.xyzx
      min r1.z, r1.w, r1.z
      add r2.z, r2.z, l(1.000000)
    endloop 
    mov r1.y, r1.z
    add r2.y, r2.y, l(1.000000)
  endloop 
  mov r1.x, r1.y
  add r2.x, r2.x, l(1.000000)
endloop 
add r1.x, -r1.x, l(1.000000)
mad r5.y, r1.x, l(0.125000), r0.w
mov r0.w, l(10000.000000)
mov r1.x, l(-1.000000)
loop 
  lt r1.w, l(1.000000), r1.x
  breakc_nz r1.w
  mov r1.w, r0.w
  mov r1.y, l(-1.000000)
  loop 
    lt r2.x, l(1.000000), r1.y
    breakc_nz r2.x
    mov r2.x, r1.w
    mov r1.z, l(-1.000000)
    loop 
      lt r2.y, l(1.000000), r1.z
      breakc_nz r2.y
      add r2.yzw, r1.xxyz, r4.xxyz
      mul r2.yzw, r2.yyzw, l(0.000000, 0.062500, 0.062500, 0.062500)
      ge r6.xyz, r2.yzwy, -r2.yzwy
      frc r2.yzw, |r2.yyzw|
      movc r2.yzw, r6.xxyz, r2.yyzw, -r2.yyzw
      mul r2.yzw, r2.yyzw, l(0.000000, 16.000000, 16.000000, 16.000000)
      ftoi r2.yzw, r2.yyzw
      imul null, r2.yzw, r2.yyzw, l(0, 0x5f356491, 0xe336beb9, 0xa6d23e7f)
      xor r2.y, r2.z, r2.y
      xor r2.y, r2.w, r2.y
      imul null, r2.yzw, r2.yyyy, l(0, 0x5f356491, 0xe336beb9, 0xa6d23e7f)
      utof r2.yzw, r2.yyzw
      mad r2.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r2.yzw, r2.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000), r1.xxyz
      add r2.yzw, r2.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
      add r2.yzw, -r2.yyzw, r3.xxyz
      dp3 r2.y, r2.yzwy, r2.yzwy
      min r2.x, r2.y, r2.x
      add r1.z, r1.z, l(1.000000)
    endloop 
    mov r1.w, r2.x
    add r1.y, r1.y, l(1.000000)
  endloop 
  mov r0.w, r1.w
  add r1.x, r1.x, l(1.000000)
endloop 
add r0.w, -r0.w, l(1.000000)
mov r1.x, l(10000.000000)
mov r2.x, l(-1.000000)
loop 
  lt r1.y, l(1.000000), r2.x
  breakc_nz r1.y
  mov r1.y, r1.x
  mov r2.y, l(-1.000000)
  loop 
    lt r1.z, l(1.000000), r2.y
    breakc_nz r1.z
    mov r1.z, r1.y
    mov r2.z, l(-1.000000)
    loop 
      lt r1.w, l(1.000000), r2.z
      breakc_nz r1.w
      add r3.xyz, r0.xyzx, r2.xyzx
      mul r3.xyz, r3.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000)
      ge r4.xyz, r3.xyzx, -r3.xyzx
      frc r3.xyz, |r3.xyzx|
      movc r3.xyz, r4.xyzx, r3.xyzx, -r3.xyzx
      mul r3.xyz, r3.xyzx, l(32.000000, 32.000000, 32.000000, 0.000000)
      ftoi r3.xyz, r3.xyzx
      imul null, r3.xyz, r3.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      xor r1.w, r3.y, r3.x
      xor r1.w, r3.z, r1.w
      imul null, r3.xyz, r1.wwww, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      utof r3.xyz, r3.xyzx
      mad r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r2.xyzx
      add r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      dp3 r1.w, -r3.xyzx, -r3.xyzx
      min r1.z, r1.w, r1.z
      add r2.z, r2.z, l(1.000000)
    endloop 
    mov r1.y, r1.z
    add r2.y, r2.y, l(1.000000)
  endloop 
  mov r1.x, r1.y
  add r2.x, r2.x, l(1.000000)
endloop 
add r1.x, -r1.x, l(1.000000)
mul r1.x, r1.x, l(0.250000)
mad r0.w, r0.w, l(0.625000), r1.x
mov r1.x, l(10000.000000)
mov r2.x, l(-1.000000)
loop 
  lt r1.y, l(1.000000), r2.x
  breakc_nz r1.y
  mov r1.y, r1.x
  mov r2.y, l(-1.000000)
  loop 
    lt r1.z, l(1.000000), r2.y
    breakc_nz r1.z
    mov r1.z, r1.y
    mov r2.z, l(-1.000000)
    loop 
      lt r1.w, l(1.000000), r2.z
      breakc_nz r1.w
      mad r3.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r2.xyzx
      mul r3.xyz, r3.xyzx, l(0.015625, 0.015625, 0.015625, 0.000000)
      ge r4.xyz, r3.xyzx, -r3.xyzx
      frc r3.xyz, |r3.xyzx|
      movc r3.xyz, r4.xyzx, r3.xyzx, -r3.xyzx
      mul r3.xyz, r3.xyzx, l(64.000000, 64.000000, 64.000000, 0.000000)
      ftoi r3.xyz, r3.xyzx
      imul null, r3.xyz, r3.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      xor r1.w, r3.y, r3.x
      xor r1.w, r3.z, r1.w
      imul null, r3.xyz, r1.wwww, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)
      utof r3.xyz, r3.xyzx
      mad r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r2.xyzx
      add r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      dp3 r1.w, -r3.xyzx, -r3.xyzx
      min r1.z, r1.w, r1.z
      add r2.z, r2.z, l(1.000000)
    endloop 
    mov r1.y, r1.z
    add r2.y, r2.y, l(1.000000)
  endloop 
  mov r1.x, r1.y
  add r2.x, r2.x, l(1.000000)
endloop 
add r0.x, -r1.x, l(1.000000)
mad r5.z, r0.x, l(0.125000), r0.w
mov r5.w, l(1.000000)
store_uav_typed u0.xyzw, vThreadID.xyzz, r5.xyzw
ret 
// Approximately 397 instruction slots used
