//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// lowFreqPerlinWorley                   UAV  float4          3d             u0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_input vThreadID.xyz
dcl_temps 10
dcl_thread_group 8, 8, 8
//
// Initial variable locations:
//   vThreadID.x <- DTid.x; vThreadID.y <- DTid.y; vThreadID.z <- DTid.z
//
#line 13 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\HighFreqWorleyCS.hlsl"
utof r0.xyz, vThreadID.xyzx
itof r1.xyz, l(32, 32, 32, 0)
div r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- uvw.x; r0.y <- uvw.y; r0.z <- uvw.z

#line 16
nop 
mov r0.xyz, r0.xyzx
mov r0.w, l(4.000000)

#line 110 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\PerlinWorleyNoise.hlsli"
nop 
mul r1.xyz, r0.wwww, r0.xyzx
mov r0.w, r0.w

#line 68
round_ni r2.xyz, r1.xyzx  // r2.x <- id.x; r2.y <- id.y; r2.z <- id.z

#line 69
frc r1.xyz, r1.xyzx  // r1.x <- p.x; r1.y <- p.y; r1.z <- p.z

#line 71
mov r1.w, l(10000.000000)  // r1.w <- minDist

#line 72
itof r2.w, l(-1)  // r2.w <- x
mov r3.x, r1.w  // r3.x <- minDist
mov r3.y, r2.w  // r3.y <- x
loop 
  itof r3.z, l(1)
  ge r3.z, r3.z, r3.y
  breakc_z r3.z

#line 74
  itof r3.z, l(-1)  // r3.z <- y
  mov r3.w, r3.x  // r3.w <- minDist
  mov r4.x, r3.z  // r4.x <- y
  loop 
    itof r4.y, l(1)
    ge r4.y, r4.y, r4.x
    breakc_z r4.y

#line 76
    itof r4.y, l(-1)  // r4.y <- z
    mov r4.z, r3.w  // r4.z <- minDist
    mov r5.z, r4.y  // r5.z <- z
    loop 
      itof r4.w, l(1)
      ge r4.w, r4.w, r5.z
      breakc_z r4.w

#line 78
      mov r5.x, r3.y  // r5.x <- offset.x
      mov r5.y, r4.x  // r5.y <- offset.y
      mov r5.z, r5.z  // r5.z <- offset.z

#line 79
      nop 
      add r6.xyz, r2.xyzx, r5.xyzx
      div r6.xyz, r6.xyzx, r0.wwww
      mov r7.xyz, -r6.xyzx
      max r8.xyz, r6.xyzx, r7.xyzx
      ge r6.xyz, r6.xyzx, r7.xyzx
      frc r7.xyz, r8.xyzx
      mov r8.xyz, -r7.xyzx
      movc r6.xyz, r6.xyzx, r7.xyzx, r8.xyzx
      mul r6.xyz, r0.wwww, r6.xyzx

#line 14
      ftoi r6.xyz, r6.xyzx
      imul null, r6.xyz, r6.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r6.x <- q.x; r6.y <- q.y; r6.z <- q.z

#line 15
      xor r4.w, r6.y, r6.x
      xor r4.w, r6.z, r4.w
      imul null, r6.xyz, r4.wwww, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
      utof r6.xyz, r6.xyzx
      mul r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r6.xyz, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r6.x <- <Hash33 return value>.x; r6.y <- <Hash33 return value>.y; r6.z <- <Hash33 return value>.z

#line 79
      mul r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r6.x <- h.x; r6.y <- h.y; r6.z <- h.z

#line 80
      add r5.xyw, r5.xyxz, r6.xyxz  // r5.x <- h.x; r5.y <- h.y; r5.w <- h.z

#line 81
      mov r5.xyw, -r5.xyxw
      add r5.xyw, r1.xyxz, r5.xyxw  // r5.x <- d.x; r5.y <- d.y; r5.w <- d.z

#line 82
      dp3 r4.w, r5.xywx, r5.xywx
      min r4.z, r4.w, r4.z

#line 83
      add r5.z, r5.z, l(1.000000)
    endloop 
    mov r3.w, r4.z  // r3.w <- minDist

#line 84
    add r4.x, r4.x, l(1.000000)
  endloop 
  mov r3.x, r3.w  // r3.x <- minDist

#line 85
  add r3.y, r3.y, l(1.000000)
endloop 

#line 88
mov r1.x, -r3.x
add r1.x, r1.x, l(1.000000)  // r1.x <- <WorleyNoise return value>

#line 110
mul r1.x, r1.x, l(0.625000)
nop 
mul r1.yzw, r0.wwww, r0.xxyz
mul r1.yzw, r1.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000)
mul r2.x, r0.w, l(2.000000)

#line 68
round_ni r2.yzw, r1.yyzw  // r2.y <- id.x; r2.z <- id.y; r2.w <- id.z

#line 69
frc r1.yzw, r1.yyzw  // r1.y <- p.x; r1.z <- p.y; r1.w <- p.z

#line 71
mov r3.x, l(10000.000000)  // r3.x <- minDist

#line 72
itof r3.y, l(-1)  // r3.y <- x
mov r3.z, r3.x  // r3.z <- minDist
mov r3.w, r3.y  // r3.w <- x
loop 
  itof r4.x, l(1)
  ge r4.x, r4.x, r3.w
  breakc_z r4.x

#line 74
  itof r4.x, l(-1)  // r4.x <- y
  mov r4.y, r3.z  // r4.y <- minDist
  mov r4.z, r4.x  // r4.z <- y
  loop 
    itof r4.w, l(1)
    ge r4.w, r4.w, r4.z
    breakc_z r4.w

#line 76
    itof r4.w, l(-1)  // r4.w <- z
    mov r5.x, r4.y  // r5.x <- minDist
    mov r6.z, r4.w  // r6.z <- z
    loop 
      itof r5.y, l(1)
      ge r5.y, r5.y, r6.z
      breakc_z r5.y

#line 78
      mov r6.x, r3.w  // r6.x <- offset.x
      mov r6.y, r4.z  // r6.y <- offset.y
      mov r6.z, r6.z  // r6.z <- offset.z

#line 79
      nop 
      add r5.yzw, r2.yyzw, r6.xxyz
      div r5.yzw, r5.yyzw, r2.xxxx
      mov r7.xyz, -r5.yzwy
      max r8.xyz, r5.yzwy, r7.xyzx
      ge r5.yzw, r5.yyzw, r7.xxyz
      frc r7.xyz, r8.xyzx
      mov r8.xyz, -r7.xyzx
      movc r5.yzw, r5.yyzw, r7.xxyz, r8.xxyz
      mul r5.yzw, r2.xxxx, r5.yyzw

#line 14
      ftoi r5.yzw, r5.yyzw
      imul null, r5.yzw, r5.yyzw, l(0, 0x5f356491, 0xe336beb9, 0xa6d23e7f)  // r5.y <- q.x; r5.z <- q.y; r5.w <- q.z

#line 15
      xor r5.y, r5.z, r5.y
      xor r5.y, r5.w, r5.y
      imul null, r5.yzw, r5.yyyy, l(0, 0x5f356491, 0xe336beb9, 0xa6d23e7f)  // r5.y <- q.x

#line 16
      utof r5.yzw, r5.yyzw
      mul r5.yzw, r5.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000)
      mul r5.yzw, r5.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r5.yzw, r5.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)  // r5.y <- <Hash33 return value>.x; r5.z <- <Hash33 return value>.y; r5.w <- <Hash33 return value>.z

#line 79
      mul r5.yzw, r5.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
      add r5.yzw, r5.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)  // r5.y <- h.x; r5.z <- h.y; r5.w <- h.z

#line 80
      add r5.yzw, r6.xxyz, r5.yyzw

#line 81
      mov r5.yzw, -r5.yyzw
      add r5.yzw, r1.yyzw, r5.yyzw  // r5.y <- d.x; r5.z <- d.y; r5.w <- d.z

#line 82
      dp3 r5.y, r5.yzwy, r5.yzwy
      min r5.x, r5.y, r5.x

#line 83
      add r6.z, r6.z, l(1.000000)
    endloop 
    mov r4.y, r5.x  // r4.y <- minDist

#line 84
    add r4.z, r4.z, l(1.000000)
  endloop 
  mov r3.z, r4.y  // r3.z <- minDist

#line 85
  add r3.w, r3.w, l(1.000000)
endloop 

#line 88
mov r1.y, -r3.z
add r1.y, r1.y, l(1.000000)  // r1.y <- <WorleyNoise return value>

#line 110
mul r1.y, r1.y, l(0.250000)
add r1.x, r1.y, r1.x
nop 
mul r1.yzw, r0.wwww, r0.xxyz
mul r1.yzw, r1.yyzw, l(0.000000, 4.000000, 4.000000, 4.000000)
mul r0.w, r0.w, l(4.000000)

#line 68
round_ni r2.xyz, r1.yzwy  // r2.x <- id.x; r2.y <- id.y; r2.z <- id.z

#line 69
frc r1.yzw, r1.yyzw  // r1.y <- p.x; r1.z <- p.y; r1.w <- p.z

#line 71
mov r2.w, l(10000.000000)  // r2.w <- minDist

#line 72
itof r3.x, l(-1)  // r3.x <- x
mov r3.y, r2.w  // r3.y <- minDist
mov r3.z, r3.x  // r3.z <- x
loop 
  itof r3.w, l(1)
  ge r3.w, r3.w, r3.z
  breakc_z r3.w

#line 74
  itof r3.w, l(-1)  // r3.w <- y
  mov r4.x, r3.y  // r4.x <- minDist
  mov r4.y, r3.w  // r4.y <- y
  loop 
    itof r4.z, l(1)
    ge r4.z, r4.z, r4.y
    breakc_z r4.z

#line 76
    itof r4.z, l(-1)  // r4.z <- z
    mov r4.w, r4.x  // r4.w <- minDist
    mov r5.z, r4.z  // r5.z <- z
    loop 
      itof r5.w, l(1)
      ge r5.w, r5.w, r5.z
      breakc_z r5.w

#line 78
      mov r5.x, r3.z  // r5.x <- offset.x
      mov r5.y, r4.y  // r5.y <- offset.y
      mov r5.z, r5.z  // r5.z <- offset.z

#line 79
      nop 
      add r6.xyz, r2.xyzx, r5.xyzx
      div r6.xyz, r6.xyzx, r0.wwww
      mov r7.xyz, -r6.xyzx
      max r8.xyz, r6.xyzx, r7.xyzx
      ge r6.xyz, r6.xyzx, r7.xyzx
      frc r7.xyz, r8.xyzx
      mov r8.xyz, -r7.xyzx
      movc r6.xyz, r6.xyzx, r7.xyzx, r8.xyzx
      mul r6.xyz, r0.wwww, r6.xyzx

#line 14
      ftoi r6.xyz, r6.xyzx
      imul null, r6.xyz, r6.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r6.x <- q.x; r6.y <- q.y; r6.z <- q.z

#line 15
      xor r5.w, r6.y, r6.x
      xor r5.w, r6.z, r5.w
      imul null, r6.xyz, r5.wwww, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
      utof r6.xyz, r6.xyzx
      mul r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r6.xyz, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r6.x <- <Hash33 return value>.x; r6.y <- <Hash33 return value>.y; r6.z <- <Hash33 return value>.z

#line 79
      mul r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r6.x <- h.x; r6.y <- h.y; r6.z <- h.z

#line 80
      add r5.xyw, r5.xyxz, r6.xyxz  // r5.x <- h.x; r5.y <- h.y; r5.w <- h.z

#line 81
      mov r5.xyw, -r5.xyxw
      add r5.xyw, r1.yzyw, r5.xyxw  // r5.x <- d.x; r5.y <- d.y; r5.w <- d.z

#line 82
      dp3 r5.x, r5.xywx, r5.xywx
      min r4.w, r4.w, r5.x

#line 83
      add r5.z, r5.z, l(1.000000)
    endloop 
    mov r4.x, r4.w  // r4.x <- minDist

#line 84
    add r4.y, r4.y, l(1.000000)
  endloop 
  mov r3.y, r4.x  // r3.y <- minDist

#line 85
  add r3.z, r3.z, l(1.000000)
endloop 

#line 88
mov r0.w, -r3.y
add r0.w, r0.w, l(1.000000)  // r0.w <- <WorleyNoise return value>

#line 110
mul r0.w, r0.w, l(0.125000)
add r1.x, r0.w, r1.x  // r1.x <- <WorleyFbm return value>

#line 16 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\HighFreqWorleyCS.hlsl"
mov r1.x, r1.x  // r1.x <- color.x

#line 17
nop 
mov r0.w, l(8.000000)

#line 110 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\PerlinWorleyNoise.hlsli"
nop 
mul r2.xyz, r0.wwww, r0.xyzx
mov r0.w, r0.w

#line 68
round_ni r3.xyz, r2.xyzx  // r3.x <- id.x; r3.y <- id.y; r3.z <- id.z

#line 69
frc r2.xyz, r2.xyzx  // r2.x <- p.x; r2.y <- p.y; r2.z <- p.z

#line 71
mov r2.w, l(10000.000000)  // r2.w <- minDist

#line 72
itof r3.w, l(-1)  // r3.w <- x
mov r4.x, r2.w  // r4.x <- minDist
mov r4.y, r3.w  // r4.y <- x
loop 
  itof r4.z, l(1)
  ge r4.z, r4.z, r4.y
  breakc_z r4.z

#line 74
  itof r4.z, l(-1)  // r4.z <- y
  mov r4.w, r4.x  // r4.w <- minDist
  mov r5.x, r4.z  // r5.x <- y
  loop 
    itof r5.y, l(1)
    ge r5.y, r5.y, r5.x
    breakc_z r5.y

#line 76
    itof r5.y, l(-1)  // r5.y <- z
    mov r5.z, r4.w  // r5.z <- minDist
    mov r6.z, r5.y  // r6.z <- z
    loop 
      itof r5.w, l(1)
      ge r5.w, r5.w, r6.z
      breakc_z r5.w

#line 78
      mov r6.x, r4.y  // r6.x <- offset.x
      mov r6.y, r5.x  // r6.y <- offset.y
      mov r6.z, r6.z  // r6.z <- offset.z

#line 79
      nop 
      add r7.xyz, r3.xyzx, r6.xyzx
      div r7.xyz, r7.xyzx, r0.wwww
      mov r8.xyz, -r7.xyzx
      max r9.xyz, r7.xyzx, r8.xyzx
      ge r7.xyz, r7.xyzx, r8.xyzx
      frc r8.xyz, r9.xyzx
      mov r9.xyz, -r8.xyzx
      movc r7.xyz, r7.xyzx, r8.xyzx, r9.xyzx
      mul r7.xyz, r0.wwww, r7.xyzx

#line 14
      ftoi r7.xyz, r7.xyzx
      imul null, r7.xyz, r7.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r7.x <- q.x; r7.y <- q.y; r7.z <- q.z

#line 15
      xor r5.w, r7.y, r7.x
      xor r5.w, r7.z, r5.w
      imul null, r7.xyz, r5.wwww, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
      utof r7.xyz, r7.xyzx
      mul r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r7.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r7.x <- <Hash33 return value>.x; r7.y <- <Hash33 return value>.y; r7.z <- <Hash33 return value>.z

#line 79
      mul r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r7.x <- h.x; r7.y <- h.y; r7.z <- h.z

#line 80
      add r6.xyw, r6.xyxz, r7.xyxz  // r6.x <- h.x; r6.y <- h.y; r6.w <- h.z

#line 81
      mov r6.xyw, -r6.xyxw
      add r6.xyw, r2.xyxz, r6.xyxw  // r6.x <- d.x; r6.y <- d.y; r6.w <- d.z

#line 82
      dp3 r5.w, r6.xywx, r6.xywx
      min r5.z, r5.w, r5.z

#line 83
      add r6.z, r6.z, l(1.000000)
    endloop 
    mov r4.w, r5.z  // r4.w <- minDist

#line 84
    add r5.x, r5.x, l(1.000000)
  endloop 
  mov r4.x, r4.w  // r4.x <- minDist

#line 85
  add r4.y, r4.y, l(1.000000)
endloop 

#line 88
mov r2.x, -r4.x
add r2.x, r2.x, l(1.000000)  // r2.x <- <WorleyNoise return value>

#line 110
mul r2.x, r2.x, l(0.625000)
nop 
mul r2.yzw, r0.wwww, r0.xxyz
mul r2.yzw, r2.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000)
mul r3.x, r0.w, l(2.000000)

#line 68
round_ni r3.yzw, r2.yyzw  // r3.y <- id.x; r3.z <- id.y; r3.w <- id.z

#line 69
frc r2.yzw, r2.yyzw  // r2.y <- p.x; r2.z <- p.y; r2.w <- p.z

#line 71
mov r4.x, l(10000.000000)  // r4.x <- minDist

#line 72
itof r4.y, l(-1)  // r4.y <- x
mov r4.z, r4.x  // r4.z <- minDist
mov r4.w, r4.y  // r4.w <- x
loop 
  itof r5.x, l(1)
  ge r5.x, r5.x, r4.w
  breakc_z r5.x

#line 74
  itof r5.x, l(-1)  // r5.x <- y
  mov r5.y, r4.z  // r5.y <- minDist
  mov r5.z, r5.x  // r5.z <- y
  loop 
    itof r5.w, l(1)
    ge r5.w, r5.w, r5.z
    breakc_z r5.w

#line 76
    itof r5.w, l(-1)  // r5.w <- z
    mov r6.x, r5.y  // r6.x <- minDist
    mov r7.z, r5.w  // r7.z <- z
    loop 
      itof r6.y, l(1)
      ge r6.y, r6.y, r7.z
      breakc_z r6.y

#line 78
      mov r7.x, r4.w  // r7.x <- offset.x
      mov r7.y, r5.z  // r7.y <- offset.y
      mov r7.z, r7.z  // r7.z <- offset.z

#line 79
      nop 
      add r6.yzw, r3.yyzw, r7.xxyz
      div r6.yzw, r6.yyzw, r3.xxxx
      mov r8.xyz, -r6.yzwy
      max r9.xyz, r6.yzwy, r8.xyzx
      ge r6.yzw, r6.yyzw, r8.xxyz
      frc r8.xyz, r9.xyzx
      mov r9.xyz, -r8.xyzx
      movc r6.yzw, r6.yyzw, r8.xxyz, r9.xxyz
      mul r6.yzw, r3.xxxx, r6.yyzw

#line 14
      ftoi r6.yzw, r6.yyzw
      imul null, r6.yzw, r6.yyzw, l(0, 0x5f356491, 0xe336beb9, 0xa6d23e7f)  // r6.y <- q.x; r6.z <- q.y; r6.w <- q.z

#line 15
      xor r6.y, r6.z, r6.y
      xor r6.y, r6.w, r6.y
      imul null, r6.yzw, r6.yyyy, l(0, 0x5f356491, 0xe336beb9, 0xa6d23e7f)  // r6.y <- q.x

#line 16
      utof r6.yzw, r6.yyzw
      mul r6.yzw, r6.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000)
      mul r6.yzw, r6.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r6.yzw, r6.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)  // r6.y <- <Hash33 return value>.x; r6.z <- <Hash33 return value>.y; r6.w <- <Hash33 return value>.z

#line 79
      mul r6.yzw, r6.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
      add r6.yzw, r6.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)  // r6.y <- h.x; r6.z <- h.y; r6.w <- h.z

#line 80
      add r6.yzw, r7.xxyz, r6.yyzw

#line 81
      mov r6.yzw, -r6.yyzw
      add r6.yzw, r2.yyzw, r6.yyzw  // r6.y <- d.x; r6.z <- d.y; r6.w <- d.z

#line 82
      dp3 r6.y, r6.yzwy, r6.yzwy
      min r6.x, r6.y, r6.x

#line 83
      add r7.z, r7.z, l(1.000000)
    endloop 
    mov r5.y, r6.x  // r5.y <- minDist

#line 84
    add r5.z, r5.z, l(1.000000)
  endloop 
  mov r4.z, r5.y  // r4.z <- minDist

#line 85
  add r4.w, r4.w, l(1.000000)
endloop 

#line 88
mov r2.y, -r4.z
add r2.y, r2.y, l(1.000000)  // r2.y <- <WorleyNoise return value>

#line 110
mul r2.y, r2.y, l(0.250000)
add r2.x, r2.y, r2.x
nop 
mul r2.yzw, r0.wwww, r0.xxyz
mul r2.yzw, r2.yyzw, l(0.000000, 4.000000, 4.000000, 4.000000)
mul r0.w, r0.w, l(4.000000)

#line 68
round_ni r3.xyz, r2.yzwy  // r3.x <- id.x; r3.y <- id.y; r3.z <- id.z

#line 69
frc r2.yzw, r2.yyzw  // r2.y <- p.x; r2.z <- p.y; r2.w <- p.z

#line 71
mov r3.w, l(10000.000000)  // r3.w <- minDist

#line 72
itof r4.x, l(-1)  // r4.x <- x
mov r4.y, r3.w  // r4.y <- minDist
mov r4.z, r4.x  // r4.z <- x
loop 
  itof r4.w, l(1)
  ge r4.w, r4.w, r4.z
  breakc_z r4.w

#line 74
  itof r4.w, l(-1)  // r4.w <- y
  mov r5.x, r4.y  // r5.x <- minDist
  mov r5.y, r4.w  // r5.y <- y
  loop 
    itof r5.z, l(1)
    ge r5.z, r5.z, r5.y
    breakc_z r5.z

#line 76
    itof r5.z, l(-1)  // r5.z <- z
    mov r5.w, r5.x  // r5.w <- minDist
    mov r6.z, r5.z  // r6.z <- z
    loop 
      itof r6.w, l(1)
      ge r6.w, r6.w, r6.z
      breakc_z r6.w

#line 78
      mov r6.x, r4.z  // r6.x <- offset.x
      mov r6.y, r5.y  // r6.y <- offset.y
      mov r6.z, r6.z  // r6.z <- offset.z

#line 79
      nop 
      add r7.xyz, r3.xyzx, r6.xyzx
      div r7.xyz, r7.xyzx, r0.wwww
      mov r8.xyz, -r7.xyzx
      max r9.xyz, r7.xyzx, r8.xyzx
      ge r7.xyz, r7.xyzx, r8.xyzx
      frc r8.xyz, r9.xyzx
      mov r9.xyz, -r8.xyzx
      movc r7.xyz, r7.xyzx, r8.xyzx, r9.xyzx
      mul r7.xyz, r0.wwww, r7.xyzx

#line 14
      ftoi r7.xyz, r7.xyzx
      imul null, r7.xyz, r7.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r7.x <- q.x; r7.y <- q.y; r7.z <- q.z

#line 15
      xor r6.w, r7.y, r7.x
      xor r6.w, r7.z, r6.w
      imul null, r7.xyz, r6.wwww, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
      utof r7.xyz, r7.xyzx
      mul r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r7.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r7.x <- <Hash33 return value>.x; r7.y <- <Hash33 return value>.y; r7.z <- <Hash33 return value>.z

#line 79
      mul r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r7.x <- h.x; r7.y <- h.y; r7.z <- h.z

#line 80
      add r6.xyw, r6.xyxz, r7.xyxz  // r6.x <- h.x; r6.y <- h.y; r6.w <- h.z

#line 81
      mov r6.xyw, -r6.xyxw
      add r6.xyw, r2.yzyw, r6.xyxw  // r6.x <- d.x; r6.y <- d.y; r6.w <- d.z

#line 82
      dp3 r6.x, r6.xywx, r6.xywx
      min r5.w, r5.w, r6.x

#line 83
      add r6.z, r6.z, l(1.000000)
    endloop 
    mov r5.x, r5.w  // r5.x <- minDist

#line 84
    add r5.y, r5.y, l(1.000000)
  endloop 
  mov r4.y, r5.x  // r4.y <- minDist

#line 85
  add r4.z, r4.z, l(1.000000)
endloop 

#line 88
mov r0.w, -r4.y
add r0.w, r0.w, l(1.000000)  // r0.w <- <WorleyNoise return value>

#line 110
mul r0.w, r0.w, l(0.125000)
add r1.y, r0.w, r2.x  // r1.y <- <WorleyFbm return value>

#line 17 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\HighFreqWorleyCS.hlsl"
mov r1.y, r1.y  // r1.y <- color.y

#line 18
nop 
mov r0.w, l(16.000000)

#line 110 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\PerlinWorleyNoise.hlsli"
nop 
mul r2.xyz, r0.wwww, r0.xyzx
mov r0.w, r0.w

#line 68
round_ni r3.xyz, r2.xyzx  // r3.x <- id.x; r3.y <- id.y; r3.z <- id.z

#line 69
frc r2.xyz, r2.xyzx  // r2.x <- p.x; r2.y <- p.y; r2.z <- p.z

#line 71
mov r2.w, l(10000.000000)  // r2.w <- minDist

#line 72
itof r3.w, l(-1)  // r3.w <- x
mov r4.x, r2.w  // r4.x <- minDist
mov r4.y, r3.w  // r4.y <- x
loop 
  itof r4.z, l(1)
  ge r4.z, r4.z, r4.y
  breakc_z r4.z

#line 74
  itof r4.z, l(-1)  // r4.z <- y
  mov r4.w, r4.x  // r4.w <- minDist
  mov r5.x, r4.z  // r5.x <- y
  loop 
    itof r5.y, l(1)
    ge r5.y, r5.y, r5.x
    breakc_z r5.y

#line 76
    itof r5.y, l(-1)  // r5.y <- z
    mov r5.z, r4.w  // r5.z <- minDist
    mov r6.z, r5.y  // r6.z <- z
    loop 
      itof r5.w, l(1)
      ge r5.w, r5.w, r6.z
      breakc_z r5.w

#line 78
      mov r6.x, r4.y  // r6.x <- offset.x
      mov r6.y, r5.x  // r6.y <- offset.y
      mov r6.z, r6.z  // r6.z <- offset.z

#line 79
      nop 
      add r7.xyz, r3.xyzx, r6.xyzx
      div r7.xyz, r7.xyzx, r0.wwww
      mov r8.xyz, -r7.xyzx
      max r9.xyz, r7.xyzx, r8.xyzx
      ge r7.xyz, r7.xyzx, r8.xyzx
      frc r8.xyz, r9.xyzx
      mov r9.xyz, -r8.xyzx
      movc r7.xyz, r7.xyzx, r8.xyzx, r9.xyzx
      mul r7.xyz, r0.wwww, r7.xyzx

#line 14
      ftoi r7.xyz, r7.xyzx
      imul null, r7.xyz, r7.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r7.x <- q.x; r7.y <- q.y; r7.z <- q.z

#line 15
      xor r5.w, r7.y, r7.x
      xor r5.w, r7.z, r5.w
      imul null, r7.xyz, r5.wwww, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
      utof r7.xyz, r7.xyzx
      mul r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r7.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r7.x <- <Hash33 return value>.x; r7.y <- <Hash33 return value>.y; r7.z <- <Hash33 return value>.z

#line 79
      mul r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r7.x <- h.x; r7.y <- h.y; r7.z <- h.z

#line 80
      add r6.xyw, r6.xyxz, r7.xyxz  // r6.x <- h.x; r6.y <- h.y; r6.w <- h.z

#line 81
      mov r6.xyw, -r6.xyxw
      add r6.xyw, r2.xyxz, r6.xyxw  // r6.x <- d.x; r6.y <- d.y; r6.w <- d.z

#line 82
      dp3 r5.w, r6.xywx, r6.xywx
      min r5.z, r5.w, r5.z

#line 83
      add r6.z, r6.z, l(1.000000)
    endloop 
    mov r4.w, r5.z  // r4.w <- minDist

#line 84
    add r5.x, r5.x, l(1.000000)
  endloop 
  mov r4.x, r4.w  // r4.x <- minDist

#line 85
  add r4.y, r4.y, l(1.000000)
endloop 

#line 88
mov r2.x, -r4.x
add r2.x, r2.x, l(1.000000)  // r2.x <- <WorleyNoise return value>

#line 110
mul r2.x, r2.x, l(0.625000)
nop 
mul r2.yzw, r0.wwww, r0.xxyz
mul r2.yzw, r2.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000)
mul r3.x, r0.w, l(2.000000)

#line 68
round_ni r3.yzw, r2.yyzw  // r3.y <- id.x; r3.z <- id.y; r3.w <- id.z

#line 69
frc r2.yzw, r2.yyzw  // r2.y <- p.x; r2.z <- p.y; r2.w <- p.z

#line 71
mov r4.x, l(10000.000000)  // r4.x <- minDist

#line 72
itof r4.y, l(-1)  // r4.y <- x
mov r4.z, r4.x  // r4.z <- minDist
mov r4.w, r4.y  // r4.w <- x
loop 
  itof r5.x, l(1)
  ge r5.x, r5.x, r4.w
  breakc_z r5.x

#line 74
  itof r5.x, l(-1)  // r5.x <- y
  mov r5.y, r4.z  // r5.y <- minDist
  mov r5.z, r5.x  // r5.z <- y
  loop 
    itof r5.w, l(1)
    ge r5.w, r5.w, r5.z
    breakc_z r5.w

#line 76
    itof r5.w, l(-1)  // r5.w <- z
    mov r6.x, r5.y  // r6.x <- minDist
    mov r7.z, r5.w  // r7.z <- z
    loop 
      itof r6.y, l(1)
      ge r6.y, r6.y, r7.z
      breakc_z r6.y

#line 78
      mov r7.x, r4.w  // r7.x <- offset.x
      mov r7.y, r5.z  // r7.y <- offset.y
      mov r7.z, r7.z  // r7.z <- offset.z

#line 79
      nop 
      add r6.yzw, r3.yyzw, r7.xxyz
      div r6.yzw, r6.yyzw, r3.xxxx
      mov r8.xyz, -r6.yzwy
      max r9.xyz, r6.yzwy, r8.xyzx
      ge r6.yzw, r6.yyzw, r8.xxyz
      frc r8.xyz, r9.xyzx
      mov r9.xyz, -r8.xyzx
      movc r6.yzw, r6.yyzw, r8.xxyz, r9.xxyz
      mul r6.yzw, r3.xxxx, r6.yyzw

#line 14
      ftoi r6.yzw, r6.yyzw
      imul null, r6.yzw, r6.yyzw, l(0, 0x5f356491, 0xe336beb9, 0xa6d23e7f)  // r6.y <- q.x; r6.z <- q.y; r6.w <- q.z

#line 15
      xor r6.y, r6.z, r6.y
      xor r6.y, r6.w, r6.y
      imul null, r6.yzw, r6.yyyy, l(0, 0x5f356491, 0xe336beb9, 0xa6d23e7f)  // r6.y <- q.x

#line 16
      utof r6.yzw, r6.yyzw
      mul r6.yzw, r6.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000)
      mul r6.yzw, r6.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r6.yzw, r6.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)  // r6.y <- <Hash33 return value>.x; r6.z <- <Hash33 return value>.y; r6.w <- <Hash33 return value>.z

#line 79
      mul r6.yzw, r6.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
      add r6.yzw, r6.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)  // r6.y <- h.x; r6.z <- h.y; r6.w <- h.z

#line 80
      add r6.yzw, r7.xxyz, r6.yyzw

#line 81
      mov r6.yzw, -r6.yyzw
      add r6.yzw, r2.yyzw, r6.yyzw  // r6.y <- d.x; r6.z <- d.y; r6.w <- d.z

#line 82
      dp3 r6.y, r6.yzwy, r6.yzwy
      min r6.x, r6.y, r6.x

#line 83
      add r7.z, r7.z, l(1.000000)
    endloop 
    mov r5.y, r6.x  // r5.y <- minDist

#line 84
    add r5.z, r5.z, l(1.000000)
  endloop 
  mov r4.z, r5.y  // r4.z <- minDist

#line 85
  add r4.w, r4.w, l(1.000000)
endloop 

#line 88
mov r2.y, -r4.z
add r2.y, r2.y, l(1.000000)  // r2.y <- <WorleyNoise return value>

#line 110
mul r2.y, r2.y, l(0.250000)
add r2.x, r2.y, r2.x
nop 
mul r0.xyz, r0.wwww, r0.xyzx
mul r0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
mul r0.w, r0.w, l(4.000000)

#line 68
round_ni r2.yzw, r0.xxyz  // r2.y <- id.x; r2.z <- id.y; r2.w <- id.z

#line 69
frc r0.xyz, r0.xyzx  // r0.x <- p.x; r0.y <- p.y; r0.z <- p.z

#line 71
mov r3.x, l(10000.000000)  // r3.x <- minDist

#line 72
itof r3.y, l(-1)  // r3.y <- x
mov r3.z, r3.x  // r3.z <- minDist
mov r3.w, r3.y  // r3.w <- x
loop 
  itof r4.x, l(1)
  ge r4.x, r4.x, r3.w
  breakc_z r4.x

#line 74
  itof r4.x, l(-1)  // r4.x <- y
  mov r4.y, r3.z  // r4.y <- minDist
  mov r4.z, r4.x  // r4.z <- y
  loop 
    itof r4.w, l(1)
    ge r4.w, r4.w, r4.z
    breakc_z r4.w

#line 76
    itof r4.w, l(-1)  // r4.w <- z
    mov r5.x, r4.y  // r5.x <- minDist
    mov r6.z, r4.w  // r6.z <- z
    loop 
      itof r5.y, l(1)
      ge r5.y, r5.y, r6.z
      breakc_z r5.y

#line 78
      mov r6.x, r3.w  // r6.x <- offset.x
      mov r6.y, r4.z  // r6.y <- offset.y
      mov r6.z, r6.z  // r6.z <- offset.z

#line 79
      nop 
      add r5.yzw, r2.yyzw, r6.xxyz
      div r5.yzw, r5.yyzw, r0.wwww
      mov r7.xyz, -r5.yzwy
      max r8.xyz, r5.yzwy, r7.xyzx
      ge r5.yzw, r5.yyzw, r7.xxyz
      frc r7.xyz, r8.xyzx
      mov r8.xyz, -r7.xyzx
      movc r5.yzw, r5.yyzw, r7.xxyz, r8.xxyz
      mul r5.yzw, r0.wwww, r5.yyzw

#line 14
      ftoi r5.yzw, r5.yyzw
      imul null, r5.yzw, r5.yyzw, l(0, 0x5f356491, 0xe336beb9, 0xa6d23e7f)  // r5.y <- q.x; r5.z <- q.y; r5.w <- q.z

#line 15
      xor r5.y, r5.z, r5.y
      xor r5.y, r5.w, r5.y
      imul null, r5.yzw, r5.yyyy, l(0, 0x5f356491, 0xe336beb9, 0xa6d23e7f)  // r5.y <- q.x

#line 16
      utof r5.yzw, r5.yyzw
      mul r5.yzw, r5.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000)
      mul r5.yzw, r5.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r5.yzw, r5.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)  // r5.y <- <Hash33 return value>.x; r5.z <- <Hash33 return value>.y; r5.w <- <Hash33 return value>.z

#line 79
      mul r5.yzw, r5.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
      add r5.yzw, r5.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)  // r5.y <- h.x; r5.z <- h.y; r5.w <- h.z

#line 80
      add r5.yzw, r6.xxyz, r5.yyzw

#line 81
      mov r5.yzw, -r5.yyzw
      add r5.yzw, r0.xxyz, r5.yyzw  // r5.y <- d.x; r5.z <- d.y; r5.w <- d.z

#line 82
      dp3 r5.y, r5.yzwy, r5.yzwy
      min r5.x, r5.y, r5.x

#line 83
      add r6.z, r6.z, l(1.000000)
    endloop 
    mov r4.y, r5.x  // r4.y <- minDist

#line 84
    add r4.z, r4.z, l(1.000000)
  endloop 
  mov r3.z, r4.y  // r3.z <- minDist

#line 85
  add r3.w, r3.w, l(1.000000)
endloop 

#line 88
mov r0.x, -r3.z
add r0.x, r0.x, l(1.000000)  // r0.x <- <WorleyNoise return value>

#line 110
mul r0.x, r0.x, l(0.125000)
add r1.z, r0.x, r2.x  // r1.z <- <WorleyFbm return value>

#line 18 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\HighFreqWorleyCS.hlsl"
mov r1.z, r1.z  // r1.z <- color.z

#line 19
mov r1.w, l(1.000000)  // r1.w <- color.w

#line 21
store_uav_typed u0.xyzw, vThreadID.xyzz, r1.xyzw

#line 22
ret 
// Approximately 631 instruction slots used
