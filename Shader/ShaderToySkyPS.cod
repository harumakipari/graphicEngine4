//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SHADERTOY_CONSTANTS
// {
//
//   float4 iResolution;                // Offset:    0 Size:    16
//   float4 iMouse;                     // Offset:   16 Size:    16
//   float4 iChannelResolution[4];      // Offset:   32 Size:    64 [unused]
//   float iTime;                       // Offset:   96 Size:     4
//   float iFrame;                      // Offset:  100 Size:     4 [unused]
//   float iPad0;                       // Offset:  104 Size:     4 [unused]
//   float iPad1;                       // Offset:  108 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SHADERTOY_CONSTANTS               cbuffer      NA          NA            cb7      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB7[7], immediateIndexed
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 7
div r0.xy, v0.xyxx, cb7[0].xyxx
add r0.xy, r0.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
div r0.w, cb7[0].y, cb7[0].x
mul r0.z, r0.w, r0.y
mul r0.yz, r0.xxzx, l(0.000000, 0.800000, 0.800000, 0.000000)
mad r1.xz, cb7[6].xxxx, l(0.010000, 0.000000, 0.010000, 0.000000), l(0.250000, 0.000000, 0.750000, 0.000000)
div r2.xy, cb7[1].xyxx, cb7[0].xyxx
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(0.500000, 0.800000, 0.000000, 0.000000)
sincos r3.xy, r4.xy, r2.xyxx
sincos r2.xy, null, -r2.xyxx
mov r2.z, r4.x
mov r2.w, r3.x
mov r0.w, l(1.000000)
dp2 r0.x, r2.zwzz, r0.ywyy
dp2 r5.z, r2.xzxx, r0.ywyy
mov r3.x, r4.y
dp2 r5.x, r3.xyxx, r0.xzxx
mov r3.z, r2.y
dp2 r5.y, r3.zxzz, r0.xzxx
mad r0.x, r1.x, l(2.000000), l(1.000000)
mov r0.z, l(-1.500000)
dp2 r1.y, r2.zwzz, r0.xzxx
dp2 r0.z, r2.xzxx, r0.xzxx
dp2 r0.x, r3.xyxx, r1.yzyy
dp2 r0.y, r3.zxzz, r1.yzyy
mov r2.x, l(0.100000)
mov r0.w, l(1.000000)
mov r1.xyzw, l(0,0,0,0)
loop 
  ige r2.w, r1.w, l(20)
  breakc_nz r2.w
  mul r3.xyz, r5.xyzx, r2.xxxx
  mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r0.xyzx
  mul r3.xyz, r3.xyzx, l(0.588235, 0.588235, 0.588235, 0.000000)
  ge r4.xyz, r3.xyzx, -r3.xyzx
  frc r3.xyz, |r3.xyzx|
  movc r3.xyz, r4.xyzx, r3.xyzx, -r3.xyzx
  mad r3.xyz, -r3.xyzx, l(1.700000, 1.700000, 1.700000, 0.000000), l(0.850000, 0.850000, 0.850000, 0.000000)
  mov r4.xyz, |r3.xyzx|
  mov r2.w, l(0)
  mov r3.w, l(0)
  mov r4.w, l(0)
  loop 
    ige r5.w, r4.w, l(17)
    breakc_nz r5.w
    dp3 r5.w, r4.xyzx, r4.xyzx
    div r6.xyz, |r4.xyzx|, r5.wwww
    add r4.xyz, r6.xyzx, l(-0.530000, -0.530000, -0.530000, 0.000000)
    dp3 r5.w, r4.xyzx, r4.xyzx
    sqrt r5.w, r5.w
    add r6.x, -r2.w, r5.w
    add r3.w, r3.w, |r6.x|
    iadd r4.w, r4.w, l(1)
    mov r2.w, r5.w
  endloop 
  mul r2.w, r3.w, r3.w
  mad r3.x, -r2.w, l(0.001000), l(0.300000)
  max r3.x, r3.x, l(0.000000)
  mul r2.w, r2.w, r3.w
  ilt r3.y, l(6), r1.w
  add r3.x, -r3.x, l(1.000000)
  mul r3.x, r0.w, r3.x
  movc r3.x, r3.y, r3.x, r0.w
  add r4.xyz, r1.xyzx, r3.xxxx
  mul r2.y, r2.x, r2.x
  mul r2.z, r2.y, r2.y
  mul r2.yzw, r2.wwww, r2.xxyz
  mul r2.yzw, r3.xxxx, r2.yyzw
  mad r1.xyz, r2.yzwy, l(0.001500, 0.001500, 0.001500, 0.000000), r4.xyzx
  mul r0.w, r3.x, l(0.730000)
  add r2.x, r2.x, l(0.100000)
  iadd r1.w, r1.w, l(1)
endloop 
dp3 r0.x, r1.xyzx, r1.xyzx
sqrt r0.x, r0.x
add r0.yzw, -r0.xxxx, r1.xxyz
mad r0.xyz, r0.yzwy, l(0.850000, 0.850000, 0.850000, 0.000000), r0.xxxx
mul o0.xyz, r0.xyzx, l(0.000500, 0.000500, 0.000500, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 80 instruction slots used
