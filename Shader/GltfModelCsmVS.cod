//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 cpuColor;                   // Offset:   64 Size:    16 [unused]
//   int material;                      // Offset:   80 Size:     4 [unused]
//   bool hasTangent;                   // Offset:   84 Size:     4 [unused]
//   int skin;                          // Offset:   88 Size:     4
//   float dissolveValue;               // Offset:   92 Size:     4 [unused]
//   float emission;                    // Offset:   96 Size:     4 [unused]
//   float3 pads;                       // Offset:  100 Size:    12 [unused]
//   row_major float4x4 invWorld;       // Offset:  112 Size:    64 [unused]
//
// }
//
// cbuffer PRIMITIVE_JOINT_CONSTANTS
// {
//
//   row_major float4x4 jointMatrices[512];// Offset:    0 Size: 32768
//
// }
//
// cbuffer csmConstants
// {
//
//   struct CsmConstants
//   {
//       
//       row_major float4x4 cascadedMatrices[4];// Offset:    0
//       float4 cascadedPlaneDistances; // Offset:  256
//
//   } csmData;                         // Offset:    0 Size:   272
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// PRIMITIVE_JOINT_CONSTANTS         cbuffer      NA          NA            cb2      1 
// csmConstants                      cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float       
// TANGENT                  0   xyzw        2     NONE   float       
// TEXCOORD                 0   xy          3     NONE   float       
// JOINTS                   0   xyzw        4     NONE    uint   xyzw
// JOINTS                   1   xyzw        5     NONE    uint   xyzw
// WEIGHTS                  0   xyzw        6     NONE   float   xyzw
// WEIGHTS                  1   xyzw        7     NONE   float   xyzw
// SV_INSTANCEID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// INSTANCEID               0   x           1     NONE    uint   x   
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[6], immediateIndexed
dcl_constantbuffer CB2[2048], dynamicIndexed
dcl_constantbuffer CB3[17], dynamicIndexed
dcl_input v0.xyzw
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_input v7.xyzw
dcl_input_sgv v8.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.x
dcl_temps 10
//
// Initial variable locations:
//   v0.x <- vin.position.x; v0.y <- vin.position.y; v0.z <- vin.position.z; v0.w <- vin.position.w; 
//   v1.x <- vin.normal.x; v1.y <- vin.normal.y; v1.z <- vin.normal.z; v1.w <- vin.normal.w; 
//   v2.x <- vin.tangent.x; v2.y <- vin.tangent.y; v2.z <- vin.tangent.z; v2.w <- vin.tangent.w; 
//   v3.x <- vin.texcoord.x; v3.y <- vin.texcoord.y; 
//   v4.x <- vin.joints[0].x; v4.y <- vin.joints[0].y; v4.z <- vin.joints[0].z; v4.w <- vin.joints[0].w; 
//   v5.x <- vin.joints[1].x; v5.y <- vin.joints[1].y; v5.z <- vin.joints[1].z; v5.w <- vin.joints[1].w; 
//   v6.x <- vin.weights[0].x; v6.y <- vin.weights[0].y; v6.z <- vin.weights[0].z; v6.w <- vin.weights[0].w; 
//   v7.x <- vin.weights[1].x; v7.y <- vin.weights[1].y; v7.z <- vin.weights[1].z; v7.w <- vin.weights[1].w; 
//   v8.x <- instanceId; 
//   o1.x <- <main return value>.instanceId; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 45 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\GltfModelCsmVS.hlsl"
ilt r0.x, l(-1), cb0[5].z
if_nz r0.x

#line 47
  imul null, r0.x, v4.x, l(4)
  mul r1.x, v6.x, cb2[r0.x + 0].x
  mul r2.x, v6.x, cb2[r0.x + 0].y
  mul r3.x, v6.x, cb2[r0.x + 0].z
  mul r4.x, v6.x, cb2[r0.x + 0].w
  mul r1.y, v6.x, cb2[r0.x + 1].x
  mul r2.y, v6.x, cb2[r0.x + 1].y
  mul r3.y, v6.x, cb2[r0.x + 1].z
  mul r4.y, v6.x, cb2[r0.x + 1].w
  mul r1.z, v6.x, cb2[r0.x + 2].x
  mul r2.z, v6.x, cb2[r0.x + 2].y
  mul r3.z, v6.x, cb2[r0.x + 2].z
  mul r4.z, v6.x, cb2[r0.x + 2].w
  mul r0.xyzw, v6.xxxx, cb2[r0.x + 3].xyzw
  imul null, r5.x, v4.y, l(4)
  mul r6.x, v6.y, cb2[r5.x + 0].x
  mul r7.x, v6.y, cb2[r5.x + 0].y
  mul r8.x, v6.y, cb2[r5.x + 0].z
  mul r9.x, v6.y, cb2[r5.x + 0].w
  mul r6.y, v6.y, cb2[r5.x + 1].x
  mul r7.y, v6.y, cb2[r5.x + 1].y
  mul r8.y, v6.y, cb2[r5.x + 1].z
  mul r9.y, v6.y, cb2[r5.x + 1].w
  mul r6.z, v6.y, cb2[r5.x + 2].x
  mul r7.z, v6.y, cb2[r5.x + 2].y
  mul r8.z, v6.y, cb2[r5.x + 2].z
  mul r9.z, v6.y, cb2[r5.x + 2].w
  mul r5.xyzw, v6.yyyy, cb2[r5.x + 3].xyzw
  mov r1.w, r0.x
  mov r6.w, r5.x
  add r1.xyzw, r1.xyzw, r6.xyzw
  mov r2.w, r0.y
  mov r7.w, r5.y
  add r2.xyzw, r2.xyzw, r7.xyzw
  mov r3.w, r0.z
  mov r8.w, r5.z
  add r3.xyzw, r3.xyzw, r8.xyzw
  mov r4.w, r0.w
  mov r9.w, r5.w
  add r0.xyzw, r4.xyzw, r9.xyzw
  imul null, r4.x, v4.z, l(4)
  mul r5.x, v6.z, cb2[r4.x + 0].x
  mul r6.x, v6.z, cb2[r4.x + 0].y
  mul r7.x, v6.z, cb2[r4.x + 0].z
  mul r8.x, v6.z, cb2[r4.x + 0].w
  mul r5.y, v6.z, cb2[r4.x + 1].x
  mul r6.y, v6.z, cb2[r4.x + 1].y
  mul r7.y, v6.z, cb2[r4.x + 1].z
  mul r8.y, v6.z, cb2[r4.x + 1].w
  mul r5.z, v6.z, cb2[r4.x + 2].x
  mul r6.z, v6.z, cb2[r4.x + 2].y
  mul r7.z, v6.z, cb2[r4.x + 2].z
  mul r8.z, v6.z, cb2[r4.x + 2].w
  mul r4.xyzw, v6.zzzz, cb2[r4.x + 3].xyzw
  mov r5.w, r4.x
  add r1.xyzw, r1.xyzw, r5.xyzw
  mov r6.w, r4.y
  add r2.xyzw, r2.xyzw, r6.xyzw
  mov r7.w, r4.z
  add r3.xyzw, r3.xyzw, r7.xyzw
  mov r8.w, r4.w
  add r0.xyzw, r0.xyzw, r8.xyzw
  imul null, r4.x, v4.w, l(4)
  mul r5.x, v6.w, cb2[r4.x + 0].x
  mul r6.x, v6.w, cb2[r4.x + 0].y
  mul r7.x, v6.w, cb2[r4.x + 0].z
  mul r8.x, v6.w, cb2[r4.x + 0].w
  mul r5.y, v6.w, cb2[r4.x + 1].x
  mul r6.y, v6.w, cb2[r4.x + 1].y
  mul r7.y, v6.w, cb2[r4.x + 1].z
  mul r8.y, v6.w, cb2[r4.x + 1].w
  mul r5.z, v6.w, cb2[r4.x + 2].x
  mul r6.z, v6.w, cb2[r4.x + 2].y
  mul r7.z, v6.w, cb2[r4.x + 2].z
  mul r8.z, v6.w, cb2[r4.x + 2].w
  mul r4.xyzw, v6.wwww, cb2[r4.x + 3].xyzw
  mov r5.w, r4.x
  add r1.xyzw, r1.xyzw, r5.xyzw
  mov r6.w, r4.y
  add r2.xyzw, r2.xyzw, r6.xyzw
  mov r7.w, r4.z
  add r3.xyzw, r3.xyzw, r7.xyzw
  mov r8.w, r4.w
  add r0.xyzw, r0.xyzw, r8.xyzw
  imul null, r4.x, v5.x, l(4)
  mul r5.x, v7.x, cb2[r4.x + 0].x
  mul r6.x, v7.x, cb2[r4.x + 0].y
  mul r7.x, v7.x, cb2[r4.x + 0].z
  mul r8.x, v7.x, cb2[r4.x + 0].w
  mul r5.y, v7.x, cb2[r4.x + 1].x
  mul r6.y, v7.x, cb2[r4.x + 1].y
  mul r7.y, v7.x, cb2[r4.x + 1].z
  mul r8.y, v7.x, cb2[r4.x + 1].w
  mul r5.z, v7.x, cb2[r4.x + 2].x
  mul r6.z, v7.x, cb2[r4.x + 2].y
  mul r7.z, v7.x, cb2[r4.x + 2].z
  mul r8.z, v7.x, cb2[r4.x + 2].w
  mul r4.xyzw, v7.xxxx, cb2[r4.x + 3].xyzw
  mov r5.w, r4.x
  add r1.xyzw, r1.xyzw, r5.xyzw
  mov r6.w, r4.y
  add r2.xyzw, r2.xyzw, r6.xyzw
  mov r7.w, r4.z
  add r3.xyzw, r3.xyzw, r7.xyzw
  mov r8.w, r4.w
  add r0.xyzw, r0.xyzw, r8.xyzw
  imul null, r4.x, v5.y, l(4)
  mul r5.x, v7.y, cb2[r4.x + 0].x
  mul r6.x, v7.y, cb2[r4.x + 0].y
  mul r7.x, v7.y, cb2[r4.x + 0].z
  mul r8.x, v7.y, cb2[r4.x + 0].w
  mul r5.y, v7.y, cb2[r4.x + 1].x
  mul r6.y, v7.y, cb2[r4.x + 1].y
  mul r7.y, v7.y, cb2[r4.x + 1].z
  mul r8.y, v7.y, cb2[r4.x + 1].w
  mul r5.z, v7.y, cb2[r4.x + 2].x
  mul r6.z, v7.y, cb2[r4.x + 2].y
  mul r7.z, v7.y, cb2[r4.x + 2].z
  mul r8.z, v7.y, cb2[r4.x + 2].w
  mul r4.xyzw, v7.yyyy, cb2[r4.x + 3].xyzw
  mov r5.w, r4.x
  add r1.xyzw, r1.xyzw, r5.xyzw
  mov r6.w, r4.y
  add r2.xyzw, r2.xyzw, r6.xyzw
  mov r7.w, r4.z
  add r3.xyzw, r3.xyzw, r7.xyzw
  mov r8.w, r4.w
  add r0.xyzw, r0.xyzw, r8.xyzw
  imul null, r4.x, v5.z, l(4)
  mul r5.x, v7.z, cb2[r4.x + 0].x
  mul r6.x, v7.z, cb2[r4.x + 0].y
  mul r7.x, v7.z, cb2[r4.x + 0].z
  mul r8.x, v7.z, cb2[r4.x + 0].w
  mul r5.y, v7.z, cb2[r4.x + 1].x
  mul r6.y, v7.z, cb2[r4.x + 1].y
  mul r7.y, v7.z, cb2[r4.x + 1].z
  mul r8.y, v7.z, cb2[r4.x + 1].w
  mul r5.z, v7.z, cb2[r4.x + 2].x
  mul r6.z, v7.z, cb2[r4.x + 2].y
  mul r7.z, v7.z, cb2[r4.x + 2].z
  mul r8.z, v7.z, cb2[r4.x + 2].w
  mul r4.xyzw, v7.zzzz, cb2[r4.x + 3].xyzw
  mov r5.w, r4.x
  add r1.xyzw, r1.xyzw, r5.xyzw
  mov r6.w, r4.y
  add r2.xyzw, r2.xyzw, r6.xyzw
  mov r7.w, r4.z
  add r3.xyzw, r3.xyzw, r7.xyzw
  mov r8.w, r4.w
  add r0.xyzw, r0.xyzw, r8.xyzw
  imul null, r4.x, v5.w, l(4)
  mul r5.x, v7.w, cb2[r4.x + 0].x
  mul r6.x, v7.w, cb2[r4.x + 0].y
  mul r7.x, v7.w, cb2[r4.x + 0].z
  mul r8.x, v7.w, cb2[r4.x + 0].w
  mul r5.y, v7.w, cb2[r4.x + 1].x
  mul r6.y, v7.w, cb2[r4.x + 1].y
  mul r7.y, v7.w, cb2[r4.x + 1].z
  mul r8.y, v7.w, cb2[r4.x + 1].w
  mul r5.z, v7.w, cb2[r4.x + 2].x
  mul r6.z, v7.w, cb2[r4.x + 2].y
  mul r7.z, v7.w, cb2[r4.x + 2].z
  mul r8.z, v7.w, cb2[r4.x + 2].w
  mul r4.xyzw, v7.wwww, cb2[r4.x + 3].xyzw
  mov r5.w, r4.x
  add r1.xyzw, r1.xyzw, r5.xyzw  // r1.x <- skinMatrix._m00; r1.y <- skinMatrix._m10; r1.z <- skinMatrix._m20; r1.w <- skinMatrix._m30
  mov r6.w, r4.y
  add r2.xyzw, r2.xyzw, r6.xyzw  // r2.x <- skinMatrix._m01; r2.y <- skinMatrix._m11; r2.z <- skinMatrix._m21; r2.w <- skinMatrix._m31
  mov r7.w, r4.z
  add r3.xyzw, r3.xyzw, r7.xyzw  // r3.x <- skinMatrix._m02; r3.y <- skinMatrix._m12; r3.z <- skinMatrix._m22; r3.w <- skinMatrix._m32
  mov r8.w, r4.w
  add r0.xyzw, r0.xyzw, r8.xyzw  // r0.x <- skinMatrix._m03; r0.y <- skinMatrix._m13; r0.z <- skinMatrix._m23; r0.w <- skinMatrix._m33

#line 56
  itof r4.w, l(1)
  mov r4.xyz, v0.xyzx
  dp4 r1.x, r4.xyzw, r1.xyzw  // r1.x <- vin.position.x
  dp4 r1.y, r4.xyzw, r2.xyzw  // r1.y <- vin.position.y
  dp4 r1.z, r4.xyzw, r3.xyzw  // r1.z <- vin.position.z
  dp4 r0.x, r4.xyzw, r0.xyzw  // r0.x <- vin.position.w

#line 57
else 
  mov r1.x, v0.x  // r1.x <- vin.position.x
  mov r1.y, v0.y  // r1.y <- vin.position.y
  mov r1.z, v0.z  // r1.z <- vin.position.z
  mov r0.x, v0.w  // r0.x <- vin.position.w
endif 

#line 59
mov r0.y, v8.x  // r0.y <- vout.instanceId

#line 60
imul null, r0.z, v8.x, l(4)
mul r2.xyzw, cb0[0].xxxx, cb3[r0.z + 0].xyzw
mul r3.xyzw, cb0[0].yyyy, cb3[r0.z + 1].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[0].zzzz, cb3[r0.z + 2].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[0].wwww, cb3[r0.z + 3].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, cb0[1].xxxx, cb3[r0.z + 0].xyzw
mul r4.xyzw, cb0[1].yyyy, cb3[r0.z + 1].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[1].zzzz, cb3[r0.z + 2].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[1].wwww, cb3[r0.z + 3].xyzw
add r3.xyzw, r3.xyzw, r4.xyzw
mul r4.xyzw, cb0[2].xxxx, cb3[r0.z + 0].xyzw
mul r5.xyzw, cb0[2].yyyy, cb3[r0.z + 1].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[2].zzzz, cb3[r0.z + 2].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[2].wwww, cb3[r0.z + 3].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[3].xxxx, cb3[r0.z + 0].xyzw
mul r6.xyzw, cb0[3].yyyy, cb3[r0.z + 1].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[3].zzzz, cb3[r0.z + 2].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[3].wwww, cb3[r0.z + 3].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r2.xyzw, r1.xxxx, r2.xyzw
mul r3.xyzw, r1.yyyy, r3.xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r1.xyzw, r1.zzzz, r4.xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.xxxx, r5.xyzw
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- vout.position.x; r1.y <- vout.position.y; r1.z <- vout.position.z; r1.w <- vout.position.w

#line 62
mov o0.xyzw, r1.xyzw
mov o1.x, r0.y
ret 
// Approximately 226 instruction slots used
