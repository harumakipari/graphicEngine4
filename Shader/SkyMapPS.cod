//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer sky_map_constant_buffer
// {
//
//   row_major float4x4 inverse_view_projection;// Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[1]                 sampler      NA          NA             s1      1 
// skymap                            texture  float4          2d             t0      1 
// sky_map_constant_buffer           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 2
mad r0.x, -v1.y, l(2.000000), l(1.000000)
mul r0.xyzw, r0.xxxx, cb0[1].xyzw
mad r1.x, v1.x, l(2.000000), l(-1.000000)
mad r0.xyzw, r1.xxxx, cb0[0].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb0[2].xyzw
add r0.xyzw, r0.xyzw, cb0[3].xyzw
div r0.xyz, r0.zxyz, r0.wwww
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
max r0.w, |r0.y|, |r0.x|
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
min r1.x, |r0.y|, |r0.x|
mul r0.w, r0.w, r1.x
mul r1.x, r0.w, r0.w
mad r1.y, r1.x, l(0.020835), l(-0.085133)
mad r1.y, r1.x, r1.y, l(0.180141)
mad r1.y, r1.x, r1.y, l(-0.330299)
mad r1.x, r1.x, r1.y, l(0.999866)
mul r1.y, r0.w, r1.x
mad r1.y, r1.y, l(-2.000000), l(1.570796)
lt r1.z, |r0.y|, |r0.x|
and r1.y, r1.z, r1.y
mad r0.w, r0.w, r1.x, r1.y
lt r1.xy, r0.yzyy, -r0.yzyy
and r1.x, r1.x, l(0xc0490fdb)
add r0.w, r0.w, r1.x
min r1.x, r0.y, r0.x
lt r1.x, r1.x, -r1.x
max r0.x, r0.y, r0.x
ge r0.x, r0.x, -r0.x
and r0.x, r0.x, r1.x
movc r0.x, r0.x, -r0.w, r0.w
add r0.x, r0.x, l(3.141593)
mul r0.x, r0.x, l(0.159155)
mad r0.w, |r0.z|, l(-0.018729), l(0.074261)
mad r0.w, r0.w, |r0.z|, l(-0.212114)
mad r0.w, r0.w, |r0.z|, l(1.570729)
add r0.z, -|r0.z|, l(1.000000)
sqrt r0.z, r0.z
mul r1.x, r0.z, r0.w
mad r1.x, r1.x, l(-2.000000), l(3.141593)
and r1.x, r1.y, r1.x
mad r0.z, r0.w, r0.z, r1.x
add r0.z, -r0.z, l(3.141593)
mad r0.y, -r0.z, l(0.318310), l(1.000000)
sample_l_indexable(texture2d)(float,float,float,float) o0.xyzw, r0.xyxx, t0.xyzw, s1, l(0.000000)
ret 
// Approximately 48 instruction slots used
