//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer sky_map_constant_buffer
// {
//
//   row_major float4x4 inverse_view_projection;// Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sampler_states[1]                 sampler      NA          NA             s1      1 
// skymap                            texture  float4          2d             t0      1 
// sky_map_constant_buffer           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[4], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 11 "C:\Users\2240225\Desktop\graphicEngine4\Shader\SkyMapPS.hlsl"
mul r0.x, v1.x, l(2.000000)
mov r0.y, l(-1.000000)
add r0.x, r0.y, r0.x  // r0.x <- ndc.x
mul r0.y, v1.y, l(2.000000)
mov r0.y, -r0.y
add r0.y, r0.y, l(1.000000)  // r0.y <- ndc.y
itof r0.zw, l(0, 0, 1, 1)  // r0.z <- ndc.z; r0.w <- ndc.w

#line 12
mul r1.xyzw, r0.xxxx, cb0[0].xyzw
mul r2.xyzw, r0.yyyy, cb0[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.zzzz, cb0[2].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.wwww, cb0[3].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- R.x; r0.y <- R.y; r0.z <- R.z; r0.w <- R.w

#line 13
div r0.xyz, r0.xyzx, r0.wwww

#line 14
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- v.x; r0.y <- v.y; r0.z <- v.z

#line 17
mov r0.w, l(3.141593)  // r0.w <- PI

#line 19
mov r1.x, -r0.z
max r1.x, r0.z, r1.x
mov r1.y, -r0.x
max r1.z, r0.x, r1.y
min r1.w, r1.z, r1.x
max r2.x, r1.z, r1.x
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
mul r1.w, r1.w, r2.x
mul r2.x, r1.w, r1.w
mul r2.y, r2.x, l(0.020835)
add r2.y, r2.y, l(-0.085133)
mul r2.y, r2.y, r2.x
add r2.y, r2.y, l(0.180141)
mul r2.y, r2.y, r2.x
add r2.y, r2.y, l(-0.330299)
mul r2.x, r2.y, r2.x
add r2.x, r2.x, l(0.999866)
mul r1.w, r1.w, r2.x
lt r1.x, r1.z, r1.x
mul r1.z, r1.w, l(-2.000000)
add r1.z, r1.z, l(1.570796)
and r1.x, r1.x, r1.z
add r1.x, r1.w, r1.x
lt r1.y, r0.x, r1.y
and r1.y, r1.y, l(0xc0490fdb)
add r1.x, r1.y, r1.x
min r1.y, r0.x, r0.z
max r0.x, r0.x, r0.z
mov r0.z, -r1.y
lt r0.z, r1.y, r0.z
mov r1.y, -r0.x
ge r0.x, r0.x, r1.y
and r0.x, r0.x, r0.z
mov r0.z, -r1.x
movc r0.x, r0.x, r0.z, r1.x
add r0.x, r0.w, r0.x
div r1.x, r0.x, l(6.283185)  // r1.x <- sample_point.x

#line 20
mov r0.x, -r0.y
max r0.z, r0.x, r0.y
mov r1.z, -r0.z
add r1.z, r1.z, l(1.000000)
sqrt r1.z, r1.z
mul r1.w, r0.z, l(-0.018729)
add r1.w, r1.w, l(0.074261)
mul r1.w, r0.z, r1.w
add r1.w, r1.w, l(-0.212114)
mul r0.z, r0.z, r1.w
add r0.z, r0.z, l(1.570729)
mul r0.z, r1.z, r0.z
mul r1.z, r0.z, l(-2.000000)
add r1.z, r1.z, l(3.141593)
lt r0.x, r0.y, r0.x
and r0.x, r0.x, r1.z
add r0.x, r0.x, r0.z
mov r0.x, -r0.x
add r0.x, r0.x, l(1.570796)
add r0.x, r0.x, l(1.570796)
div r0.x, r0.x, r0.w
mov r0.x, -r0.x
add r1.y, r0.x, l(1.000000)  // r1.y <- sample_point.y

#line 22
itof r0.x, l(0)  // r0.x <- lod

#line 23
sample_l_indexable(texture2d)(float,float,float,float) o0.xyzw, r1.xyxx, t0.xyzw, s1, r0.x
ret 
// Approximately 82 instruction slots used
