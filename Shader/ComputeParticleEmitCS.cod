//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// Resource bind info for emitParticleBuffer
// {
//
//   struct EmitParticleData
//   {
//       
//       float4 parameter;              // Offset:    0
//       float4 position;               // Offset:   16
//       float4 rotation;               // Offset:   32
//       float4 scale;                  // Offset:   48
//       float4 velocity;               // Offset:   64
//       float4 acceleration;           // Offset:   80
//       float4 color;                  // Offset:   96
//       float4 customData;             // Offset:  112
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
// Resource bind info for particleDataBuffer
// {
//
//   struct ParticleData
//   {
//       
//       float4 parameter;              // Offset:    0
//       float4 position;               // Offset:   16
//       float4 rotation;               // Offset:   32
//       float4 scale;                  // Offset:   48
//       float4 velocity;               // Offset:   64
//       float4 acceleration;           // Offset:   80
//       float4 texcoord;               // Offset:   96
//       float4 color;                  // Offset:  112
//       float4 customData;             // Offset:  128
//
//   } $Element;                        // Offset:    0 Size:   144
//
// }
//
// Resource bind info for particlePoolBuffer
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for particleHeaderBuffer
// {
//
//   struct ParticleHeader
//   {
//       
//       uint alive;                    // Offset:    0
//       uint particleIndex;            // Offset:    4
//       float depth;                   // Offset:    8
//       uint dummy;                    // Offset:   12
//
//   } $Element;                        // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// emitParticleBuffer                texture  struct         r/o             t0      1 
// particleDataBuffer                    UAV  struct         r/w             u0      1 
// particlePoolBuffer                    UAV  struct     consume             u1      1 
// indirectDataBuffer                    UAV    byte         r/w             u2      1 
// particleHeaderBuffer                  UAV  struct         r/w             u3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_resource_structured t0, 128
dcl_uav_structured u0, 144
dcl_uav_structured u1, 4
dcl_uav_raw u2
dcl_uav_structured u3, 16
dcl_input vThreadID.x
dcl_temps 3
dcl_thread_group 1, 1, 1
imm_atomic_consume r0.x, u1
imm_atomic_iadd r1.x, u2, l(36), l(1)
mov r2.xzw, l(1,0,1.000000,0)
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r2.y, r0.x, l(0), u1.xxxx
store_structured u3.xyzw, r1.x, l(0), r2.xyzw
ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r0.xy, vThreadID.x, l(0), t0.xyxx
ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r0.z, vThreadID.x, l(4), t0.xxxx
mov r0.w, l(0)
store_structured u0.xyzw, r2.y, l(0), r0.xyzw
ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r0.xyzw, vThreadID.x, l(16), t0.xyzw
store_structured u0.xyzw, r2.y, l(16), r0.xyzw
ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r0.xyzw, vThreadID.x, l(32), t0.xyzw
store_structured u0.xyzw, r2.y, l(32), r0.xyzw
ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r0.xyzw, vThreadID.x, l(48), t0.xyzw
store_structured u0.xyzw, r2.y, l(48), r0.xyzw
ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r0.xyzw, vThreadID.x, l(64), t0.xyzw
store_structured u0.xyzw, r2.y, l(64), r0.xyzw
ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r0.xyzw, vThreadID.x, l(80), t0.xyzw
store_structured u0.xyzw, r2.y, l(80), r0.xyzw
ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r0.xyzw, vThreadID.x, l(96), t0.xyzw
store_structured u0.xyzw, r2.y, l(112), r0.xyzw
ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r0.xyzw, vThreadID.x, l(112), t0.xyzw
store_structured u0.xyzw, r2.y, l(128), r0.xyzw
ret 
// Approximately 24 instruction slots used
