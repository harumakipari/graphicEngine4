//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   bool enableSSAO;                   // Offset:    0 Size:     4 [unused]
//   float reflectionIntensity;         // Offset:    4 Size:     4 [unused]
//   float time;                        // Offset:    8 Size:     4 [unused]
//   bool enableCascadedShadowMaps;     // Offset:   12 Size:     4 [unused]
//   bool enableSSR;                    // Offset:   16 Size:     4 [unused]
//   bool enableFog;                    // Offset:   20 Size:     4 [unused]
//   bool enableBloom;                  // Offset:   24 Size:     4 [unused]
//   float deltaTime;                   // Offset:   28 Size:     4
//   float gravity;                     // Offset:   32 Size:     4
//
// }
//
// Resource bind info for clothVerticesSRV
// {
//
//   struct
//   {
//       
//       float4 position;               // Offset:    0
//       float4 normal;                 // Offset:   16
//       float4 tangent;                // Offset:   32
//       float4 texcoord;               // Offset:   48
//       float4 oldVelocity;            // Offset:   64
//       float4 velocity;               // Offset:   80
//       float4 newPosition;            // Offset:   96
//
//   } $Element;                        // Offset:    0 Size:   112
//
// }
//
// Resource bind info for clothEdges
// {
//
//   struct
//   {
//       
//       uint id;                       // Offset:    0
//       float restLength;              // Offset:    4
//       float3 delta;                  // Offset:    8
//
//   } $Element;                        // Offset:    0 Size:    20
//
// }
//
// Resource bind info for clothVerticesUAV
// {
//
//   struct
//   {
//       
//       float4 position;               // Offset:    0
//       float4 normal;                 // Offset:   16
//       float4 tangent;                // Offset:   32
//       float4 texcoord;               // Offset:   48
//       float4 oldVelocity;            // Offset:   64
//       float4 velocity;               // Offset:   80
//       float4 newPosition;            // Offset:   96
//
//   } $Element;                        // Offset:    0 Size:   112
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// clothVerticesSRV                  texture  struct         r/o             t0      1 
// clothEdges                        texture  struct         r/o             t1      1 
// clothVerticesUAV                      UAV  struct         r/w             u0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_4_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[3], immediateIndexed
dcl_resource_structured t0, 112
dcl_resource_structured t1, 20
dcl_uav_structured u0, 112
dcl_input vThreadID.x
dcl_temps 5
dcl_thread_group 16, 1, 1
ld_structured r0.xyzw, vThreadID.x, l(0), t0.xyzw
ld_structured r1.x, vThreadID.x, l(64), t0.xxxx
eq r1.x, r1.x, l(1.000000)
if_nz r1.x
  store_structured u0.xyzw, vThreadID.x, l(0), r0.xyzw
  store_structured u0.xyzw, vThreadID.x, l(80), l(0,0,0,0)
  store_structured u0.xyzw, vThreadID.x, l(96), r0.xyzw
  ret 
endif 
ld_structured r1.xyz, vThreadID.x, l(80), t0.xyzx
ishl r0.w, vThreadID.x, l(2)
mov r2.xyz, l(0,0,0,0)
mov r1.w, l(0)
loop 
  ige r2.w, r1.w, l(4)
  breakc_nz r2.w
  iadd r2.w, r0.w, r1.w
  ld_structured r3.xy, r2.w, l(0), t1.xyxx
  ieq r2.w, r3.x, l(-1)
  if_nz r2.w
    iadd r2.w, r1.w, l(1)
    mov r1.w, r2.w
    continue 
  endif 
  ld_structured r4.xyz, r3.x, l(0), t0.xyzx
  add r3.xzw, r0.xxyz, -r4.xxyz
  dp3 r2.w, r3.xzwx, r3.xzwx
  sqrt r2.w, r2.w
  lt r4.x, l(0.000001), r2.w
  add r3.y, -r3.y, r2.w
  mul r3.y, r3.y, l(-20000.000000)
  div r3.xzw, r3.xxzw, r2.wwww
  mad r3.xyz, r3.yyyy, r3.xzwx, r2.xyzx
  movc r2.xyz, r4.xxxx, r3.xyzx, r2.xyzx
  iadd r1.w, r1.w, l(1)
endloop 
mad r2.y, cb1[2].x, l(-0.100000), r2.y
mad r2.xyz, r1.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000), r2.xyzx
mul r2.xyz, r2.xyzx, cb1[1].wwww
mad r1.xyz, r2.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r1.xyzx
mad r0.xyz, r1.xyzx, cb1[1].wwww, r0.xyzx
lt r2.x, r0.y, l(0.000000)
mov r1.w, r0.y
movc r2.xy, r2.xxxx, l(0,0,0,0), r1.wyww
mov r0.y, r2.x
mov r0.w, l(1.000000)
store_structured u0.xyzw, vThreadID.x, l(0), r0.xyzw
mov r2.xz, r1.xxzx
mov r2.w, l(0)
store_structured u0.xyzw, vThreadID.x, l(80), r2.xyzw
store_structured u0.xyzw, vThreadID.x, l(96), r0.xyzw
ret 
// Approximately 52 instruction slots used
