//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SHADERTOY_CONSTANTS
// {
//
//   float4 iResolution;                // Offset:    0 Size:    16
//   float4 iMouse;                     // Offset:   16 Size:    16
//   float4 iChannelResolution[4];      // Offset:   32 Size:    64 [unused]
//   float iTime;                       // Offset:   96 Size:     4
//   float iFrame;                      // Offset:  100 Size:     4 [unused]
//   float iPad0;                       // Offset:  104 Size:     4 [unused]
//   float iPad1;                       // Offset:  108 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SHADERTOY_CONSTANTS               cbuffer      NA          NA            cb7      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB7[7], immediateIndexed
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 11
dcl_indexableTemp x0[9], 4
mad r0.xy, -cb7[0].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), v0.xyxx
div r0.xy, r0.xyxx, cb7[0].yyyy
div r0.zw, cb7[1].xxxy, cb7[0].xxxy
add r0.zw, r0.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
mul r1.xyzw, cb7[6].xxxx, l(0.100000, 0.040000, 0.024000, 0.004348)
sincos r1.x, r2.x, r1.x
mov r3.y, -r1.x
mov r3.z, r2.x
mov r3.x, r1.x
dp2 r2.x, r0.yxyy, r3.xzxx
dp2 r2.y, r0.xyxx, r3.yzyy
add r0.zw, r0.zzzw, r0.zzzw
dp2 r4.x, r0.wzww, r3.xzxx
dp2 r4.y, r0.zwzz, r3.yzyy
mad r0.z, r1.x, l(0.500000), l(0.500000)
log r0.z, r0.z
mul r0.z, r0.z, l(50.000000)
exp r0.z, r0.z
mul r0.z, r0.z, l(5.000000)
mov r2.zw, l(0,0,0,0)
loop 
  ge r0.w, r2.w, l(1.000000)
  breakc_nz r0.w
  mad r0.w, cb7[6].x, l(0.100000), r2.w
  frc r0.w, r0.w
  mul r3.w, r0.w, l(1.666667)
  mad r4.z, r0.w, l(-14.000000), l(15.000000)
  min r3.w, r3.w, l(1.000000)
  mul r4.w, r3.w, r3.w
  mad r3.w, -r3.w, l(2.000000), l(3.000000)
  mul r3.w, r3.w, r4.w
  add r4.w, r0.w, l(-1.000000)
  mul r4.w, r4.w, l(-5.000000)
  min r4.w, r4.w, l(1.000000)
  mul r5.x, r4.w, r4.w
  mad r4.w, -r4.w, l(2.000000), l(3.000000)
  mul r4.w, r4.w, r5.x
  mul r3.w, r3.w, r4.w
  mul r5.xy, r0.wwww, r4.xyxx
  mad r4.zw, r2.xxxy, r4.zzzz, -r5.xxxy
  round_ni r5.xyz, r4.zwzz
  add r5.xyz, r2.wwww, r5.xyzx
  frc r4.zw, r4.zzzw
  add r4.zw, r4.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
  mov r0.w, l(0)
  mov r6.y, l(-1.000000)
  loop 
    lt r5.w, l(1.000000), r6.y
    breakc_nz r5.w
    mov r5.w, r0.w
    mov r6.x, l(-1.000000)
    loop 
      lt r6.z, l(1.000000), r6.x
      breakc_nz r6.z
      iadd r6.z, r5.w, l(1)
      add r7.xyz, r5.xyzx, r6.xyxx
      mul r7.xyz, r7.xyzx, l(213.897003, 653.453003, 253.098007, 0.000000)
      frc r7.xyz, r7.xyzx
      add r8.xyz, r7.yzxy, l(79.760002, 79.760002, 79.760002, 0.000000)
      dp3 r6.w, r7.xyzx, r8.xyzx
      add r7.xyz, r6.wwww, r7.xyzx
      add r6.w, r7.y, r7.x
      mul r6.w, r7.z, r6.w
      frc r6.w, r6.w
      mul r7.xy, r6.wwww, l(10.000000, 100.000000, 0.000000, 0.000000)
      frc r7.xy, r7.xyxx
      add r6.w, r6.w, cb7[6].x
      mul r7.xy, r7.xyxx, r6.wwww
      sincos r8.x, null, r7.x
      sincos null, r8.y, r7.y
      mad r7.xy, r8.xyxx, l(0.400000, 0.400000, 0.000000, 0.000000), r6.xyxx
      mov x0[r5.w + 0].xy, r7.xyxx
      add r6.x, r6.x, l(1.000000)
      mov r5.w, r6.z
    endloop 
    mov r0.w, r5.w
    add r6.y, r6.y, l(1.000000)
  endloop 
  mov r5.xy, x0[4].xyxx
  mov r6.xy, x0[0].xyxx
  add r6.zw, r4.zzzw, -r5.xxxy
  add r7.xy, -r5.xyxx, r6.xyxx
  dp2 r0.w, r6.zwzz, r7.xyxx
  dp2 r5.z, r7.xyxx, r7.xyxx
  div_sat r0.w, r0.w, r5.z
  mad r7.xy, -r7.xyxx, r0.wwww, r6.zwzz
  dp2 r0.w, r7.xyxx, r7.xyxx
  sqrt r0.w, r0.w
  add r7.xy, r5.xyxx, -r6.xyxx
  dp2 r5.z, r7.xyxx, r7.xyxx
  sqrt r5.z, r5.z
  add r7.xy, r5.zzzz, l(-1.500000, -0.750000, 0.000000, 0.000000)
  mov_sat r7.x, -r7.x
  mul r5.z, r7.x, r7.x
  mad r7.x, -r7.x, l(2.000000), l(3.000000)
  add r7.y, |r7.y|, l(-0.050000)
  mul_sat r7.y, r7.y, l(-33.333332)
  mul r7.z, r7.y, r7.y
  mad r7.y, -r7.y, l(2.000000), l(3.000000)
  mul r7.y, r7.y, r7.z
  mad r5.z, r5.z, r7.x, r7.y
  add r0.w, r0.w, l(-0.040000)
  mul_sat r0.w, r0.w, l(-33.333336)
  mul r7.x, r0.w, r0.w
  mad r0.w, -r0.w, l(2.000000), l(3.000000)
  mul r0.w, r0.w, r7.x
  add r6.xy, r4.zwzz, -r6.xyxx
  dp2 r6.x, r6.xyxx, r6.xyxx
  sqrt r6.y, r6.x
  div r6.x, l(0.005000), r6.x
  add r6.y, r6.y, l(-1.000000)
  mul_sat r6.y, r6.y, l(-3.333333)
  mul r7.x, r6.y, r6.y
  mad r6.y, -r6.y, l(2.000000), l(3.000000)
  mul r6.y, r6.y, r7.x
  mul r6.x, r6.y, r6.x
  mov r6.y, x0[0].x
  frc r6.y, r6.y
  mov r7.x, x0[0].y
  frc r7.x, r7.x
  add r6.y, r6.y, r7.x
  add r6.y, r6.y, cb7[6].x
  mul r6.y, r6.y, l(5.000000)
  sincos r6.y, null, r6.y
  mad r6.y, r6.y, l(0.400000), l(0.600000)
  log r6.y, r6.y
  mul r6.y, r6.y, l(20.000000)
  exp r6.y, r6.y
  mov r7.xy, x0[1].xyxx
  add r7.zw, -r5.xxxy, r7.xxxy
  dp2 r8.x, r6.zwzz, r7.zwzz
  dp2 r8.y, r7.zwzz, r7.zwzz
  div_sat r8.x, r8.x, r8.y
  mad r7.zw, -r7.zzzw, r8.xxxx, r6.zzzw
  dp2 r7.z, r7.zwzz, r7.zwzz
  add r8.xy, r5.xyxx, -r7.xyxx
  dp2 r7.w, r8.xyxx, r8.xyxx
  sqrt r7.zw, r7.zzzw
  add r8.xy, r7.wwww, l(-1.500000, -0.750000, 0.000000, 0.000000)
  mov_sat r8.x, -r8.x
  mul r7.w, r8.x, r8.x
  mad r8.x, -r8.x, l(2.000000), l(3.000000)
  add r8.y, |r8.y|, l(-0.050000)
  mul_sat r8.y, r8.y, l(-33.333332)
  mul r8.z, r8.y, r8.y
  mad r8.y, -r8.y, l(2.000000), l(3.000000)
  mul r8.y, r8.y, r8.z
  mad r7.w, r7.w, r8.x, r8.y
  add r7.z, r7.z, l(-0.040000)
  mul_sat r7.z, r7.z, l(-33.333336)
  mul r8.x, r7.z, r7.z
  mad r7.z, -r7.z, l(2.000000), l(3.000000)
  mul r7.z, r7.z, r8.x
  mul r7.z, r7.w, r7.z
  mad r0.w, r0.w, r5.z, r7.z
  add r7.zw, r4.zzzw, -r7.xxxy
  dp2 r5.z, r7.zwzz, r7.zwzz
  sqrt r8.x, r5.z
  div r5.z, l(0.005000), r5.z
  add r8.x, r8.x, l(-1.000000)
  mul_sat r8.x, r8.x, l(-3.333333)
  mul r8.y, r8.x, r8.x
  mad r8.x, -r8.x, l(2.000000), l(3.000000)
  mul r8.x, r8.x, r8.y
  mul r5.z, r5.z, r8.x
  mov r8.x, x0[1].x
  mov r8.y, x0[1].y
  frc r8.xy, r8.xyxx
  add r8.x, r8.y, r8.x
  add r8.x, r8.x, cb7[6].x
  mul r8.x, r8.x, l(5.000000)
  sincos r8.x, null, r8.x
  mad r8.x, r8.x, l(0.400000), l(0.600000)
  log r8.x, r8.x
  mul r8.x, r8.x, l(20.000000)
  exp r8.x, r8.x
  mul r5.z, r5.z, r8.x
  mad r5.z, r6.x, r6.y, r5.z
  mov r6.xy, x0[2].xyxx
  add r8.xy, -r5.xyxx, r6.xyxx
  dp2 r8.z, r6.zwzz, r8.xyxx
  dp2 r8.w, r8.xyxx, r8.xyxx
  div_sat r8.z, r8.z, r8.w
  mad r8.xy, -r8.xyxx, r8.zzzz, r6.zwzz
  dp2 r8.x, r8.xyxx, r8.xyxx
  add r8.yz, r5.xxyx, -r6.xxyx
  dp2 r8.y, r8.yzyy, r8.yzyy
  sqrt r8.xy, r8.xyxx
  add r8.xyz, r8.xyyx, l(-0.040000, -1.500000, -0.750000, 0.000000)
  mov_sat r8.y, -r8.y
  mul r8.w, r8.y, r8.y
  mad r8.y, -r8.y, l(2.000000), l(3.000000)
  add r8.z, |r8.z|, l(-0.050000)
  mul_sat r8.xz, r8.xxzx, l(-33.333336, 0.000000, -33.333332, 0.000000)
  mul r9.x, r8.z, r8.z
  mad r8.z, -r8.z, l(2.000000), l(3.000000)
  mul r8.z, r8.z, r9.x
  mad r8.y, r8.w, r8.y, r8.z
  mul r8.z, r8.x, r8.x
  mad r8.x, -r8.x, l(2.000000), l(3.000000)
  mul r8.x, r8.x, r8.z
  mad r0.w, r8.x, r8.y, r0.w
  add r6.xy, r4.zwzz, -r6.xyxx
  dp2 r6.x, r6.xyxx, r6.xyxx
  sqrt r6.y, r6.x
  div r6.x, l(0.005000), r6.x
  add r6.y, r6.y, l(-1.000000)
  mul_sat r6.y, r6.y, l(-3.333333)
  mul r8.x, r6.y, r6.y
  mad r6.y, -r6.y, l(2.000000), l(3.000000)
  mul r6.y, r6.y, r8.x
  mul r6.x, r6.y, r6.x
  mov r6.y, x0[2].x
  frc r6.y, r6.y
  mov r8.x, x0[2].y
  frc r8.x, r8.x
  add r6.y, r6.y, r8.x
  add r6.y, r6.y, cb7[6].x
  mul r6.y, r6.y, l(5.000000)
  sincos r6.y, null, r6.y
  mad r6.y, r6.y, l(0.400000), l(0.600000)
  log r6.y, r6.y
  mul r6.y, r6.y, l(20.000000)
  exp r6.y, r6.y
  mad r5.z, r6.x, r6.y, r5.z
  mov r6.xy, x0[3].xyxx
  add r8.xy, -r5.xyxx, r6.xyxx
  dp2 r8.z, r6.zwzz, r8.xyxx
  dp2 r8.w, r8.xyxx, r8.xyxx
  div_sat r8.z, r8.z, r8.w
  mad r8.xy, -r8.xyxx, r8.zzzz, r6.zwzz
  dp2 r8.x, r8.xyxx, r8.xyxx
  add r8.yz, r5.xxyx, -r6.xxyx
  dp2 r8.y, r8.yzyy, r8.yzyy
  sqrt r8.xy, r8.xyxx
  add r8.xyz, r8.xyyx, l(-0.040000, -1.500000, -0.750000, 0.000000)
  mov_sat r8.y, -r8.y
  mul r8.w, r8.y, r8.y
  mad r8.y, -r8.y, l(2.000000), l(3.000000)
  add r8.z, |r8.z|, l(-0.050000)
  mul_sat r8.xz, r8.xxzx, l(-33.333336, 0.000000, -33.333332, 0.000000)
  mul r9.x, r8.z, r8.z
  mad r8.z, -r8.z, l(2.000000), l(3.000000)
  mul r8.z, r8.z, r9.x
  mad r8.y, r8.w, r8.y, r8.z
  mul r8.z, r8.x, r8.x
  mad r8.x, -r8.x, l(2.000000), l(3.000000)
  mul r8.x, r8.x, r8.z
  mad r0.w, r8.x, r8.y, r0.w
  add r8.xy, r4.zwzz, -r6.xyxx
  dp2 r8.x, r8.xyxx, r8.xyxx
  sqrt r8.y, r8.x
  div r8.x, l(0.005000), r8.x
  add r8.y, r8.y, l(-1.000000)
  mul_sat r8.y, r8.y, l(-3.333333)
  mul r8.z, r8.y, r8.y
  mad r8.y, -r8.y, l(2.000000), l(3.000000)
  mul r8.y, r8.y, r8.z
  mul r8.x, r8.y, r8.x
  mov r8.y, x0[3].x
  mov r8.z, x0[3].y
  frc r8.yz, r8.yyzy
  add r8.y, r8.z, r8.y
  add r8.y, r8.y, cb7[6].x
  mul r8.y, r8.y, l(5.000000)
  sincos r8.y, null, r8.y
  mad r8.y, r8.y, l(0.400000), l(0.600000)
  log r8.y, r8.y
  mul r8.y, r8.y, l(20.000000)
  exp r8.y, r8.y
  mad r5.z, r8.x, r8.y, r5.z
  dp2 r8.x, r6.zwzz, r6.zwzz
  sqrt r8.y, r8.x
  add r8.yz, r8.yyyy, l(0.000000, -0.040000, -1.000000, 0.000000)
  mul_sat r8.yz, r8.yyzy, l(0.000000, -33.333336, -3.333333, 0.000000)
  mul r9.xy, r8.yzyy, r8.yzyy
  mad r8.yz, -r8.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
  mul r8.z, r8.z, r9.y
  mad r0.w, r9.x, r8.y, r0.w
  div r8.x, l(0.005000), r8.x
  mul r8.x, r8.z, r8.x
  mov r8.y, x0[4].x
  mov r8.z, x0[4].y
  frc r8.yz, r8.yyzy
  add r8.y, r8.z, r8.y
  add r8.y, r8.y, cb7[6].x
  mul r8.y, r8.y, l(5.000000)
  sincos r8.y, null, r8.y
  mad r8.y, r8.y, l(0.400000), l(0.600000)
  log r8.y, r8.y
  mul r8.y, r8.y, l(20.000000)
  exp r8.y, r8.y
  mad r5.z, r8.x, r8.y, r5.z
  mov r8.xy, x0[5].xyxx
  add r8.zw, -r5.xxxy, r8.xxxy
  dp2 r9.x, r6.zwzz, r8.zwzz
  dp2 r9.y, r8.zwzz, r8.zwzz
  div_sat r9.x, r9.x, r9.y
  mad r8.zw, -r8.zzzw, r9.xxxx, r6.zzzw
  dp2 r8.z, r8.zwzz, r8.zwzz
  add r9.xy, r5.xyxx, -r8.xyxx
  dp2 r8.w, r9.xyxx, r9.xyxx
  sqrt r8.zw, r8.zzzw
  add r9.xy, r8.wwww, l(-1.500000, -0.750000, 0.000000, 0.000000)
  mov_sat r9.x, -r9.x
  mul r8.w, r9.x, r9.x
  mad r9.x, -r9.x, l(2.000000), l(3.000000)
  add r9.y, |r9.y|, l(-0.050000)
  mul_sat r9.y, r9.y, l(-33.333332)
  mul r9.z, r9.y, r9.y
  mad r9.y, -r9.y, l(2.000000), l(3.000000)
  mul r9.y, r9.y, r9.z
  mad r8.w, r8.w, r9.x, r9.y
  add r8.z, r8.z, l(-0.040000)
  mul_sat r8.z, r8.z, l(-33.333336)
  mul r9.x, r8.z, r8.z
  mad r8.z, -r8.z, l(2.000000), l(3.000000)
  mul r8.z, r8.z, r9.x
  mad r0.w, r8.z, r8.w, r0.w
  add r8.zw, r4.zzzw, -r8.xxxy
  dp2 r8.z, r8.zwzz, r8.zwzz
  sqrt r8.w, r8.z
  div r8.z, l(0.005000), r8.z
  add r8.w, r8.w, l(-1.000000)
  mul_sat r8.w, r8.w, l(-3.333333)
  mul r9.x, r8.w, r8.w
  mad r8.w, -r8.w, l(2.000000), l(3.000000)
  mul r8.w, r8.w, r9.x
  mul r8.z, r8.w, r8.z
  mov r8.w, x0[5].x
  frc r8.w, r8.w
  mov r9.x, x0[5].y
  frc r9.x, r9.x
  add r8.w, r8.w, r9.x
  add r8.w, r8.w, cb7[6].x
  mul r8.w, r8.w, l(5.000000)
  sincos r8.w, null, r8.w
  mad r8.w, r8.w, l(0.400000), l(0.600000)
  log r8.w, r8.w
  mul r8.w, r8.w, l(20.000000)
  exp r8.w, r8.w
  mad r5.z, r8.z, r8.w, r5.z
  mov r8.zw, x0[6].xxxy
  add r9.xy, -r5.xyxx, r8.zwzz
  dp2 r9.z, r6.zwzz, r9.xyxx
  dp2 r9.w, r9.xyxx, r9.xyxx
  div_sat r9.z, r9.z, r9.w
  mad r9.xy, -r9.xyxx, r9.zzzz, r6.zwzz
  dp2 r9.x, r9.xyxx, r9.xyxx
  add r9.yz, r5.xxyx, -r8.zzwz
  dp2 r9.y, r9.yzyy, r9.yzyy
  sqrt r9.xy, r9.xyxx
  add r9.xyz, r9.xyyx, l(-0.040000, -1.500000, -0.750000, 0.000000)
  mov_sat r9.y, -r9.y
  mul r9.w, r9.y, r9.y
  mad r9.y, -r9.y, l(2.000000), l(3.000000)
  add r9.z, |r9.z|, l(-0.050000)
  mul_sat r9.xz, r9.xxzx, l(-33.333336, 0.000000, -33.333332, 0.000000)
  mul r10.x, r9.z, r9.z
  mad r9.z, -r9.z, l(2.000000), l(3.000000)
  mul r9.z, r9.z, r10.x
  mad r9.y, r9.w, r9.y, r9.z
  mul r9.z, r9.x, r9.x
  mad r9.x, -r9.x, l(2.000000), l(3.000000)
  mul r9.x, r9.x, r9.z
  mad r0.w, r9.x, r9.y, r0.w
  add r8.zw, r4.zzzw, -r8.zzzw
  dp2 r8.z, r8.zwzz, r8.zwzz
  sqrt r8.w, r8.z
  div r8.z, l(0.005000), r8.z
  add r8.w, r8.w, l(-1.000000)
  mul_sat r8.w, r8.w, l(-3.333333)
  mul r9.x, r8.w, r8.w
  mad r8.w, -r8.w, l(2.000000), l(3.000000)
  mul r8.w, r8.w, r9.x
  mul r8.z, r8.w, r8.z
  mov r8.w, x0[6].x
  frc r8.w, r8.w
  mov r9.x, x0[6].y
  frc r9.x, r9.x
  add r8.w, r8.w, r9.x
  add r8.w, r8.w, cb7[6].x
  mul r8.w, r8.w, l(5.000000)
  sincos r8.w, null, r8.w
  mad r8.w, r8.w, l(0.400000), l(0.600000)
  log r8.w, r8.w
  mul r8.w, r8.w, l(20.000000)
  exp r8.w, r8.w
  mad r5.z, r8.z, r8.w, r5.z
  mov r8.zw, x0[7].xxxy
  add r9.xy, -r5.xyxx, r8.zwzz
  dp2 r9.z, r6.zwzz, r9.xyxx
  dp2 r9.w, r9.xyxx, r9.xyxx
  div_sat r9.z, r9.z, r9.w
  mad r9.xy, -r9.xyxx, r9.zzzz, r6.zwzz
  dp2 r9.x, r9.xyxx, r9.xyxx
  add r9.yz, r5.xxyx, -r8.zzwz
  dp2 r9.y, r9.yzyy, r9.yzyy
  sqrt r9.xy, r9.xyxx
  add r9.xyz, r9.xyyx, l(-0.040000, -1.500000, -0.750000, 0.000000)
  mov_sat r9.y, -r9.y
  mul r9.w, r9.y, r9.y
  mad r9.y, -r9.y, l(2.000000), l(3.000000)
  add r9.z, |r9.z|, l(-0.050000)
  mul_sat r9.xz, r9.xxzx, l(-33.333336, 0.000000, -33.333332, 0.000000)
  mul r10.x, r9.z, r9.z
  mad r9.z, -r9.z, l(2.000000), l(3.000000)
  mul r9.z, r9.z, r10.x
  mad r9.y, r9.w, r9.y, r9.z
  mul r9.z, r9.x, r9.x
  mad r9.x, -r9.x, l(2.000000), l(3.000000)
  mul r9.x, r9.x, r9.z
  mad r0.w, r9.x, r9.y, r0.w
  add r9.xy, r4.zwzz, -r8.zwzz
  dp2 r9.z, r9.xyxx, r9.xyxx
  sqrt r9.w, r9.z
  div r9.z, l(0.005000), r9.z
  add r9.w, r9.w, l(-1.000000)
  mul_sat r9.w, r9.w, l(-3.333333)
  mul r10.x, r9.w, r9.w
  mad r9.w, -r9.w, l(2.000000), l(3.000000)
  mul r9.w, r9.w, r10.x
  mul r9.z, r9.w, r9.z
  mov r9.w, x0[7].x
  frc r9.w, r9.w
  mov r10.x, x0[7].y
  frc r10.x, r10.x
  add r9.w, r9.w, r10.x
  add r9.w, r9.w, cb7[6].x
  mul r9.w, r9.w, l(5.000000)
  sincos r9.w, null, r9.w
  mad r9.w, r9.w, l(0.400000), l(0.600000)
  log r9.w, r9.w
  mul r9.w, r9.w, l(20.000000)
  exp r9.w, r9.w
  mad r5.z, r9.z, r9.w, r5.z
  mov r9.zw, x0[8].xxxy
  add r10.xy, -r5.xyxx, r9.zwzz
  dp2 r10.z, r6.zwzz, r10.xyxx
  dp2 r10.w, r10.xyxx, r10.xyxx
  div_sat r10.z, r10.z, r10.w
  mad r6.zw, -r10.xxxy, r10.zzzz, r6.zzzw
  dp2 r6.z, r6.zwzz, r6.zwzz
  sqrt r6.z, r6.z
  add r5.xy, r5.xyxx, -r9.zwzz
  dp2 r5.x, r5.xyxx, r5.xyxx
  sqrt r5.x, r5.x
  add r5.xy, r5.xxxx, l(-1.500000, -0.750000, 0.000000, 0.000000)
  mov_sat r5.x, -r5.x
  mul r6.w, r5.x, r5.x
  mad r5.x, -r5.x, l(2.000000), l(3.000000)
  add r5.y, |r5.y|, l(-0.050000)
  mul_sat r5.y, r5.y, l(-33.333332)
  mul r10.x, r5.y, r5.y
  mad r5.y, -r5.y, l(2.000000), l(3.000000)
  mul r5.y, r5.y, r10.x
  mad r5.x, r6.w, r5.x, r5.y
  add r5.y, r6.z, l(-0.040000)
  mul_sat r5.y, r5.y, l(-33.333336)
  mul r6.z, r5.y, r5.y
  mad r5.y, -r5.y, l(2.000000), l(3.000000)
  mul r5.y, r5.y, r6.z
  mad r0.w, r5.y, r5.x, r0.w
  add r4.zw, r4.zzzw, -r9.zzzw
  dp2 r4.z, r4.zwzz, r4.zwzz
  sqrt r4.w, r4.z
  div r4.z, l(0.005000), r4.z
  add r4.w, r4.w, l(-1.000000)
  mul_sat r4.w, r4.w, l(-3.333333)
  mul r5.x, r4.w, r4.w
  mad r4.w, -r4.w, l(2.000000), l(3.000000)
  mul r4.w, r4.w, r5.x
  mul r4.z, r4.w, r4.z
  mov r4.w, x0[8].x
  frc r4.w, r4.w
  mov r5.x, x0[8].y
  frc r5.x, r5.x
  add r4.w, r4.w, r5.x
  add r4.w, r4.w, cb7[6].x
  mul r4.w, r4.w, l(5.000000)
  sincos r4.w, null, r4.w
  mad r4.w, r4.w, l(0.400000), l(0.600000)
  log r4.w, r4.w
  mul r4.w, r4.w, l(20.000000)
  exp r4.w, r4.w
  mad r4.z, r4.z, r4.w, r5.z
  add r5.xy, -r7.xyxx, r6.xyxx
  dp2 r4.w, r7.zwzz, r5.xyxx
  dp2 r5.z, r5.xyxx, r5.xyxx
  div_sat r4.w, r4.w, r5.z
  mad r5.xy, -r5.xyxx, r4.wwww, r7.zwzz
  dp2 r4.w, r5.xyxx, r5.xyxx
  sqrt r4.w, r4.w
  add r5.xy, -r6.xyxx, r7.xyxx
  dp2 r5.x, r5.xyxx, r5.xyxx
  sqrt r5.x, r5.x
  add r5.xy, r5.xxxx, l(-1.500000, -0.750000, 0.000000, 0.000000)
  mov_sat r5.x, -r5.x
  mul r5.z, r5.x, r5.x
  mad r5.x, -r5.x, l(2.000000), l(3.000000)
  add r5.y, |r5.y|, l(-0.050000)
  mul_sat r5.y, r5.y, l(-33.333332)
  mul r6.z, r5.y, r5.y
  mad r5.y, -r5.y, l(2.000000), l(3.000000)
  mul r5.y, r5.y, r6.z
  mad r5.x, r5.z, r5.x, r5.y
  add r4.w, r4.w, l(-0.040000)
  mul_sat r4.w, r4.w, l(-33.333336)
  mul r5.y, r4.w, r4.w
  mad r4.w, -r4.w, l(2.000000), l(3.000000)
  mul r4.w, r4.w, r5.y
  mad r0.w, r4.w, r5.x, r0.w
  add r5.xy, -r7.xyxx, r8.xyxx
  dp2 r4.w, r7.zwzz, r5.xyxx
  dp2 r5.z, r5.xyxx, r5.xyxx
  div_sat r4.w, r4.w, r5.z
  mad r5.xy, -r5.xyxx, r4.wwww, r7.zwzz
  dp2 r4.w, r5.xyxx, r5.xyxx
  sqrt r4.w, r4.w
  add r5.xy, r7.xyxx, -r8.xyxx
  dp2 r5.x, r5.xyxx, r5.xyxx
  sqrt r5.x, r5.x
  add r5.xy, r5.xxxx, l(-1.500000, -0.750000, 0.000000, 0.000000)
  mov_sat r5.x, -r5.x
  mul r5.z, r5.x, r5.x
  mad r5.x, -r5.x, l(2.000000), l(3.000000)
  add r5.y, |r5.y|, l(-0.050000)
  mul_sat r5.y, r5.y, l(-33.333332)
  mul r6.z, r5.y, r5.y
  mad r5.y, -r5.y, l(2.000000), l(3.000000)
  mul r5.y, r5.y, r6.z
  mad r5.x, r5.z, r5.x, r5.y
  add r4.w, r4.w, l(-0.040000)
  mul_sat r4.w, r4.w, l(-33.333336)
  mul r5.y, r4.w, r4.w
  mad r4.w, -r4.w, l(2.000000), l(3.000000)
  mul r4.w, r4.w, r5.y
  mad r0.w, r4.w, r5.x, r0.w
  add r5.xy, -r8.zwzz, r8.xyxx
  dp2 r4.w, r9.xyxx, r5.xyxx
  dp2 r5.z, r5.xyxx, r5.xyxx
  div_sat r4.w, r4.w, r5.z
  mad r5.xy, -r5.xyxx, r4.wwww, r9.xyxx
  dp2 r4.w, r5.xyxx, r5.xyxx
  sqrt r4.w, r4.w
  add r5.xy, -r8.xyxx, r8.zwzz
  dp2 r5.x, r5.xyxx, r5.xyxx
  sqrt r5.x, r5.x
  add r5.xy, r5.xxxx, l(-1.500000, -0.750000, 0.000000, 0.000000)
  mov_sat r5.x, -r5.x
  mul r5.z, r5.x, r5.x
  mad r5.x, -r5.x, l(2.000000), l(3.000000)
  add r5.y, |r5.y|, l(-0.050000)
  mul_sat r5.y, r5.y, l(-33.333332)
  mul r6.z, r5.y, r5.y
  mad r5.y, -r5.y, l(2.000000), l(3.000000)
  mul r5.y, r5.y, r6.z
  mad r5.x, r5.z, r5.x, r5.y
  add r4.w, r4.w, l(-0.040000)
  mul_sat r4.w, r4.w, l(-33.333336)
  mul r5.y, r4.w, r4.w
  mad r4.w, -r4.w, l(2.000000), l(3.000000)
  mul r4.w, r4.w, r5.y
  mad r0.w, r4.w, r5.x, r0.w
  add r5.xy, r6.xyxx, -r8.zwzz
  dp2 r4.w, r9.xyxx, r5.xyxx
  dp2 r5.z, r5.xyxx, r5.xyxx
  div_sat r4.w, r4.w, r5.z
  mad r5.xy, -r5.xyxx, r4.wwww, r9.xyxx
  dp2 r4.w, r5.xyxx, r5.xyxx
  sqrt r4.w, r4.w
  add r5.xy, -r6.xyxx, r8.zwzz
  dp2 r5.x, r5.xyxx, r5.xyxx
  sqrt r5.x, r5.x
  add r5.xy, r5.xxxx, l(-1.500000, -0.750000, 0.000000, 0.000000)
  mov_sat r5.x, -r5.x
  mul r5.z, r5.x, r5.x
  mad r5.x, -r5.x, l(2.000000), l(3.000000)
  add r5.y, |r5.y|, l(-0.050000)
  mul_sat r5.y, r5.y, l(-33.333332)
  mul r6.x, r5.y, r5.y
  mad r5.y, -r5.y, l(2.000000), l(3.000000)
  mul r5.y, r5.y, r6.x
  mad r5.x, r5.z, r5.x, r5.y
  add r4.w, r4.w, l(-0.040000)
  mul_sat r4.w, r4.w, l(-33.333336)
  mul r5.y, r4.w, r4.w
  mad r4.w, -r4.w, l(2.000000), l(3.000000)
  mul r4.w, r4.w, r5.y
  mad r0.w, r4.w, r5.x, r0.w
  add r4.w, r2.w, cb7[6].x
  sincos r4.w, null, r4.w
  add r4.w, r1.x, r4.w
  mad r4.w, r4.w, l(0.250000), r0.z
  add r4.w, r4.w, l(0.500000)
  mad r0.w, r4.z, r4.w, r0.w
  mad r2.z, r3.w, r0.w, r2.z
  add r2.w, r2.w, l(0.250000)
endloop 
add r0.z, cb7[6].x, cb7[6].x
sincos r0.z, null, r0.z
mad r0.z, r0.z, l(0.500000), l(0.500000)
dp2 r0.z, -r0.yyyy, r0.zzzz
sincos null, r3.y, r1.y
sincos r3.z, null, -r1.z
mad r1.xyz, r3.xyzx, l(0.400000, 0.400000, 0.400000, 0.000000), l(0.600000, 0.600000, 0.600000, 0.000000)
mul r2.xyw, r0.zzzz, r1.xyxz
mad r1.xyz, r1.xyzx, r2.zzzz, r2.xywx
dp2 r0.x, r0.xyxx, r0.xyxx
add r0.x, -r0.x, l(1.000000)
mul r0.xyz, r0.xxxx, r1.xyzx
ge r0.w, r1.w, -r1.w
frc r1.x, |r1.w|
movc r0.w, r0.w, r1.x, -r1.x
mul r1.x, r0.w, l(11.500000)
mov_sat r1.x, r1.x
mul r1.y, r1.x, r1.x
mad r1.x, -r1.x, l(2.000000), l(3.000000)
mul r1.x, r1.x, r1.y
mad r0.w, r0.w, l(230.000000), l(-224.000000)
mul_sat r0.w, r0.w, l(-0.041667)
mul r1.y, r0.w, r0.w
mad r0.w, -r0.w, l(2.000000), l(3.000000)
mul r0.w, r0.w, r1.y
mul r0.w, r0.w, r1.x
mul o0.xyz, r0.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 628 instruction slots used
