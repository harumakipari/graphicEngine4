//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SHADERTOY_CONSTANTS
// {
//
//   float4 iResolution;                // Offset:    0 Size:    16
//   float4 iMouse;                     // Offset:   16 Size:    16
//   float4 iChannelResolution[4];      // Offset:   32 Size:    64 [unused]
//   float iTime;                       // Offset:   96 Size:     4
//   float iFrame;                      // Offset:  100 Size:     4 [unused]
//   float iPad0;                       // Offset:  104 Size:     4 [unused]
//   float iPad1;                       // Offset:  108 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SHADERTOY_CONSTANTS               cbuffer      NA          NA            cb7      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB7[7], immediateIndexed
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 10
dcl_indexableTemp x0[9], 4
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 190 "C:\Users\2240225\Desktop\graphicEngine4\Shader\ShaderToySky2.hlsl"
mov r0.xy, v0.xyxx  // r0.x <- fragCoord.x; r0.y <- fragCoord.y

#line 191
nop 
mov r0.xy, r0.xyxx

#line 149
mul r0.zw, cb7[0].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mov r0.zw, -r0.zzzw
add r0.xy, r0.zwzz, r0.xyxx
div r0.xy, r0.xyxx, cb7[0].yyyy  // r0.x <- uv.x; r0.y <- uv.y

#line 150
div r0.zw, cb7[1].xxxy, cb7[0].xxxy
mov r1.xy, l(-0.500000,-0.500000,-0.000000,-0.000000)
add r0.zw, r0.zzzw, r1.xxxy  // r0.z <- M.x; r0.w <- M.y

#line 152
mul r1.x, cb7[6].x, l(0.100000)  // r1.x <- t

#line 153
sincos r2.z, null, r1.x  // r2.z <- s

#line 154
sincos null, r2.xw, r1.xxxx  // r2.w <- c

#line 155
mov r2.y, -r2.z  // r2.y <- rot._m01
mov r2.xw, r2.xxxw  // r2.x <- rot._m00; r2.w <- rot._m11
mov r2.z, r2.z  // r2.z <- rot._m10

#line 157
dp2 r3.x, r0.xyxx, r2.xzxx  // r3.x <- st.x
dp2 r3.y, r0.xyxx, r2.ywyy  // r3.y <- st.y

#line 158
mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
dp2 r4.x, r0.zwzz, r2.xzxx  // r4.x <- M.x
dp2 r4.y, r0.zwzz, r2.ywyy  // r4.y <- M.y

#line 160
mov r0.z, l(0)  // r0.z <- m

#line 161
mov r0.w, l(0)  // r0.w <- i
mov r1.z, r0.z  // r1.z <- m
mov r1.y, r0.w  // r1.y <- i
loop   // r2.x <- c
  lt r1.w, r1.y, l(1.000000)
  breakc_z r1.w

#line 163
  add r1.w, r1.y, r1.x
  frc r1.w, r1.w  // r1.w <- z

#line 164
  mov r2.w, l(-15.000000)
  add r2.w, r2.w, l(1.000000)
  mul r2.w, r1.w, r2.w
  add r2.w, r2.w, l(15.000000)  // r2.w <- size

#line 165
  nop 
  mov r3.z, l(0)
  mov r3.w, l(0.600000)
  mov r1.w, r1.w

#line 59
  mov r4.z, -r3.z
  add r4.z, r1.w, r4.z
  mov r3.z, -r3.z
  add r3.z, r3.z, r3.w
  div r3.z, r4.z, r3.z
  max r3.z, r3.z, l(0.000000)
  min r3.z, r3.z, l(1.000000)  // r3.z <- t

#line 60
  mul r3.w, r3.z, r3.z
  mul r3.z, r3.z, l(2.000000)
  mov r3.z, -r3.z
  add r3.z, r3.z, l(3.000000)
  mul r3.z, r3.z, r3.w  // r3.z <- <S return value>

#line 165
  nop 
  mov r3.w, l(1.000000)
  mov r4.z, l(0.800000)

#line 59
  mov r4.w, -r3.w
  add r4.w, r1.w, r4.w
  mov r3.w, -r3.w
  add r3.w, r3.w, r4.z
  div r3.w, r4.w, r3.w
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)  // r3.w <- t

#line 60
  mul r4.z, r3.w, r3.w
  mul r3.w, r3.w, l(2.000000)
  mov r3.w, -r3.w
  add r3.w, r3.w, l(3.000000)
  mul r3.w, r3.w, r4.z  // r3.w <- <S return value>

#line 165
  mul r3.z, r3.w, r3.z  // r3.z <- fade

#line 166
  nop 
  mul r4.zw, r2.wwww, r3.xxxy
  mul r5.xy, r1.wwww, r4.xyxx
  mov r5.xy, -r5.xyxx
  add r4.zw, r4.zzzw, r5.xxxy
  mov r1.y, r1.y
  mov r1.w, cb7[6].x

#line 101
  round_ni r5.xyz, r4.zwzz
  add r5.xyz, r1.yyyy, r5.xyzx  // r5.y <- id.y; r5.z <- id.x

#line 102
  frc r4.zw, r4.zzzw
  mov r6.xy, l(-0.500000,-0.500000,-0.000000,-0.000000)
  add r4.zw, r4.zzzw, r6.xxxy  // r4.z <- st.x; r4.w <- st.y

#line 105
  mov r2.w, l(0)  // r2.w <- i

#line 106
  mov r3.w, l(-1.000000)  // r3.w <- y
  mov r5.w, r2.w  // r5.w <- i
  mov r6.x, r3.w  // r6.x <- y
  loop 
    ge r6.y, l(1.000000), r6.x
    breakc_z r6.y

#line 108
    mov r6.y, l(-1.000000)  // r6.y <- x
    mov r6.z, r5.w  // r6.z <- i
    mov r7.x, r6.y  // r7.x <- x
    loop 
      ge r6.w, l(1.000000), r7.x
      breakc_z r6.w

#line 110
      iadd r6.w, r6.z, l(1)  // r6.w <- i
      nop 
      mov r8.xyz, r5.xyzx
      mov r7.x, r7.x
      mov r7.y, r6.x
      mov r7.z, r1.w

#line 72
      nop 
      add r8.xyz, r7.xyxx, r8.xyzx

#line 65
      mul r8.xyz, r8.xyzx, l(213.897003, 653.453003, 253.098007, 0.000000)
      frc r8.xyz, r8.xyzx  // r8.x <- a.x; r8.y <- a.y; r8.z <- a.z

#line 66
      add r9.xyz, r8.yzxy, l(79.760002, 79.760002, 79.760002, 0.000000)
      dp3 r7.w, r8.xyzx, r9.xyzx
      add r8.xyz, r7.wwww, r8.xyzx

#line 67
      add r7.w, r8.y, r8.x
      mul r7.w, r8.z, r7.w
      frc r7.w, r7.w  // r7.w <- <N21 return value>

#line 72
      mov r7.w, r7.w  // r7.w <- n

#line 73
      mul r8.x, r7.w, l(10.000000)
      frc r8.x, r8.x  // r8.x <- n1

#line 74
      mul r8.y, r7.w, l(100.000000)
      frc r8.y, r8.y  // r8.y <- n2

#line 75
      add r7.z, r7.w, r7.z  // r7.z <- a

#line 76
      mul r7.w, r8.x, r7.z
      sincos r9.x, null, r7.w
      mul r7.z, r8.y, r7.z
      sincos null, r9.y, r7.z
      mul r7.zw, r9.xxxy, l(0.000000, 0.000000, 0.400000, 0.400000)
      add r7.yz, r7.zzwz, r7.xxyx  // r7.y <- <GetPos return value>.x; r7.z <- <GetPos return value>.y

#line 110
      mov x0[r6.z + 0].xy, r7.yzyy

#line 111
      add r7.x, r7.x, l(1.000000)
      mov r6.z, r6.w  // r6.z <- i
    endloop 
    mov r5.w, r6.z  // r5.w <- i

#line 112
    add r6.x, r6.x, l(1.000000)
  endloop 

#line 114
  mov r2.w, l(0)  // r2.w <- m

#line 115
  mov r3.w, l(0)  // r3.w <- sparkle

#line 117
  mov r5.x, l(0)  // r5.x <- i
  mov r5.y, r5.x  // r5.y <- i
  mov r5.z, r2.w  // r5.z <- m
  mov r5.w, r3.w  // r5.w <- sparkle
  loop 
    ilt r6.x, r5.y, l(9)
    breakc_z r6.x

#line 119
    nop 
    mov r6.xy, x0[4].xyxx
    mov r6.xy, r6.xyxx
    mov r7.xy, x0[r5.y + 0].xyxx
    mov r7.xy, r7.xyxx
    mov r7.zw, r4.zzzw

#line 89
    mov r6.w, l(0.040000)  // r6.w <- r1

#line 90
    mov r8.x, l(0.010000)  // r8.x <- r2

#line 92
    nop 
    mov r6.xy, r6.xyxx
    mov r7.xy, r7.xyxx
    mov r7.zw, r7.zzzw

#line 81
    mov r8.yz, -r6.xxyx
    add r7.zw, r7.zzzw, r8.yyyz  // r7.z <- pa.x; r7.w <- pa.y

#line 82
    mov r8.yz, -r6.xxyx
    add r8.yz, r7.xxyx, r8.yyzy  // r8.y <- ba.x; r8.z <- ba.y

#line 83
    dp2 r8.w, r7.zwzz, r8.yzyy
    dp2 r9.x, r8.yzyy, r8.yzyy
    div r8.w, r8.w, r9.x
    max r8.w, r8.w, l(0.000000)
    min r8.w, r8.w, l(1.000000)  // r8.w <- h

#line 84
    mul r8.yz, r8.wwww, r8.yyzy
    mov r8.yz, -r8.yyzy
    add r7.zw, r7.zzzw, r8.yyyz
    dp2 r7.z, r7.zwzz, r7.zwzz
    sqrt r7.z, r7.z  // r7.z <- <df_line return value>

#line 92
    mov r7.z, r7.z  // r7.z <- d

#line 93
    mov r7.xy, -r7.xyxx
    add r6.xy, r6.xyxx, r7.xyxx
    dp2 r6.x, r6.xyxx, r6.xyxx
    sqrt r6.x, r6.x  // r6.x <- d2

#line 94
    nop 
    mov r6.y, l(1.500000)
    mov r7.x, l(0.500000)
    mov r6.x, r6.x

#line 59
    mov r7.y, -r6.y
    add r7.y, r6.x, r7.y
    mov r6.y, -r6.y
    add r6.y, r6.y, r7.x
    div r6.y, r7.y, r6.y
    max r6.y, r6.y, l(0.000000)
    min r6.y, r6.y, l(1.000000)  // r6.y <- t

#line 60
    mul r7.x, r6.y, r6.y
    mul r6.y, r6.y, l(2.000000)
    mov r6.y, -r6.y
    add r6.y, r6.y, l(3.000000)
    mul r6.y, r6.y, r7.x  // r6.y <- <S return value>

#line 94
    mov r6.y, r6.y  // r6.y <- fade

#line 95
    nop 
    mov r7.x, l(0.050000)
    mov r7.y, l(0.020000)
    mov r7.w, l(-0.750000)
    add r6.x, r6.x, r7.w
    mov r7.w, -r6.x
    max r6.x, r6.x, r7.w

#line 59
    mov r7.w, -r7.x
    add r6.x, r6.x, r7.w
    mov r7.x, -r7.x
    add r7.x, r7.x, r7.y
    div r6.x, r6.x, r7.x
    max r6.x, r6.x, l(0.000000)
    min r6.x, r6.x, l(1.000000)  // r6.x <- t

#line 60
    mul r7.x, r6.x, r6.x
    mul r6.x, r6.x, l(2.000000)
    mov r6.x, -r6.x
    add r6.x, r6.x, l(3.000000)
    mul r6.x, r6.x, r7.x  // r6.x <- <S return value>

#line 95
    add r6.x, r6.x, r6.y  // r6.x <- fade

#line 96
    nop 
    mov r6.w, r6.w
    mov r8.x, r8.x
    mov r7.z, r7.z

#line 59
    mov r6.y, -r6.w
    add r6.y, r6.y, r7.z
    mov r6.w, -r6.w
    add r6.w, r6.w, r8.x
    div r6.y, r6.y, r6.w
    max r6.y, r6.y, l(0.000000)
    min r6.y, r6.y, l(1.000000)  // r6.y <- t

#line 60
    mul r6.w, r6.y, r6.y
    mul r6.y, r6.y, l(2.000000)
    mov r6.y, -r6.y
    add r6.y, r6.y, l(3.000000)
    mul r6.y, r6.y, r6.w  // r6.y <- <S return value>

#line 96
    mul r6.x, r6.x, r6.y  // r6.x <- <lineShape return value>

#line 119
    add r5.z, r5.z, r6.x

#line 121
    mov r6.xy, x0[r5.y + 0].xyxx
    mov r6.xy, -r6.xyxx
    add r6.xy, r4.zwzz, r6.xyxx
    dp2 r6.x, r6.xyxx, r6.xyxx
    sqrt r6.x, r6.x  // r6.x <- d

#line 122
    mul r6.y, r6.x, r6.x
    div r6.y, l(0.005000), r6.y  // r6.y <- s

#line 123
    nop 
    mov r6.w, l(1.000000)
    mov r7.x, l(0.700000)
    mov r6.x, r6.x

#line 59
    mov r7.y, -r6.w
    add r6.x, r6.x, r7.y
    mov r6.w, -r6.w
    add r6.w, r6.w, r7.x
    div r6.x, r6.x, r6.w
    max r6.x, r6.x, l(0.000000)
    min r6.x, r6.x, l(1.000000)  // r6.x <- t

#line 60
    mul r6.w, r6.x, r6.x
    mul r6.x, r6.x, l(2.000000)
    mov r6.x, -r6.x
    add r6.x, r6.x, l(3.000000)
    mul r6.x, r6.x, r6.w  // r6.x <- <S return value>

#line 123
    mul r6.x, r6.x, r6.y  // r6.x <- s

#line 125
    mov r6.y, x0[r5.y + 0].x
    frc r6.y, r6.y
    mov r6.w, x0[r5.y + 0].y
    frc r6.w, r6.w
    add r6.y, r6.w, r6.y
    add r6.y, r1.w, r6.y
    mul r6.y, r6.y, l(5.000000)
    sincos r6.y, null, r6.y
    mul r6.y, r6.y, l(0.400000)
    add r6.y, r6.y, l(0.600000)  // r6.y <- pulse

#line 126
    log r6.y, r6.y
    mul r6.y, r6.y, l(20.000000)
    exp r6.y, r6.y  // r6.y <- pulse

#line 128
    mul r6.x, r6.y, r6.x

#line 129
    add r5.w, r5.w, r6.x

#line 130
    iadd r5.y, r5.y, l(1)
  endloop 

#line 132
  nop 
  mov r5.xy, x0[1].xyxx
  mov r6.xy, x0[3].xyxx
  mov r4.zw, r4.zzzw

#line 89
  mov r2.w, l(0.040000)  // r2.w <- r1

#line 90
  mov r3.w, l(0.010000)  // r3.w <- r2

#line 92
  nop 
  mov r5.xy, r5.xyxx
  mov r6.xy, r6.xyxx
  mov r4.zw, r4.zzzw

#line 81
  mov r7.xy, -r5.xyxx
  add r7.xy, r4.zwzz, r7.xyxx  // r7.x <- pa.x; r7.y <- pa.y

#line 82
  mov r7.zw, -r5.xxxy
  add r7.zw, r6.xxxy, r7.zzzw  // r7.z <- ba.x; r7.w <- ba.y

#line 83
  dp2 r6.w, r7.xyxx, r7.zwzz
  dp2 r8.x, r7.zwzz, r7.zwzz
  div r6.w, r6.w, r8.x
  max r6.w, r6.w, l(0.000000)
  min r6.w, r6.w, l(1.000000)  // r6.w <- h

#line 84
  mul r7.zw, r6.wwww, r7.zzzw
  mov r7.zw, -r7.zzzw
  add r7.xy, r7.zwzz, r7.xyxx
  dp2 r6.w, r7.xyxx, r7.xyxx
  sqrt r6.w, r6.w  // r6.w <- <df_line return value>

#line 92
  mov r6.w, r6.w  // r6.w <- d

#line 93
  mov r6.xy, -r6.xyxx
  add r5.xy, r5.xyxx, r6.xyxx
  dp2 r5.x, r5.xyxx, r5.xyxx
  sqrt r5.x, r5.x  // r5.x <- d2

#line 94
  nop 
  mov r5.y, l(1.500000)
  mov r6.x, l(0.500000)
  mov r5.x, r5.x

#line 59
  mov r6.y, -r5.y
  add r6.y, r5.x, r6.y
  mov r5.y, -r5.y
  add r5.y, r5.y, r6.x
  div r5.y, r6.y, r5.y
  max r5.y, r5.y, l(0.000000)
  min r5.y, r5.y, l(1.000000)  // r5.y <- t

#line 60
  mul r6.x, r5.y, r5.y
  mul r5.y, r5.y, l(2.000000)
  mov r5.y, -r5.y
  add r5.y, r5.y, l(3.000000)
  mul r5.y, r5.y, r6.x  // r5.y <- <S return value>

#line 94
  mov r5.y, r5.y  // r5.y <- fade

#line 95
  nop 
  mov r6.x, l(0.050000)
  mov r6.y, l(0.020000)
  mov r7.x, l(-0.750000)
  add r5.x, r5.x, r7.x
  mov r7.x, -r5.x
  max r5.x, r5.x, r7.x

#line 59
  mov r7.x, -r6.x
  add r5.x, r5.x, r7.x
  mov r6.x, -r6.x
  add r6.x, r6.x, r6.y
  div r5.x, r5.x, r6.x
  max r5.x, r5.x, l(0.000000)
  min r5.x, r5.x, l(1.000000)  // r5.x <- t

#line 60
  mul r6.x, r5.x, r5.x
  mul r5.x, r5.x, l(2.000000)
  mov r5.x, -r5.x
  add r5.x, r5.x, l(3.000000)
  mul r5.x, r5.x, r6.x  // r5.x <- <S return value>

#line 95
  add r5.x, r5.x, r5.y  // r5.x <- fade

#line 96
  nop 
  mov r2.w, r2.w
  mov r3.w, r3.w
  mov r6.w, r6.w

#line 59
  mov r5.y, -r2.w
  add r5.y, r5.y, r6.w
  mov r2.w, -r2.w
  add r2.w, r2.w, r3.w
  div r2.w, r5.y, r2.w
  max r2.w, r2.w, l(0.000000)
  min r2.w, r2.w, l(1.000000)  // r2.w <- t

#line 60
  mul r3.w, r2.w, r2.w
  mul r2.w, r2.w, l(2.000000)
  mov r2.w, -r2.w
  add r2.w, r2.w, l(3.000000)
  mul r2.w, r2.w, r3.w  // r2.w <- <S return value>

#line 96
  mul r2.w, r5.x, r2.w  // r2.w <- <lineShape return value>

#line 132
  add r2.w, r2.w, r5.z  // r2.w <- m

#line 133
  nop 
  mov r5.xy, x0[1].xyxx
  mov r6.xy, x0[5].xyxx
  mov r7.xy, r4.zwzz

#line 89
  mov r3.w, l(0.040000)  // r3.w <- r1

#line 90
  mov r6.w, l(0.010000)  // r6.w <- r2

#line 92
  nop 
  mov r5.xy, r5.xyxx
  mov r6.xy, r6.xyxx
  mov r7.xy, r7.xyxx

#line 81
  mov r7.zw, -r5.xxxy
  add r7.xy, r7.zwzz, r7.xyxx  // r7.x <- pa.x; r7.y <- pa.y

#line 82
  mov r7.zw, -r5.xxxy
  add r7.zw, r6.xxxy, r7.zzzw  // r7.z <- ba.x; r7.w <- ba.y

#line 83
  dp2 r8.x, r7.xyxx, r7.zwzz
  dp2 r8.y, r7.zwzz, r7.zwzz
  div r8.x, r8.x, r8.y
  max r8.x, r8.x, l(0.000000)
  min r8.x, r8.x, l(1.000000)  // r8.x <- h

#line 84
  mul r7.zw, r7.zzzw, r8.xxxx
  mov r7.zw, -r7.zzzw
  add r7.xy, r7.zwzz, r7.xyxx
  dp2 r7.x, r7.xyxx, r7.xyxx
  sqrt r7.x, r7.x  // r7.x <- <df_line return value>

#line 92
  mov r7.x, r7.x  // r7.x <- d

#line 93
  mov r6.xy, -r6.xyxx
  add r5.xy, r5.xyxx, r6.xyxx
  dp2 r5.x, r5.xyxx, r5.xyxx
  sqrt r5.x, r5.x  // r5.x <- d2

#line 94
  nop 
  mov r5.y, l(1.500000)
  mov r6.x, l(0.500000)
  mov r5.x, r5.x

#line 59
  mov r6.y, -r5.y
  add r6.y, r5.x, r6.y
  mov r5.y, -r5.y
  add r5.y, r5.y, r6.x
  div r5.y, r6.y, r5.y
  max r5.y, r5.y, l(0.000000)
  min r5.y, r5.y, l(1.000000)  // r5.y <- t

#line 60
  mul r6.x, r5.y, r5.y
  mul r5.y, r5.y, l(2.000000)
  mov r5.y, -r5.y
  add r5.y, r5.y, l(3.000000)
  mul r5.y, r5.y, r6.x  // r5.y <- <S return value>

#line 94
  mov r5.y, r5.y  // r5.y <- fade

#line 95
  nop 
  mov r6.x, l(0.050000)
  mov r6.y, l(0.020000)
  mov r7.y, l(-0.750000)
  add r5.x, r5.x, r7.y
  mov r7.y, -r5.x
  max r5.x, r5.x, r7.y

#line 59
  mov r7.y, -r6.x
  add r5.x, r5.x, r7.y
  mov r6.x, -r6.x
  add r6.x, r6.x, r6.y
  div r5.x, r5.x, r6.x
  max r5.x, r5.x, l(0.000000)
  min r5.x, r5.x, l(1.000000)  // r5.x <- t

#line 60
  mul r6.x, r5.x, r5.x
  mul r5.x, r5.x, l(2.000000)
  mov r5.x, -r5.x
  add r5.x, r5.x, l(3.000000)
  mul r5.x, r5.x, r6.x  // r5.x <- <S return value>

#line 95
  add r5.x, r5.x, r5.y  // r5.x <- fade

#line 96
  nop 
  mov r3.w, r3.w
  mov r6.w, r6.w
  mov r7.x, r7.x

#line 59
  mov r5.y, -r3.w
  add r5.y, r5.y, r7.x
  mov r3.w, -r3.w
  add r3.w, r3.w, r6.w
  div r3.w, r5.y, r3.w
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)  // r3.w <- t

#line 60
  mul r5.y, r3.w, r3.w
  mul r3.w, r3.w, l(2.000000)
  mov r3.w, -r3.w
  add r3.w, r3.w, l(3.000000)
  mul r3.w, r3.w, r5.y  // r3.w <- <S return value>

#line 96
  mul r3.w, r5.x, r3.w  // r3.w <- <lineShape return value>

#line 133
  add r2.w, r2.w, r3.w

#line 134
  nop 
  mov r5.xy, x0[7].xyxx
  mov r6.xy, x0[5].xyxx
  mov r7.xy, r4.zwzz

#line 89
  mov r3.w, l(0.040000)  // r3.w <- r1

#line 90
  mov r6.w, l(0.010000)

#line 92
  nop 
  mov r5.xy, r5.xyxx
  mov r6.xy, r6.xyxx
  mov r7.xy, r7.xyxx

#line 81
  mov r7.zw, -r5.xxxy
  add r7.xy, r7.zwzz, r7.xyxx  // r7.x <- pa.x; r7.y <- pa.y

#line 82
  mov r7.zw, -r5.xxxy
  add r7.zw, r6.xxxy, r7.zzzw  // r7.z <- ba.x; r7.w <- ba.y

#line 83
  dp2 r8.x, r7.xyxx, r7.zwzz
  dp2 r8.y, r7.zwzz, r7.zwzz
  div r8.x, r8.x, r8.y
  max r8.x, r8.x, l(0.000000)
  min r8.x, r8.x, l(1.000000)  // r8.x <- h

#line 84
  mul r7.zw, r7.zzzw, r8.xxxx
  mov r7.zw, -r7.zzzw
  add r7.xy, r7.zwzz, r7.xyxx
  dp2 r7.x, r7.xyxx, r7.xyxx
  sqrt r7.x, r7.x  // r7.x <- <df_line return value>

#line 92
  mov r7.x, r7.x  // r7.x <- d

#line 93
  mov r6.xy, -r6.xyxx
  add r5.xy, r5.xyxx, r6.xyxx
  dp2 r5.x, r5.xyxx, r5.xyxx
  sqrt r5.x, r5.x  // r5.x <- d2

#line 94
  nop 
  mov r5.y, l(1.500000)
  mov r6.x, l(0.500000)
  mov r5.x, r5.x

#line 59
  mov r6.y, -r5.y
  add r6.y, r5.x, r6.y
  mov r5.y, -r5.y
  add r5.y, r5.y, r6.x
  div r5.y, r6.y, r5.y
  max r5.y, r5.y, l(0.000000)
  min r5.y, r5.y, l(1.000000)  // r5.y <- t

#line 60
  mul r6.x, r5.y, r5.y
  mul r5.y, r5.y, l(2.000000)
  mov r5.y, -r5.y
  add r5.y, r5.y, l(3.000000)
  mul r5.y, r5.y, r6.x  // r5.y <- <S return value>

#line 94
  mov r5.y, r5.y  // r5.y <- fade

#line 95
  nop 
  mov r6.x, l(0.050000)
  mov r6.y, l(0.020000)
  mov r7.y, l(-0.750000)
  add r5.x, r5.x, r7.y
  mov r7.y, -r5.x
  max r5.x, r5.x, r7.y

#line 59
  mov r7.y, -r6.x
  add r5.x, r5.x, r7.y
  mov r6.x, -r6.x
  add r6.x, r6.x, r6.y
  div r5.x, r5.x, r6.x
  max r5.x, r5.x, l(0.000000)
  min r5.x, r5.x, l(1.000000)  // r5.x <- t

#line 60
  mul r6.x, r5.x, r5.x
  mul r5.x, r5.x, l(2.000000)
  mov r5.x, -r5.x
  add r5.x, r5.x, l(3.000000)
  mul r5.x, r5.x, r6.x  // r5.x <- <S return value>

#line 95
  add r5.x, r5.x, r5.y  // r5.x <- fade

#line 96
  nop 
  mov r3.w, r3.w
  mov r6.w, r6.w
  mov r7.x, r7.x

#line 59
  mov r5.y, -r3.w
  add r5.y, r5.y, r7.x
  mov r3.w, -r3.w
  add r3.w, r3.w, r6.w
  div r3.w, r5.y, r3.w
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)  // r3.w <- t

#line 60
  mul r5.y, r3.w, r3.w
  mul r3.w, r3.w, l(2.000000)
  mov r3.w, -r3.w
  add r3.w, r3.w, l(3.000000)
  mul r3.w, r3.w, r5.y  // r3.w <- <S return value>

#line 96
  mul r3.w, r5.x, r3.w  // r3.w <- <lineShape return value>

#line 134
  add r2.w, r2.w, r3.w

#line 135
  nop 
  mov r5.xy, x0[7].xyxx
  mov r6.xy, x0[3].xyxx

#line 89
  mov r3.w, l(0.040000)  // r3.w <- r1

#line 90
  mov r6.w, l(0.010000)

#line 92
  nop 
  mov r5.xy, r5.xyxx
  mov r6.xy, r6.xyxx
  mov r4.zw, r4.zzzw

#line 81
  mov r7.xy, -r5.xyxx
  add r4.zw, r4.zzzw, r7.xxxy  // r4.z <- pa.x; r4.w <- pa.y

#line 82
  mov r7.xy, -r5.xyxx
  add r7.xy, r6.xyxx, r7.xyxx  // r7.x <- ba.x; r7.y <- ba.y

#line 83
  dp2 r7.z, r4.zwzz, r7.xyxx
  dp2 r7.w, r7.xyxx, r7.xyxx
  div r7.z, r7.z, r7.w
  max r7.z, r7.z, l(0.000000)
  min r7.z, r7.z, l(1.000000)  // r7.z <- h

#line 84
  mul r7.xy, r7.zzzz, r7.xyxx
  mov r7.xy, -r7.xyxx
  add r4.zw, r4.zzzw, r7.xxxy
  dp2 r4.z, r4.zwzz, r4.zwzz
  sqrt r4.z, r4.z  // r4.z <- <df_line return value>

#line 92
  mov r4.z, r4.z  // r4.z <- d

#line 93
  mov r6.xy, -r6.xyxx
  add r5.xy, r5.xyxx, r6.xyxx
  dp2 r4.w, r5.xyxx, r5.xyxx
  sqrt r4.w, r4.w  // r4.w <- d2

#line 94
  nop 
  mov r5.x, l(1.500000)
  mov r5.y, l(0.500000)
  mov r4.w, r4.w

#line 59
  mov r6.x, -r5.x
  add r6.x, r4.w, r6.x
  mov r5.x, -r5.x
  add r5.x, r5.x, r5.y
  div r5.x, r6.x, r5.x
  max r5.x, r5.x, l(0.000000)
  min r5.x, r5.x, l(1.000000)  // r5.x <- t

#line 60
  mul r5.y, r5.x, r5.x
  mul r5.x, r5.x, l(2.000000)
  mov r5.x, -r5.x
  add r5.x, r5.x, l(3.000000)
  mul r5.x, r5.x, r5.y  // r5.x <- <S return value>

#line 94
  mov r5.x, r5.x  // r5.x <- fade

#line 95
  nop 
  mov r5.y, l(0.050000)
  mov r6.x, l(0.020000)
  mov r6.y, l(-0.750000)
  add r4.w, r4.w, r6.y
  mov r6.y, -r4.w
  max r4.w, r4.w, r6.y

#line 59
  mov r6.y, -r5.y
  add r4.w, r4.w, r6.y
  mov r5.y, -r5.y
  add r5.y, r5.y, r6.x
  div r4.w, r4.w, r5.y
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, l(1.000000)  // r4.w <- t

#line 60
  mul r5.y, r4.w, r4.w
  mul r4.w, r4.w, l(2.000000)
  mov r4.w, -r4.w
  add r4.w, r4.w, l(3.000000)
  mul r4.w, r4.w, r5.y  // r4.w <- <S return value>

#line 95
  add r4.w, r4.w, r5.x  // r4.w <- fade

#line 96
  nop 
  mov r3.w, r3.w
  mov r6.w, r6.w
  mov r4.z, r4.z

#line 59
  mov r5.x, -r3.w
  add r4.z, r4.z, r5.x
  mov r3.w, -r3.w
  add r3.w, r3.w, r6.w
  div r3.w, r4.z, r3.w
  max r3.w, r3.w, l(0.000000)
  min r3.w, r3.w, l(1.000000)  // r3.w <- t

#line 60
  mul r4.z, r3.w, r3.w
  mul r3.w, r3.w, l(2.000000)
  mov r3.w, -r3.w
  add r3.w, r3.w, l(3.000000)
  mul r3.w, r3.w, r4.z  // r3.w <- <S return value>

#line 96
  mul r3.w, r4.w, r3.w  // r3.w <- <lineShape return value>

#line 135
  add r2.w, r2.w, r3.w

#line 137
  add r3.w, r1.y, r1.w
  sincos r3.w, null, r3.w
  mul r4.z, r1.w, l(0.100000)
  sincos r4.z, null, r4.z
  add r3.w, r3.w, r4.z
  mul r3.w, r3.w, l(0.250000)
  add r3.w, r3.w, l(0.500000)  // r3.w <- sPhase

#line 138
  mul r1.w, r1.w, l(0.100000)
  sincos r1.w, null, r1.w
  mul r1.w, r1.w, l(0.500000)
  add r1.w, r1.w, l(0.500000)
  log r1.w, r1.w
  mul r1.w, r1.w, l(50.000000)
  exp r1.w, r1.w
  mul r1.w, r1.w, l(5.000000)
  add r1.w, r1.w, r3.w  // r1.w <- sPhase

#line 140
  mul r1.w, r1.w, r5.w
  add r1.w, r1.w, r2.w  // r1.w <- m

#line 141
  mov r1.w, r1.w  // r1.w <- <NetLayer return value>

#line 166
  mul r1.w, r1.w, r3.z
  add r1.z, r1.w, r1.z

#line 167
  add r1.y, r1.y, l(0.250000)
endloop 

#line 172
mul r0.z, cb7[6].x, l(2.000000)
sincos r0.z, null, r0.z
mul r0.z, r0.z, l(0.500000)
add r0.z, r0.z, l(0.500000)  // r0.z <- fft

#line 173
mov r0.w, -r0.y
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(2.000000)  // r0.z <- glow

#line 175
mul r0.w, r1.x, l(0.400000)
sincos null, r2.x, r0.w
mul r0.w, r1.x, l(0.240000)
sincos r0.w, null, r0.w
mov r2.y, -r0.w
mul r1.xyw, r2.zxzy, l(0.400000, 0.400000, 0.000000, 0.400000)
add r1.xyw, r1.xyxw, l(0.600000, 0.600000, 0.000000, 0.600000)  // r1.x <- baseCol.x; r1.y <- baseCol.y; r1.w <- baseCol.z

#line 176
mul r2.xyz, r1.zzzz, r1.xywx
mul r1.xyz, r0.zzzz, r1.xywx
add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- col.x; r1.y <- col.y; r1.z <- col.z

#line 178
dp2 r0.x, r0.xyxx, r0.xyxx
mov r0.x, -r0.x
add r0.x, r0.x, l(1.000000)
mul r0.xyz, r0.xxxx, r1.xyzx  // r0.x <- col.x; r0.y <- col.y; r0.z <- col.z

#line 180
div r0.w, cb7[6].x, l(230.000000)
mov r1.x, -r0.w
max r1.y, r0.w, r1.x
ge r0.w, r0.w, r1.x
frc r1.x, r1.y
mov r1.y, -r1.x
movc r0.w, r0.w, r1.x, r1.y
mul r0.w, r0.w, l(230.000000)  // r0.w <- tt

#line 181
nop 
mov r1.x, l(0)
mov r1.y, l(20.000000)
mov r0.w, r0.w

#line 59
mov r1.z, -r1.x
add r1.z, r0.w, r1.z
mov r1.x, -r1.x
add r1.x, r1.x, r1.y
div r1.x, r1.z, r1.x
max r1.x, r1.x, l(0.000000)
min r1.x, r1.x, l(1.000000)  // r1.x <- t

#line 60
mul r1.y, r1.x, r1.x
mul r1.x, r1.x, l(2.000000)
mov r1.x, -r1.x
add r1.x, r1.x, l(3.000000)
mul r1.x, r1.x, r1.y  // r1.x <- <S return value>

#line 181
nop 
mov r1.y, l(224.000000)
mov r1.z, l(200.000000)

#line 59
mov r1.w, -r1.y
add r0.w, r0.w, r1.w
mov r1.y, -r1.y
add r1.y, r1.y, r1.z
div r0.w, r0.w, r1.y
max r0.w, r0.w, l(0.000000)
min r0.w, r0.w, l(1.000000)  // r0.w <- t

#line 60
mul r1.y, r0.w, r0.w
mul r0.w, r0.w, l(2.000000)
mov r0.w, -r0.w
add r0.w, r0.w, l(3.000000)
mul r0.w, r0.w, r1.y  // r0.w <- <S return value>

#line 181
mul r0.w, r0.w, r1.x
mul r0.xyz, r0.wwww, r0.xyzx

#line 183
mov r0.xyz, r0.xyzx  // r0.x <- fragColor.x; r0.y <- fragColor.y; r0.z <- fragColor.z
mov r0.w, l(1.000000)  // r0.w <- fragColor.w

#line 191
mov r0.xyzw, r0.xyzw  // r0.x <- fragColor.x; r0.y <- fragColor.y; r0.z <- fragColor.z; r0.w <- fragColor.w

#line 192
mov o0.xyzw, r0.xyzw
ret 
// Approximately 687 instruction slots used
