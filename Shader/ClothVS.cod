//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64
//   float4 cpuColor;                   // Offset:   64 Size:    16 [unused]
//   int material;                      // Offset:   80 Size:     4 [unused]
//   bool hasTangent;                   // Offset:   84 Size:     4 [unused]
//   int skin;                          // Offset:   88 Size:     4 [unused]
//   float dissolveValue;               // Offset:   92 Size:     4 [unused]
//   float emission;                    // Offset:   96 Size:     4 [unused]
//   float3 pads;                       // Offset:  100 Size:    12 [unused]
//   row_major float4x4 invWorld;       // Offset:  112 Size:    64 [unused]
//
// }
//
// cbuffer VIEW_CONSTANTS_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64
//   float4 cameraPositon;              // Offset:   64 Size:    16 [unused]
//   row_major float4x4 view;           // Offset:   80 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:  144 Size:    64 [unused]
//   row_major float4x4 inverseProjection;// Offset:  208 Size:    64 [unused]
//   row_major float4x4 inverseViewProjection;// Offset:  272 Size:    64 [unused]
//   row_major float4x4 invView;        // Offset:  336 Size:    64 [unused]
//
// }
//
// Resource bind info for clothVertices
// {
//
//   struct ClothVertex
//   {
//       
//       float4 position;               // Offset:    0
//       float4 normal;                 // Offset:   16
//       float4 tangent;                // Offset:   32
//       float4 texcoord;               // Offset:   48
//       float4 oldVelocity;            // Offset:   64
//       float4 velocity;               // Offset:   80
//       float4 newPosition;            // Offset:   96
//
//   } $Element;                        // Offset:    0 Size:   112
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// clothVertices                     texture  struct         r/o             t0      1 
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// VIEW_CONSTANTS_BUFFER             cbuffer      NA          NA            cb4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float   xyzw
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[4], immediateIndexed
dcl_constantbuffer CB4[4], immediateIndexed
dcl_resource_structured t0, 112
dcl_input_sgv v0.x, vertex_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xy
dcl_temps 9
//
// Initial variable locations:
//   v0.x <- vertexId; 
//   o4.x <- <main return value>.texcoord.x; o4.y <- <main return value>.texcoord.y; 
//   o3.x <- <main return value>.wTangent.x; o3.y <- <main return value>.wTangent.y; o3.z <- <main return value>.wTangent.z; o3.w <- <main return value>.wTangent.w; 
//   o2.x <- <main return value>.wNormal.x; o2.y <- <main return value>.wNormal.y; o2.z <- <main return value>.wNormal.z; o2.w <- <main return value>.wNormal.w; 
//   o1.x <- <main return value>.wPosition.x; o1.y <- <main return value>.wPosition.y; o1.z <- <main return value>.wPosition.z; o1.w <- <main return value>.wPosition.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 21 "C:\Users\2240225\Desktop\graphicEngine4\Shader\ClothVS.hlsl"
ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r0.x, v0.x, l(0), t0.xxxx  // r0.x <- vin.position.x
ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r0.y, v0.x, l(4), t0.xxxx  // r0.y <- vin.position.y
ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r0.z, v0.x, l(8), t0.xxxx  // r0.z <- vin.position.z
ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r0.w, v0.x, l(12), t0.xxxx  // r0.w <- vin.position.w
ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r1.x, v0.x, l(16), t0.xxxx  // r1.x <- vin.normal.x
ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r1.y, v0.x, l(20), t0.xxxx  // r1.y <- vin.normal.y
ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r1.z, v0.x, l(24), t0.xxxx  // r1.z <- vin.normal.z
ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r1.w, v0.x, l(28), t0.xxxx  // r1.w <- vin.normal.w
ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r2.x, v0.x, l(32), t0.xxxx  // r2.x <- vin.tangent.x
ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r2.y, v0.x, l(36), t0.xxxx  // r2.y <- vin.tangent.y
ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r2.z, v0.x, l(40), t0.xxxx  // r2.z <- vin.tangent.z
ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r2.w, v0.x, l(44), t0.xxxx  // r2.w <- vin.tangent.w
ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r3.x, v0.x, l(48), t0.xxxx  // r3.x <- vin.texcoord.x
ld_structured_indexable(structured_buffer, stride=112)(mixed,mixed,mixed,mixed) r3.y, v0.x, l(52), t0.xxxx  // r3.y <- vin.texcoord.y

#line 22
mov r2.w, r2.w  // r2.w <- sigma

#line 23
mul r4.xyzw, cb0[0].xxxx, cb4[0].xyzw
mul r5.xyzw, cb0[0].yyyy, cb4[1].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[0].zzzz, cb4[2].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[0].wwww, cb4[3].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, cb0[1].xxxx, cb4[0].xyzw
mul r6.xyzw, cb0[1].yyyy, cb4[1].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[1].zzzz, cb4[2].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[1].wwww, cb4[3].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[2].xxxx, cb4[0].xyzw
mul r7.xyzw, cb0[2].yyyy, cb4[1].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb0[2].zzzz, cb4[2].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb0[2].wwww, cb4[3].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, cb0[3].xxxx, cb4[0].xyzw
mul r8.xyzw, cb0[3].yyyy, cb4[1].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, cb0[3].zzzz, cb4[2].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
mul r8.xyzw, cb0[3].wwww, cb4[3].xyzw
add r7.xyzw, r7.xyzw, r8.xyzw
mul r4.xyzw, r0.xxxx, r4.xyzw
mul r5.xyzw, r0.yyyy, r5.xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r0.zzzz, r6.xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r0.wwww, r7.xyzw
add r4.xyzw, r4.xyzw, r5.xyzw  // r4.x <- vout.position.x; r4.y <- vout.position.y; r4.z <- vout.position.z; r4.w <- vout.position.w

#line 27
mul r5.xyzw, r0.xxxx, cb0[0].xyzw
mul r6.xyzw, r0.yyyy, cb0[1].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r0.zzzz, cb0[2].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r0.xyzw, r0.wwww, cb0[3].xyzw
add r0.xyzw, r0.yxzw, r5.yxzw  // r0.x <- vout.wPosition.y; r0.y <- vout.wPosition.x; r0.z <- vout.wPosition.z; r0.w <- vout.wPosition.w

#line 30
lt r3.z, r0.x, l(0.000000)
if_nz r3.z

#line 32
  mov r0.x, l(0)

#line 33
endif 

#line 35
mul r5.xyzw, r1.xxxx, cb0[0].xyzw
mul r6.xyzw, r1.yyyy, cb0[1].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r1.zzzz, cb0[2].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r1.xyzw, r1.wwww, cb0[3].xyzw
add r1.xyzw, r1.xyzw, r5.xyzw
dp4 r3.z, r1.xyzw, r1.xyzw
rsq r3.z, r3.z
mul r1.xyzw, r1.xyzw, r3.zzzz  // r1.x <- vout.wNormal.x; r1.y <- vout.wNormal.y; r1.z <- vout.wNormal.z; r1.w <- vout.wNormal.w

#line 37
itof r3.z, l(0)  // r3.z <- vin.tangent.w

#line 38
mul r5.xyzw, r2.xxxx, cb0[0].xyzw
mul r6.xyzw, r2.yyyy, cb0[1].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r2.zzzz, cb0[2].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r3.zzzz, cb0[3].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
dp4 r2.x, r5.xyzw, r5.xyzw
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, r5.xyzx  // r2.x <- vout.wTangent.x; r2.y <- vout.wTangent.y; r2.z <- vout.wTangent.z

#line 39
mov r2.w, r2.w  // r2.w <- vout.wTangent.w

#line 41
mov r3.xy, r3.xyxx  // r3.x <- vout.texcoord.x; r3.y <- vout.texcoord.y

#line 43
mov o0.xyzw, r4.xyzw
mov o1.xzw, r0.yyzw
mov o1.y, r0.x
mov o2.xyzw, r1.xyzw
mov o3.xyz, r2.xyzx
mov o3.w, r2.w
mov o4.xy, r3.xyxx
ret 
// Approximately 92 instruction slots used
