//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// INSTANCEID               0   x           1     NONE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// SV_RENDERTARGETARRAYINDEX     0   x           1  RTINDEX    uint   x   
//
gs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_input_siv v[3][0].xyzw, position
dcl_input v[3][1].x
dcl_temps 2
dcl_inputprimitive triangle 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output_siv o1.x, rendertarget_array_index
dcl_maxout 3
//
// Initial variable locations:
//   m0 <- output; 
//   v[0][0].x <- input[0].position.x; v[0][0].y <- input[0].position.y; v[0][0].z <- input[0].position.z; v[0][0].w <- input[0].position.w; 
//   v[0][1].x <- input[0].instanceId; 
//   v[1][0].x <- input[1].position.x; v[1][0].y <- input[1].position.y; v[1][0].z <- input[1].position.z; v[1][0].w <- input[1].position.w; 
//   v[1][1].x <- input[1].instanceId; 
//   v[2][0].x <- input[2].position.x; v[2][0].y <- input[2].position.y; v[2][0].z <- input[2].position.z; v[2][0].w <- input[2].position.w; 
//   v[2][1].x <- input[2].instanceId
//
#line 21 "C:\Users\2240225\Desktop\graphicEngine4\Shader\GltfModelCsmGS.hlsl"
mov r0.x, v[0][1].x  // r0.x <- element.renderTargetArrayIndex

#line 23
mov r1.xyzw, v[0][0].xyzw  // r1.x <- element.position.x; r1.y <- element.position.y; r1.z <- element.position.z; r1.w <- element.position.w

#line 24
mov o0.xyzw, r1.xyzw
mov o1.x, r0.x
emit_stream m0

#line 25
mov r1.xyzw, v[1][0].xyzw

#line 26
mov o0.xyzw, r1.xyzw
mov o1.x, r0.x
emit_stream m0

#line 27
mov r1.xyzw, v[2][0].xyzw

#line 28
mov o0.xyzw, r1.xyzw
mov o1.x, r0.x
emit_stream m0

#line 30
cut_stream m0

#line 31
ret 
// Approximately 15 instruction slots used
