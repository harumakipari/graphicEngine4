//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// lowFreqPerlinWorley                   UAV  float4          3d             u0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_input vThreadID.xyz
dcl_temps 15
dcl_thread_group 8, 8, 8
//
// Initial variable locations:
//   vThreadID.x <- DTid.x; vThreadID.y <- DTid.y; vThreadID.z <- DTid.z
//
#line 11 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\LowFreqPerlinWorleyCS.hlsl"
mov r0.x, l(4.000000)  // r0.x <- freq

#line 13
utof r0.yzw, vThreadID.xxyz
itof r1.xyz, l(128, 128, 128, 0)
div r0.yzw, r0.yyzw, r1.xxyz  // r0.y <- uvw.x; r0.z <- uvw.y; r0.w <- uvw.z

#line 15
nop 
mov r0.yzw, r0.yyzw
mov r0.x, r0.x
mov r1.x, l(7)

#line 94 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\PerlinWorleyNoise.hlsli"
mov r1.y, l(0.554785)  // r1.y <- g

#line 95
mov r1.z, l(1.000000)  // r1.z <- amp

#line 96
mov r1.w, l(0)  // r1.w <- noise

#line 97
mov r2.x, l(0)  // r2.x <- i
mov r2.y, r0.x  // r2.y <- freq
mov r2.z, r1.z  // r2.z <- amp
mov r2.w, r1.w  // r2.w <- noise
mov r3.x, r2.x  // r3.x <- i
loop 
  ilt r3.y, r3.x, r1.x
  breakc_z r3.y

#line 99
  nop 
  mul r3.yzw, r0.yyzw, r2.yyyy
  mov r2.y, r2.y

#line 28
  round_ni r4.xyz, r3.yzwy  // r4.x <- p.x; r4.y <- p.y; r4.z <- p.z

#line 29
  frc r3.y, r3.y  // r3.y <- w

#line 32
  mul r3.z, r3.y, r3.y
  mul r3.z, r3.y, r3.z
  mul r3.w, r3.y, l(6.000000)
  mov r4.w, l(-15.000000)
  add r3.w, r3.w, r4.w
  mul r3.w, r3.w, r3.y
  add r3.w, r3.w, l(10.000000)
  mul r5.xyz, r3.wwww, r3.zzzz  // r5.x <- u.x; r5.y <- u.y; r5.z <- u.z

#line 35
  nop 
  add r6.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  div r6.xyz, r6.xyzx, r2.yyyy
  mov r7.xyz, -r6.xyzx
  max r8.xyz, r6.xyzx, r7.xyzx
  ge r6.xyz, r6.xyzx, r7.xyzx
  frc r7.xyz, r8.xyzx
  mov r8.xyz, -r7.xyzx
  movc r6.xyz, r6.xyzx, r7.xyzx, r8.xyzx
  mul r6.xyz, r2.yyyy, r6.xyzx

#line 14
  ftoi r6.xyz, r6.xyzx
  imul null, r6.xyz, r6.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r6.x <- q.x; r6.y <- q.y; r6.z <- q.z

#line 15
  xor r3.z, r6.y, r6.x
  xor r3.z, r6.z, r3.z
  imul null, r6.xyz, r3.zzzz, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
  utof r6.xyz, r6.xyzx
  mul r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  mul r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r6.xyz, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r6.x <- <Hash33 return value>.x; r6.y <- <Hash33 return value>.y; r6.z <- <Hash33 return value>.z

#line 35
  mov r6.xyz, r6.xyzx  // r6.x <- ga.x; r6.y <- ga.y; r6.z <- ga.z

#line 36
  nop 
  add r7.xyz, r4.xyzx, l(1.000000, 0.000000, 0.000000, 0.000000)
  div r7.xyz, r7.xyzx, r2.yyyy
  mov r8.xyz, -r7.xyzx
  max r9.xyz, r7.xyzx, r8.xyzx
  ge r7.xyz, r7.xyzx, r8.xyzx
  frc r8.xyz, r9.xyzx
  mov r9.xyz, -r8.xyzx
  movc r7.xyz, r7.xyzx, r8.xyzx, r9.xyzx
  mul r7.xyz, r2.yyyy, r7.xyzx

#line 14
  ftoi r7.xyz, r7.xyzx
  imul null, r7.xyz, r7.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r7.x <- q.x; r7.y <- q.y; r7.z <- q.z

#line 15
  xor r3.z, r7.y, r7.x
  xor r3.z, r7.z, r3.z
  imul null, r7.xyz, r3.zzzz, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
  utof r7.xyz, r7.xyzx
  mul r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  mul r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r7.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r7.x <- <Hash33 return value>.x; r7.y <- <Hash33 return value>.y; r7.z <- <Hash33 return value>.z

#line 36
  mov r7.xyz, r7.xyzx  // r7.x <- gb.x; r7.y <- gb.y; r7.z <- gb.z

#line 37
  nop 
  add r8.xyz, r4.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
  div r8.xyz, r8.xyzx, r2.yyyy
  mov r9.xyz, -r8.xyzx
  max r10.xyz, r8.xyzx, r9.xyzx
  ge r8.xyz, r8.xyzx, r9.xyzx
  frc r9.xyz, r10.xyzx
  mov r10.xyz, -r9.xyzx
  movc r8.xyz, r8.xyzx, r9.xyzx, r10.xyzx
  mul r8.xyz, r2.yyyy, r8.xyzx

#line 14
  ftoi r8.xyz, r8.xyzx
  imul null, r8.xyz, r8.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r8.x <- q.x; r8.y <- q.y; r8.z <- q.z

#line 15
  xor r3.z, r8.y, r8.x
  xor r3.z, r8.z, r3.z
  imul null, r8.xyz, r3.zzzz, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
  utof r8.xyz, r8.xyzx
  mul r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  mul r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r8.xyz, r8.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r8.x <- <Hash33 return value>.x; r8.y <- <Hash33 return value>.y; r8.z <- <Hash33 return value>.z

#line 37
  mov r8.xyz, r8.xyzx  // r8.x <- gc.x; r8.y <- gc.y; r8.z <- gc.z

#line 38
  nop 
  add r9.xyz, r4.xyzx, l(1.000000, 1.000000, 0.000000, 0.000000)
  div r9.xyz, r9.xyzx, r2.yyyy
  mov r10.xyz, -r9.xyzx
  max r11.xyz, r9.xyzx, r10.xyzx
  ge r9.xyz, r9.xyzx, r10.xyzx
  frc r10.xyz, r11.xyzx
  mov r11.xyz, -r10.xyzx
  movc r9.xyz, r9.xyzx, r10.xyzx, r11.xyzx
  mul r9.xyz, r2.yyyy, r9.xyzx

#line 14
  ftoi r9.xyz, r9.xyzx
  imul null, r9.xyz, r9.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r9.x <- q.x; r9.y <- q.y; r9.z <- q.z

#line 15
  xor r3.z, r9.y, r9.x
  xor r3.z, r9.z, r3.z
  imul null, r9.xyz, r3.zzzz, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
  utof r9.xyz, r9.xyzx
  mul r9.xyz, r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  mul r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r9.xyz, r9.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r9.x <- <Hash33 return value>.x; r9.y <- <Hash33 return value>.y; r9.z <- <Hash33 return value>.z

#line 38
  mov r9.xyz, r9.xyzx  // r9.x <- gd.x; r9.y <- gd.y; r9.z <- gd.z

#line 39
  nop 
  add r10.xyz, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
  div r10.xyz, r10.xyzx, r2.yyyy
  mov r11.xyz, -r10.xyzx
  max r12.xyz, r10.xyzx, r11.xyzx
  ge r10.xyz, r10.xyzx, r11.xyzx
  frc r11.xyz, r12.xyzx
  mov r12.xyz, -r11.xyzx
  movc r10.xyz, r10.xyzx, r11.xyzx, r12.xyzx
  mul r10.xyz, r2.yyyy, r10.xyzx

#line 14
  ftoi r10.xyz, r10.xyzx
  imul null, r10.xyz, r10.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r10.x <- q.x; r10.y <- q.y; r10.z <- q.z

#line 15
  xor r3.z, r10.y, r10.x
  xor r3.z, r10.z, r3.z
  imul null, r10.xyz, r3.zzzz, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
  utof r10.xyz, r10.xyzx
  mul r10.xyz, r10.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  mul r10.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r10.xyz, r10.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r10.x <- <Hash33 return value>.x; r10.y <- <Hash33 return value>.y; r10.z <- <Hash33 return value>.z

#line 39
  mov r10.xyz, r10.xyzx  // r10.x <- ge.x; r10.y <- ge.y; r10.z <- ge.z

#line 40
  nop 
  add r11.xyz, r4.xyzx, l(1.000000, 0.000000, 1.000000, 0.000000)
  div r11.xyz, r11.xyzx, r2.yyyy
  mov r12.xyz, -r11.xyzx
  max r13.xyz, r11.xyzx, r12.xyzx
  ge r11.xyz, r11.xyzx, r12.xyzx
  frc r12.xyz, r13.xyzx
  mov r13.xyz, -r12.xyzx
  movc r11.xyz, r11.xyzx, r12.xyzx, r13.xyzx
  mul r11.xyz, r2.yyyy, r11.xyzx

#line 14
  ftoi r11.xyz, r11.xyzx
  imul null, r11.xyz, r11.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r11.x <- q.x; r11.y <- q.y; r11.z <- q.z

#line 15
  xor r3.z, r11.y, r11.x
  xor r3.z, r11.z, r3.z
  imul null, r11.xyz, r3.zzzz, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
  utof r11.xyz, r11.xyzx
  mul r11.xyz, r11.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  mul r11.xyz, r11.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r11.xyz, r11.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r11.x <- <Hash33 return value>.x; r11.y <- <Hash33 return value>.y; r11.z <- <Hash33 return value>.z

#line 40
  mov r11.xyz, r11.xyzx  // r11.x <- gf.x; r11.y <- gf.y; r11.z <- gf.z

#line 41
  nop 
  add r12.xyz, r4.xyzx, l(0.000000, 1.000000, 1.000000, 0.000000)
  div r12.xyz, r12.xyzx, r2.yyyy
  mov r13.xyz, -r12.xyzx
  max r14.xyz, r12.xyzx, r13.xyzx
  ge r12.xyz, r12.xyzx, r13.xyzx
  frc r13.xyz, r14.xyzx
  mov r14.xyz, -r13.xyzx
  movc r12.xyz, r12.xyzx, r13.xyzx, r14.xyzx
  mul r12.xyz, r2.yyyy, r12.xyzx

#line 14
  ftoi r12.xyz, r12.xyzx
  imul null, r12.xyz, r12.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r12.x <- q.x; r12.y <- q.y; r12.z <- q.z

#line 15
  xor r3.z, r12.y, r12.x
  xor r3.z, r12.z, r3.z
  imul null, r12.xyz, r3.zzzz, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
  utof r12.xyz, r12.xyzx
  mul r12.xyz, r12.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  mul r12.xyz, r12.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r12.xyz, r12.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r12.x <- <Hash33 return value>.x; r12.y <- <Hash33 return value>.y; r12.z <- <Hash33 return value>.z

#line 41
  mov r12.xyz, r12.xyzx  // r12.x <- gg.x; r12.y <- gg.y; r12.z <- gg.z

#line 42
  nop 
  add r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r4.xyz, r4.xyzx, r2.yyyy
  mov r13.xyz, -r4.xyzx
  max r14.xyz, r4.xyzx, r13.xyzx
  ge r4.xyz, r4.xyzx, r13.xyzx
  frc r13.xyz, r14.xyzx
  mov r14.xyz, -r13.xyzx
  movc r4.xyz, r4.xyzx, r13.xyzx, r14.xyzx
  mul r4.xyz, r2.yyyy, r4.xyzx

#line 14
  ftoi r4.xyz, r4.xyzx
  imul null, r4.xyz, r4.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r4.x <- q.x; r4.y <- q.y; r4.z <- q.z

#line 15
  xor r3.z, r4.y, r4.x
  xor r3.z, r4.z, r3.z
  imul null, r4.xyz, r3.zzzz, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
  utof r4.xyz, r4.xyzx
  mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  mul r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r4.x <- <Hash33 return value>.x; r4.y <- <Hash33 return value>.y; r4.z <- <Hash33 return value>.z

#line 42
  mov r4.xyz, r4.xyzx  // r4.x <- gh.x; r4.y <- gh.y; r4.z <- gh.z

#line 45
  mov r13.xyz, l(-0.000000,-0.000000,-0.000000,-0.000000)
  add r13.xyz, r3.yyyy, r13.xyzx
  dp3 r3.z, r6.xyzx, r13.xyzx  // r3.z <- va

#line 46
  mov r6.xyz, l(-1.000000,-0.000000,-0.000000,-0.000000)
  add r6.xyz, r3.yyyy, r6.xyzx
  dp3 r3.w, r7.xyzx, r6.xyzx  // r3.w <- vb

#line 47
  mov r6.xyz, l(-0.000000,-1.000000,-0.000000,-0.000000)
  add r6.xyz, r3.yyyy, r6.xyzx
  dp3 r4.w, r8.xyzx, r6.xyzx  // r4.w <- vc

#line 48
  mov r6.xyz, l(-1.000000,-1.000000,-0.000000,-0.000000)
  add r6.xyz, r3.yyyy, r6.xyzx
  dp3 r5.w, r9.xyzx, r6.xyzx  // r5.w <- vd

#line 49
  mov r6.xyz, l(-0.000000,-0.000000,-1.000000,-0.000000)
  add r6.xyz, r3.yyyy, r6.xyzx
  dp3 r6.x, r10.xyzx, r6.xyzx  // r6.x <- ve

#line 50
  mov r6.yzw, l(-0.000000,-1.000000,-0.000000,-1.000000)
  add r6.yzw, r3.yyyy, r6.yyzw
  dp3 r6.y, r11.xyzx, r6.yzwy  // r6.y <- vf

#line 51
  mov r7.xyz, l(-0.000000,-1.000000,-1.000000,-0.000000)
  add r7.xyz, r3.yyyy, r7.xyzx
  dp3 r6.z, r12.xyzx, r7.xyzx  // r6.z <- vg

#line 52
  mov r7.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
  add r7.xyz, r3.yyyy, r7.xyzx
  dp3 r3.y, r4.xyzx, r7.xyzx  // r3.y <- vh

#line 55
  mov r4.x, -r3.z
  add r4.x, r3.w, r4.x
  mul r4.x, r4.x, r5.x
  add r4.x, r3.z, r4.x
  mov r4.y, -r3.z
  add r4.y, r4.y, r4.w
  mul r4.y, r4.y, r5.y
  add r4.x, r4.y, r4.x
  mov r4.y, -r3.z
  add r4.y, r4.y, r6.x
  mul r4.y, r4.y, r5.z
  add r4.x, r4.y, r4.x
  mul r4.y, r5.y, r5.x
  mov r4.z, -r3.w
  add r4.z, r3.z, r4.z
  mov r6.w, -r4.w
  add r4.z, r4.z, r6.w
  add r4.z, r5.w, r4.z
  mul r4.y, r4.z, r4.y
  add r4.x, r4.y, r4.x
  mul r4.y, r5.z, r5.y
  mov r4.z, -r4.w
  add r4.z, r3.z, r4.z
  mov r6.w, -r6.x
  add r4.z, r4.z, r6.w
  add r4.z, r6.z, r4.z
  mul r4.y, r4.z, r4.y
  add r4.x, r4.y, r4.x
  mul r4.y, r5.x, r5.z
  mov r4.z, -r3.w
  add r4.z, r3.z, r4.z
  mov r6.w, -r6.x
  add r4.z, r4.z, r6.w
  add r4.z, r6.y, r4.z
  mul r4.y, r4.z, r4.y
  add r4.x, r4.y, r4.x
  mul r4.y, r5.y, r5.x
  mul r4.y, r5.z, r4.y
  mov r3.z, -r3.z
  add r3.z, r3.w, r3.z
  add r3.z, r4.w, r3.z
  mov r3.w, -r5.w
  add r3.z, r3.w, r3.z
  add r3.z, r6.x, r3.z
  mov r3.w, -r6.y
  add r3.z, r3.w, r3.z
  mov r3.w, -r6.z
  add r3.z, r3.w, r3.z
  add r3.y, r3.y, r3.z
  mul r3.y, r3.y, r4.y
  add r3.y, r3.y, r4.x  // r3.y <- <GradientNoise return value>

#line 99
  mul r3.y, r2.z, r3.y
  add r2.w, r2.w, r3.y

#line 100
  mul r2.y, r2.y, l(2.000000)

#line 101
  mul r2.z, r1.y, r2.z

#line 102
  iadd r3.x, r3.x, l(1)
endloop 

#line 104
mov r2.w, r2.w  // r2.w <- <PerlinFbm return value>

#line 15 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\LowFreqPerlinWorleyCS.hlsl"
mov r0.x, l(-1.000000)
add r0.x, r0.x, r2.w
mul r0.x, r0.x, l(0.500000)
add r0.x, r0.x, l(1.000000)  // r0.x <- pfbm

#line 16
mul r0.x, r0.x, l(2.000000)
mov r1.x, l(-1.000000)
add r0.x, r0.x, r1.x
mov r1.x, -r0.x
max r0.x, r0.x, r1.x  // r0.x <- pfbm

#line 19
nop 
mov r0.yzw, r0.yyzw
mov r1.x, l(4.000000)

#line 110 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\PerlinWorleyNoise.hlsli"
nop 
mul r1.yzw, r0.yyzw, r1.xxxx
mov r1.x, r1.x

#line 68
round_ni r2.xyz, r1.yzwy  // r2.x <- id.x; r2.y <- id.y; r2.z <- id.z

#line 69
frc r1.yzw, r1.yyzw  // r1.y <- p.x; r1.z <- p.y; r1.w <- p.z

#line 71
mov r2.w, l(10000.000000)  // r2.w <- minDist

#line 72
itof r3.x, l(-1)  // r3.x <- x
mov r3.y, r2.w  // r3.y <- minDist
mov r3.z, r3.x  // r3.z <- x
loop 
  itof r3.w, l(1)
  ge r3.w, r3.w, r3.z
  breakc_z r3.w

#line 74
  itof r3.w, l(-1)  // r3.w <- y
  mov r4.x, r3.y  // r4.x <- minDist
  mov r4.y, r3.w  // r4.y <- y
  loop 
    itof r4.z, l(1)
    ge r4.z, r4.z, r4.y
    breakc_z r4.z

#line 76
    itof r4.z, l(-1)  // r4.z <- z
    mov r4.w, r4.x  // r4.w <- minDist
    mov r5.z, r4.z  // r5.z <- z
    loop 
      itof r5.w, l(1)
      ge r5.w, r5.w, r5.z
      breakc_z r5.w

#line 78
      mov r5.x, r3.z  // r5.x <- offset.x
      mov r5.y, r4.y  // r5.y <- offset.y
      mov r5.z, r5.z  // r5.z <- offset.z

#line 79
      nop 
      add r6.xyz, r2.xyzx, r5.xyzx
      div r6.xyz, r6.xyzx, r1.xxxx
      mov r7.xyz, -r6.xyzx
      max r8.xyz, r6.xyzx, r7.xyzx
      ge r6.xyz, r6.xyzx, r7.xyzx
      frc r7.xyz, r8.xyzx
      mov r8.xyz, -r7.xyzx
      movc r6.xyz, r6.xyzx, r7.xyzx, r8.xyzx
      mul r6.xyz, r1.xxxx, r6.xyzx

#line 14
      ftoi r6.xyz, r6.xyzx
      imul null, r6.xyz, r6.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r6.x <- q.x; r6.y <- q.y; r6.z <- q.z

#line 15
      xor r5.w, r6.y, r6.x
      xor r5.w, r6.z, r5.w
      imul null, r6.xyz, r5.wwww, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
      utof r6.xyz, r6.xyzx
      mul r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r6.xyz, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r6.x <- <Hash33 return value>.x; r6.y <- <Hash33 return value>.y; r6.z <- <Hash33 return value>.z

#line 79
      mul r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r6.x <- h.x; r6.y <- h.y; r6.z <- h.z

#line 80
      add r5.xyw, r5.xyxz, r6.xyxz  // r5.x <- h.x; r5.y <- h.y; r5.w <- h.z

#line 81
      mov r5.xyw, -r5.xyxw
      add r5.xyw, r1.yzyw, r5.xyxw  // r5.x <- d.x; r5.y <- d.y; r5.w <- d.z

#line 82
      dp3 r5.x, r5.xywx, r5.xywx
      min r4.w, r4.w, r5.x

#line 83
      add r5.z, r5.z, l(1.000000)
    endloop 
    mov r4.x, r4.w  // r4.x <- minDist

#line 84
    add r4.y, r4.y, l(1.000000)
  endloop 
  mov r3.y, r4.x  // r3.y <- minDist

#line 85
  add r3.z, r3.z, l(1.000000)
endloop 

#line 88
mov r1.y, -r3.y
add r1.y, r1.y, l(1.000000)  // r1.y <- <WorleyNoise return value>

#line 110
mul r1.y, r1.y, l(0.625000)
nop 
mul r2.xyz, r0.yzwy, r1.xxxx
mul r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mul r1.z, r1.x, l(2.000000)

#line 68
round_ni r3.xyz, r2.xyzx  // r3.x <- id.x; r3.y <- id.y; r3.z <- id.z

#line 69
frc r2.xyz, r2.xyzx  // r2.x <- p.x; r2.y <- p.y; r2.z <- p.z

#line 71
mov r1.w, l(10000.000000)  // r1.w <- minDist

#line 72
itof r2.w, l(-1)  // r2.w <- x
mov r3.w, r1.w  // r3.w <- minDist
mov r4.x, r2.w  // r4.x <- x
loop 
  itof r4.y, l(1)
  ge r4.y, r4.y, r4.x
  breakc_z r4.y

#line 74
  itof r4.y, l(-1)  // r4.y <- y
  mov r4.z, r3.w  // r4.z <- minDist
  mov r4.w, r4.y  // r4.w <- y
  loop 
    itof r5.x, l(1)
    ge r5.x, r5.x, r4.w
    breakc_z r5.x

#line 76
    itof r5.x, l(-1)  // r5.x <- z
    mov r5.y, r4.z  // r5.y <- minDist
    mov r6.z, r5.x  // r6.z <- z
    loop 
      itof r5.z, l(1)
      ge r5.z, r5.z, r6.z
      breakc_z r5.z

#line 78
      mov r6.x, r4.x  // r6.x <- offset.x
      mov r6.y, r4.w  // r6.y <- offset.y
      mov r6.z, r6.z  // r6.z <- offset.z

#line 79
      nop 
      add r7.xyz, r3.xyzx, r6.xyzx
      div r7.xyz, r7.xyzx, r1.zzzz
      mov r8.xyz, -r7.xyzx
      max r9.xyz, r7.xyzx, r8.xyzx
      ge r7.xyz, r7.xyzx, r8.xyzx
      frc r8.xyz, r9.xyzx
      mov r9.xyz, -r8.xyzx
      movc r7.xyz, r7.xyzx, r8.xyzx, r9.xyzx
      mul r7.xyz, r1.zzzz, r7.xyzx

#line 14
      ftoi r7.xyz, r7.xyzx
      imul null, r7.xyz, r7.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r7.x <- q.x; r7.y <- q.y; r7.z <- q.z

#line 15
      xor r5.z, r7.y, r7.x
      xor r5.z, r7.z, r5.z
      imul null, r7.xyz, r5.zzzz, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
      utof r7.xyz, r7.xyzx
      mul r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r7.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r7.x <- <Hash33 return value>.x; r7.y <- <Hash33 return value>.y; r7.z <- <Hash33 return value>.z

#line 79
      mul r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r7.x <- h.x; r7.y <- h.y; r7.z <- h.z

#line 80
      add r6.xyw, r6.xyxz, r7.xyxz  // r6.x <- h.x; r6.y <- h.y; r6.w <- h.z

#line 81
      mov r6.xyw, -r6.xyxw
      add r6.xyw, r2.xyxz, r6.xyxw  // r6.x <- d.x; r6.y <- d.y; r6.w <- d.z

#line 82
      dp3 r5.z, r6.xywx, r6.xywx
      min r5.y, r5.z, r5.y

#line 83
      add r6.z, r6.z, l(1.000000)
    endloop 
    mov r4.z, r5.y  // r4.z <- minDist

#line 84
    add r4.w, r4.w, l(1.000000)
  endloop 
  mov r3.w, r4.z  // r3.w <- minDist

#line 85
  add r4.x, r4.x, l(1.000000)
endloop 

#line 88
mov r1.z, -r3.w
add r1.z, r1.z, l(1.000000)  // r1.z <- <WorleyNoise return value>

#line 110
mul r1.z, r1.z, l(0.250000)
add r1.y, r1.z, r1.y
nop 
mul r2.xyz, r0.yzwy, r1.xxxx
mul r2.xyz, r2.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
mul r1.x, r1.x, l(4.000000)

#line 68
round_ni r3.xyz, r2.xyzx  // r3.x <- id.x; r3.y <- id.y; r3.z <- id.z

#line 69
frc r2.xyz, r2.xyzx  // r2.x <- p.x; r2.y <- p.y; r2.z <- p.z

#line 71
mov r1.z, l(10000.000000)  // r1.z <- minDist

#line 72
itof r1.w, l(-1)  // r1.w <- x
mov r2.w, r1.z  // r2.w <- minDist
mov r3.w, r1.w  // r3.w <- x
loop 
  itof r4.x, l(1)
  ge r4.x, r4.x, r3.w
  breakc_z r4.x

#line 74
  itof r4.x, l(-1)  // r4.x <- y
  mov r4.y, r2.w  // r4.y <- minDist
  mov r4.z, r4.x  // r4.z <- y
  loop 
    itof r4.w, l(1)
    ge r4.w, r4.w, r4.z
    breakc_z r4.w

#line 76
    itof r4.w, l(-1)  // r4.w <- z
    mov r5.x, r4.y  // r5.x <- minDist
    mov r6.z, r4.w  // r6.z <- z
    loop 
      itof r5.y, l(1)
      ge r5.y, r5.y, r6.z
      breakc_z r5.y

#line 78
      mov r6.x, r3.w  // r6.x <- offset.x
      mov r6.y, r4.z  // r6.y <- offset.y
      mov r6.z, r6.z  // r6.z <- offset.z

#line 79
      nop 
      add r5.yzw, r3.xxyz, r6.xxyz
      div r5.yzw, r5.yyzw, r1.xxxx
      mov r7.xyz, -r5.yzwy
      max r8.xyz, r5.yzwy, r7.xyzx
      ge r5.yzw, r5.yyzw, r7.xxyz
      frc r7.xyz, r8.xyzx
      mov r8.xyz, -r7.xyzx
      movc r5.yzw, r5.yyzw, r7.xxyz, r8.xxyz
      mul r5.yzw, r1.xxxx, r5.yyzw

#line 14
      ftoi r5.yzw, r5.yyzw
      imul null, r5.yzw, r5.yyzw, l(0, 0x5f356491, 0xe336beb9, 0xa6d23e7f)  // r5.y <- q.x; r5.z <- q.y; r5.w <- q.z

#line 15
      xor r5.y, r5.z, r5.y
      xor r5.y, r5.w, r5.y
      imul null, r5.yzw, r5.yyyy, l(0, 0x5f356491, 0xe336beb9, 0xa6d23e7f)  // r5.y <- q.x

#line 16
      utof r5.yzw, r5.yyzw
      mul r5.yzw, r5.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000)
      mul r5.yzw, r5.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r5.yzw, r5.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)  // r5.y <- <Hash33 return value>.x; r5.z <- <Hash33 return value>.y; r5.w <- <Hash33 return value>.z

#line 79
      mul r5.yzw, r5.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
      add r5.yzw, r5.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)  // r5.y <- h.x; r5.z <- h.y; r5.w <- h.z

#line 80
      add r5.yzw, r6.xxyz, r5.yyzw

#line 81
      mov r5.yzw, -r5.yyzw
      add r5.yzw, r2.xxyz, r5.yyzw  // r5.y <- d.x; r5.z <- d.y; r5.w <- d.z

#line 82
      dp3 r5.y, r5.yzwy, r5.yzwy
      min r5.x, r5.y, r5.x

#line 83
      add r6.z, r6.z, l(1.000000)
    endloop 
    mov r4.y, r5.x  // r4.y <- minDist

#line 84
    add r4.z, r4.z, l(1.000000)
  endloop 
  mov r2.w, r4.y  // r2.w <- minDist

#line 85
  add r3.w, r3.w, l(1.000000)
endloop 

#line 88
mov r1.x, -r2.w
add r1.x, r1.x, l(1.000000)  // r1.x <- <WorleyNoise return value>

#line 110
mul r1.x, r1.x, l(0.125000)
add r1.x, r1.x, r1.y  // r1.x <- <WorleyFbm return value>

#line 19 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\LowFreqPerlinWorleyCS.hlsl"
mov r1.x, r1.x  // r1.x <- color.y

#line 20
nop 
mov r0.yzw, r0.yyzw
mov r2.x, l(8.000000)

#line 110 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\PerlinWorleyNoise.hlsli"
nop 
mul r2.yzw, r0.yyzw, r2.xxxx
mov r2.x, r2.x

#line 68
round_ni r3.xyz, r2.yzwy  // r3.x <- id.x; r3.y <- id.y; r3.z <- id.z

#line 69
frc r2.yzw, r2.yyzw  // r2.y <- p.x; r2.z <- p.y; r2.w <- p.z

#line 71
mov r3.w, l(10000.000000)  // r3.w <- minDist

#line 72
itof r4.x, l(-1)  // r4.x <- x
mov r4.y, r3.w  // r4.y <- minDist
mov r4.z, r4.x  // r4.z <- x
loop 
  itof r4.w, l(1)
  ge r4.w, r4.w, r4.z
  breakc_z r4.w

#line 74
  itof r4.w, l(-1)  // r4.w <- y
  mov r5.x, r4.y  // r5.x <- minDist
  mov r5.y, r4.w  // r5.y <- y
  loop 
    itof r5.z, l(1)
    ge r5.z, r5.z, r5.y
    breakc_z r5.z

#line 76
    itof r5.z, l(-1)  // r5.z <- z
    mov r5.w, r5.x  // r5.w <- minDist
    mov r6.z, r5.z  // r6.z <- z
    loop 
      itof r6.w, l(1)
      ge r6.w, r6.w, r6.z
      breakc_z r6.w

#line 78
      mov r6.x, r4.z  // r6.x <- offset.x
      mov r6.y, r5.y  // r6.y <- offset.y
      mov r6.z, r6.z  // r6.z <- offset.z

#line 79
      nop 
      add r7.xyz, r3.xyzx, r6.xyzx
      div r7.xyz, r7.xyzx, r2.xxxx
      mov r8.xyz, -r7.xyzx
      max r9.xyz, r7.xyzx, r8.xyzx
      ge r7.xyz, r7.xyzx, r8.xyzx
      frc r8.xyz, r9.xyzx
      mov r9.xyz, -r8.xyzx
      movc r7.xyz, r7.xyzx, r8.xyzx, r9.xyzx
      mul r7.xyz, r2.xxxx, r7.xyzx

#line 14
      ftoi r7.xyz, r7.xyzx
      imul null, r7.xyz, r7.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r7.x <- q.x; r7.y <- q.y; r7.z <- q.z

#line 15
      xor r6.w, r7.y, r7.x
      xor r6.w, r7.z, r6.w
      imul null, r7.xyz, r6.wwww, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
      utof r7.xyz, r7.xyzx
      mul r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r7.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r7.x <- <Hash33 return value>.x; r7.y <- <Hash33 return value>.y; r7.z <- <Hash33 return value>.z

#line 79
      mul r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r7.x <- h.x; r7.y <- h.y; r7.z <- h.z

#line 80
      add r6.xyw, r6.xyxz, r7.xyxz  // r6.x <- h.x; r6.y <- h.y; r6.w <- h.z

#line 81
      mov r6.xyw, -r6.xyxw
      add r6.xyw, r2.yzyw, r6.xyxw  // r6.x <- d.x; r6.y <- d.y; r6.w <- d.z

#line 82
      dp3 r6.x, r6.xywx, r6.xywx
      min r5.w, r5.w, r6.x

#line 83
      add r6.z, r6.z, l(1.000000)
    endloop 
    mov r5.x, r5.w  // r5.x <- minDist

#line 84
    add r5.y, r5.y, l(1.000000)
  endloop 
  mov r4.y, r5.x  // r4.y <- minDist

#line 85
  add r4.z, r4.z, l(1.000000)
endloop 

#line 88
mov r2.y, -r4.y
add r2.y, r2.y, l(1.000000)  // r2.y <- <WorleyNoise return value>

#line 110
mul r2.y, r2.y, l(0.625000)
nop 
mul r3.xyz, r0.yzwy, r2.xxxx
mul r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mul r2.z, r2.x, l(2.000000)

#line 68
round_ni r4.xyz, r3.xyzx  // r4.x <- id.x; r4.y <- id.y; r4.z <- id.z

#line 69
frc r3.xyz, r3.xyzx  // r3.x <- p.x; r3.y <- p.y; r3.z <- p.z

#line 71
mov r2.w, l(10000.000000)  // r2.w <- minDist

#line 72
itof r3.w, l(-1)  // r3.w <- x
mov r4.w, r2.w  // r4.w <- minDist
mov r5.x, r3.w  // r5.x <- x
loop 
  itof r5.y, l(1)
  ge r5.y, r5.y, r5.x
  breakc_z r5.y

#line 74
  itof r5.y, l(-1)  // r5.y <- y
  mov r5.z, r4.w  // r5.z <- minDist
  mov r5.w, r5.y  // r5.w <- y
  loop 
    itof r6.x, l(1)
    ge r6.x, r6.x, r5.w
    breakc_z r6.x

#line 76
    itof r6.x, l(-1)  // r6.x <- z
    mov r6.y, r5.z  // r6.y <- minDist
    mov r7.z, r6.x  // r7.z <- z
    loop 
      itof r6.z, l(1)
      ge r6.z, r6.z, r7.z
      breakc_z r6.z

#line 78
      mov r7.x, r5.x  // r7.x <- offset.x
      mov r7.y, r5.w  // r7.y <- offset.y
      mov r7.z, r7.z  // r7.z <- offset.z

#line 79
      nop 
      add r8.xyz, r4.xyzx, r7.xyzx
      div r8.xyz, r8.xyzx, r2.zzzz
      mov r9.xyz, -r8.xyzx
      max r10.xyz, r8.xyzx, r9.xyzx
      ge r8.xyz, r8.xyzx, r9.xyzx
      frc r9.xyz, r10.xyzx
      mov r10.xyz, -r9.xyzx
      movc r8.xyz, r8.xyzx, r9.xyzx, r10.xyzx
      mul r8.xyz, r2.zzzz, r8.xyzx

#line 14
      ftoi r8.xyz, r8.xyzx
      imul null, r8.xyz, r8.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r8.x <- q.x; r8.y <- q.y; r8.z <- q.z

#line 15
      xor r6.z, r8.y, r8.x
      xor r6.z, r8.z, r6.z
      imul null, r8.xyz, r6.zzzz, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
      utof r8.xyz, r8.xyzx
      mul r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r8.xyz, r8.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r8.x <- <Hash33 return value>.x; r8.y <- <Hash33 return value>.y; r8.z <- <Hash33 return value>.z

#line 79
      mul r8.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r8.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r8.x <- h.x; r8.y <- h.y; r8.z <- h.z

#line 80
      add r7.xyw, r7.xyxz, r8.xyxz  // r7.x <- h.x; r7.y <- h.y; r7.w <- h.z

#line 81
      mov r7.xyw, -r7.xyxw
      add r7.xyw, r3.xyxz, r7.xyxw  // r7.x <- d.x; r7.y <- d.y; r7.w <- d.z

#line 82
      dp3 r6.z, r7.xywx, r7.xywx
      min r6.y, r6.z, r6.y

#line 83
      add r7.z, r7.z, l(1.000000)
    endloop 
    mov r5.z, r6.y  // r5.z <- minDist

#line 84
    add r5.w, r5.w, l(1.000000)
  endloop 
  mov r4.w, r5.z  // r4.w <- minDist

#line 85
  add r5.x, r5.x, l(1.000000)
endloop 

#line 88
mov r2.z, -r4.w
add r2.z, r2.z, l(1.000000)  // r2.z <- <WorleyNoise return value>

#line 110
mul r2.z, r2.z, l(0.250000)
add r2.y, r2.z, r2.y
nop 
mul r3.xyz, r0.yzwy, r2.xxxx
mul r3.xyz, r3.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
mul r2.x, r2.x, l(4.000000)

#line 68
round_ni r4.xyz, r3.xyzx  // r4.x <- id.x; r4.y <- id.y; r4.z <- id.z

#line 69
frc r3.xyz, r3.xyzx  // r3.x <- p.x; r3.y <- p.y; r3.z <- p.z

#line 71
mov r2.z, l(10000.000000)  // r2.z <- minDist

#line 72
itof r2.w, l(-1)  // r2.w <- x
mov r3.w, r2.z  // r3.w <- minDist
mov r4.w, r2.w  // r4.w <- x
loop 
  itof r5.x, l(1)
  ge r5.x, r5.x, r4.w
  breakc_z r5.x

#line 74
  itof r5.x, l(-1)  // r5.x <- y
  mov r5.y, r3.w  // r5.y <- minDist
  mov r5.z, r5.x  // r5.z <- y
  loop 
    itof r5.w, l(1)
    ge r5.w, r5.w, r5.z
    breakc_z r5.w

#line 76
    itof r5.w, l(-1)  // r5.w <- z
    mov r6.x, r5.y  // r6.x <- minDist
    mov r7.z, r5.w  // r7.z <- z
    loop 
      itof r6.y, l(1)
      ge r6.y, r6.y, r7.z
      breakc_z r6.y

#line 78
      mov r7.x, r4.w  // r7.x <- offset.x
      mov r7.y, r5.z  // r7.y <- offset.y
      mov r7.z, r7.z  // r7.z <- offset.z

#line 79
      nop 
      add r6.yzw, r4.xxyz, r7.xxyz
      div r6.yzw, r6.yyzw, r2.xxxx
      mov r8.xyz, -r6.yzwy
      max r9.xyz, r6.yzwy, r8.xyzx
      ge r6.yzw, r6.yyzw, r8.xxyz
      frc r8.xyz, r9.xyzx
      mov r9.xyz, -r8.xyzx
      movc r6.yzw, r6.yyzw, r8.xxyz, r9.xxyz
      mul r6.yzw, r2.xxxx, r6.yyzw

#line 14
      ftoi r6.yzw, r6.yyzw
      imul null, r6.yzw, r6.yyzw, l(0, 0x5f356491, 0xe336beb9, 0xa6d23e7f)  // r6.y <- q.x; r6.z <- q.y; r6.w <- q.z

#line 15
      xor r6.y, r6.z, r6.y
      xor r6.y, r6.w, r6.y
      imul null, r6.yzw, r6.yyyy, l(0, 0x5f356491, 0xe336beb9, 0xa6d23e7f)  // r6.y <- q.x

#line 16
      utof r6.yzw, r6.yyzw
      mul r6.yzw, r6.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000)
      mul r6.yzw, r6.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r6.yzw, r6.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)  // r6.y <- <Hash33 return value>.x; r6.z <- <Hash33 return value>.y; r6.w <- <Hash33 return value>.z

#line 79
      mul r6.yzw, r6.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
      add r6.yzw, r6.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)  // r6.y <- h.x; r6.z <- h.y; r6.w <- h.z

#line 80
      add r6.yzw, r7.xxyz, r6.yyzw

#line 81
      mov r6.yzw, -r6.yyzw
      add r6.yzw, r3.xxyz, r6.yyzw  // r6.y <- d.x; r6.z <- d.y; r6.w <- d.z

#line 82
      dp3 r6.y, r6.yzwy, r6.yzwy
      min r6.x, r6.y, r6.x

#line 83
      add r7.z, r7.z, l(1.000000)
    endloop 
    mov r5.y, r6.x  // r5.y <- minDist

#line 84
    add r5.z, r5.z, l(1.000000)
  endloop 
  mov r3.w, r5.y  // r3.w <- minDist

#line 85
  add r4.w, r4.w, l(1.000000)
endloop 

#line 88
mov r2.x, -r3.w
add r2.x, r2.x, l(1.000000)  // r2.x <- <WorleyNoise return value>

#line 110
mul r2.x, r2.x, l(0.125000)
add r1.z, r2.x, r2.y  // r1.z <- <WorleyFbm return value>

#line 20 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\LowFreqPerlinWorleyCS.hlsl"
mov r1.z, r1.z  // r1.z <- color.z

#line 21
nop 
mov r0.yzw, r0.yyzw
mov r2.x, l(16.000000)

#line 110 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\PerlinWorleyNoise.hlsli"
nop 
mul r2.yzw, r0.yyzw, r2.xxxx
mov r2.x, r2.x

#line 68
round_ni r3.xyz, r2.yzwy  // r3.x <- id.x; r3.y <- id.y; r3.z <- id.z

#line 69
frc r2.yzw, r2.yyzw  // r2.y <- p.x; r2.z <- p.y; r2.w <- p.z

#line 71
mov r3.w, l(10000.000000)  // r3.w <- minDist

#line 72
itof r4.x, l(-1)  // r4.x <- x
mov r4.y, r3.w  // r4.y <- minDist
mov r4.z, r4.x  // r4.z <- x
loop 
  itof r4.w, l(1)
  ge r4.w, r4.w, r4.z
  breakc_z r4.w

#line 74
  itof r4.w, l(-1)  // r4.w <- y
  mov r5.x, r4.y  // r5.x <- minDist
  mov r5.y, r4.w  // r5.y <- y
  loop 
    itof r5.z, l(1)
    ge r5.z, r5.z, r5.y
    breakc_z r5.z

#line 76
    itof r5.z, l(-1)  // r5.z <- z
    mov r5.w, r5.x  // r5.w <- minDist
    mov r6.z, r5.z  // r6.z <- z
    loop 
      itof r6.w, l(1)
      ge r6.w, r6.w, r6.z
      breakc_z r6.w

#line 78
      mov r6.x, r4.z  // r6.x <- offset.x
      mov r6.y, r5.y  // r6.y <- offset.y
      mov r6.z, r6.z  // r6.z <- offset.z

#line 79
      nop 
      add r7.xyz, r3.xyzx, r6.xyzx
      div r7.xyz, r7.xyzx, r2.xxxx
      mov r8.xyz, -r7.xyzx
      max r9.xyz, r7.xyzx, r8.xyzx
      ge r7.xyz, r7.xyzx, r8.xyzx
      frc r8.xyz, r9.xyzx
      mov r9.xyz, -r8.xyzx
      movc r7.xyz, r7.xyzx, r8.xyzx, r9.xyzx
      mul r7.xyz, r2.xxxx, r7.xyzx

#line 14
      ftoi r7.xyz, r7.xyzx
      imul null, r7.xyz, r7.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r7.x <- q.x; r7.y <- q.y; r7.z <- q.z

#line 15
      xor r6.w, r7.y, r7.x
      xor r6.w, r7.z, r6.w
      imul null, r7.xyz, r6.wwww, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
      utof r7.xyz, r7.xyzx
      mul r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r7.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r7.x <- <Hash33 return value>.x; r7.y <- <Hash33 return value>.y; r7.z <- <Hash33 return value>.z

#line 79
      mul r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r7.x <- h.x; r7.y <- h.y; r7.z <- h.z

#line 80
      add r6.xyw, r6.xyxz, r7.xyxz  // r6.x <- h.x; r6.y <- h.y; r6.w <- h.z

#line 81
      mov r6.xyw, -r6.xyxw
      add r6.xyw, r2.yzyw, r6.xyxw  // r6.x <- d.x; r6.y <- d.y; r6.w <- d.z

#line 82
      dp3 r6.x, r6.xywx, r6.xywx
      min r5.w, r5.w, r6.x

#line 83
      add r6.z, r6.z, l(1.000000)
    endloop 
    mov r5.x, r5.w  // r5.x <- minDist

#line 84
    add r5.y, r5.y, l(1.000000)
  endloop 
  mov r4.y, r5.x  // r4.y <- minDist

#line 85
  add r4.z, r4.z, l(1.000000)
endloop 

#line 88
mov r2.y, -r4.y
add r2.y, r2.y, l(1.000000)  // r2.y <- <WorleyNoise return value>

#line 110
mul r2.y, r2.y, l(0.625000)
nop 
mul r3.xyz, r0.yzwy, r2.xxxx
mul r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mul r2.z, r2.x, l(2.000000)

#line 68
round_ni r4.xyz, r3.xyzx  // r4.x <- id.x; r4.y <- id.y; r4.z <- id.z

#line 69
frc r3.xyz, r3.xyzx  // r3.x <- p.x; r3.y <- p.y; r3.z <- p.z

#line 71
mov r2.w, l(10000.000000)  // r2.w <- minDist

#line 72
itof r3.w, l(-1)  // r3.w <- x
mov r4.w, r2.w  // r4.w <- minDist
mov r5.x, r3.w  // r5.x <- x
loop 
  itof r5.y, l(1)
  ge r5.y, r5.y, r5.x
  breakc_z r5.y

#line 74
  itof r5.y, l(-1)  // r5.y <- y
  mov r5.z, r4.w  // r5.z <- minDist
  mov r5.w, r5.y  // r5.w <- y
  loop 
    itof r6.x, l(1)
    ge r6.x, r6.x, r5.w
    breakc_z r6.x

#line 76
    itof r6.x, l(-1)  // r6.x <- z
    mov r6.y, r5.z  // r6.y <- minDist
    mov r7.z, r6.x  // r7.z <- z
    loop 
      itof r6.z, l(1)
      ge r6.z, r6.z, r7.z
      breakc_z r6.z

#line 78
      mov r7.x, r5.x  // r7.x <- offset.x
      mov r7.y, r5.w  // r7.y <- offset.y
      mov r7.z, r7.z  // r7.z <- offset.z

#line 79
      nop 
      add r8.xyz, r4.xyzx, r7.xyzx
      div r8.xyz, r8.xyzx, r2.zzzz
      mov r9.xyz, -r8.xyzx
      max r10.xyz, r8.xyzx, r9.xyzx
      ge r8.xyz, r8.xyzx, r9.xyzx
      frc r9.xyz, r10.xyzx
      mov r10.xyz, -r9.xyzx
      movc r8.xyz, r8.xyzx, r9.xyzx, r10.xyzx
      mul r8.xyz, r2.zzzz, r8.xyzx

#line 14
      ftoi r8.xyz, r8.xyzx
      imul null, r8.xyz, r8.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r8.x <- q.x; r8.y <- q.y; r8.z <- q.z

#line 15
      xor r6.z, r8.y, r8.x
      xor r6.z, r8.z, r6.z
      imul null, r8.xyz, r6.zzzz, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
      utof r8.xyz, r8.xyzx
      mul r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r8.xyz, r8.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r8.x <- <Hash33 return value>.x; r8.y <- <Hash33 return value>.y; r8.z <- <Hash33 return value>.z

#line 79
      mul r8.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r8.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r8.x <- h.x; r8.y <- h.y; r8.z <- h.z

#line 80
      add r7.xyw, r7.xyxz, r8.xyxz  // r7.x <- h.x; r7.y <- h.y; r7.w <- h.z

#line 81
      mov r7.xyw, -r7.xyxw
      add r7.xyw, r3.xyxz, r7.xyxw  // r7.x <- d.x; r7.y <- d.y; r7.w <- d.z

#line 82
      dp3 r6.z, r7.xywx, r7.xywx
      min r6.y, r6.z, r6.y

#line 83
      add r7.z, r7.z, l(1.000000)
    endloop 
    mov r5.z, r6.y  // r5.z <- minDist

#line 84
    add r5.w, r5.w, l(1.000000)
  endloop 
  mov r4.w, r5.z  // r4.w <- minDist

#line 85
  add r5.x, r5.x, l(1.000000)
endloop 

#line 88
mov r2.z, -r4.w
add r2.z, r2.z, l(1.000000)  // r2.z <- <WorleyNoise return value>

#line 110
mul r2.z, r2.z, l(0.250000)
add r2.y, r2.z, r2.y
nop 
mul r0.yzw, r0.yyzw, r2.xxxx
mul r0.yzw, r0.yyzw, l(0.000000, 4.000000, 4.000000, 4.000000)
mul r2.x, r2.x, l(4.000000)

#line 68
round_ni r3.xyz, r0.yzwy  // r3.x <- id.x; r3.y <- id.y; r3.z <- id.z

#line 69
frc r0.yzw, r0.yyzw  // r0.y <- p.x; r0.z <- p.y; r0.w <- p.z

#line 71
mov r2.z, l(10000.000000)  // r2.z <- minDist

#line 72
itof r2.w, l(-1)  // r2.w <- x
mov r3.w, r2.z  // r3.w <- minDist
mov r4.x, r2.w  // r4.x <- x
loop 
  itof r4.y, l(1)
  ge r4.y, r4.y, r4.x
  breakc_z r4.y

#line 74
  itof r4.y, l(-1)  // r4.y <- y
  mov r4.z, r3.w  // r4.z <- minDist
  mov r4.w, r4.y  // r4.w <- y
  loop 
    itof r5.x, l(1)
    ge r5.x, r5.x, r4.w
    breakc_z r5.x

#line 76
    itof r5.x, l(-1)  // r5.x <- z
    mov r5.y, r4.z  // r5.y <- minDist
    mov r6.z, r5.x  // r6.z <- z
    loop 
      itof r5.z, l(1)
      ge r5.z, r5.z, r6.z
      breakc_z r5.z

#line 78
      mov r6.x, r4.x  // r6.x <- offset.x
      mov r6.y, r4.w  // r6.y <- offset.y
      mov r6.z, r6.z  // r6.z <- offset.z

#line 79
      nop 
      add r7.xyz, r3.xyzx, r6.xyzx
      div r7.xyz, r7.xyzx, r2.xxxx
      mov r8.xyz, -r7.xyzx
      max r9.xyz, r7.xyzx, r8.xyzx
      ge r7.xyz, r7.xyzx, r8.xyzx
      frc r8.xyz, r9.xyzx
      mov r9.xyz, -r8.xyzx
      movc r7.xyz, r7.xyzx, r8.xyzx, r9.xyzx
      mul r7.xyz, r2.xxxx, r7.xyzx

#line 14
      ftoi r7.xyz, r7.xyzx
      imul null, r7.xyz, r7.xyzx, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)  // r7.x <- q.x; r7.y <- q.y; r7.z <- q.z

#line 15
      xor r5.z, r7.y, r7.x
      xor r5.z, r7.z, r5.z
      imul null, r7.xyz, r5.zzzz, l(0x5f356491, 0xe336beb9, 0xa6d23e7f, 0)

#line 16
      utof r7.xyz, r7.xyzx
      mul r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
      mul r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r7.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // r7.x <- <Hash33 return value>.x; r7.y <- <Hash33 return value>.y; r7.z <- <Hash33 return value>.z

#line 79
      mul r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r7.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // r7.x <- h.x; r7.y <- h.y; r7.z <- h.z

#line 80
      add r6.xyw, r6.xyxz, r7.xyxz  // r6.x <- h.x; r6.y <- h.y; r6.w <- h.z

#line 81
      mov r6.xyw, -r6.xyxw
      add r6.xyw, r0.yzyw, r6.xyxw  // r6.x <- d.x; r6.y <- d.y; r6.w <- d.z

#line 82
      dp3 r5.z, r6.xywx, r6.xywx
      min r5.y, r5.z, r5.y

#line 83
      add r6.z, r6.z, l(1.000000)
    endloop 
    mov r4.z, r5.y  // r4.z <- minDist

#line 84
    add r4.w, r4.w, l(1.000000)
  endloop 
  mov r3.w, r4.z  // r3.w <- minDist

#line 85
  add r4.x, r4.x, l(1.000000)
endloop 

#line 88
mov r0.y, -r3.w
add r0.y, r0.y, l(1.000000)  // r0.y <- <WorleyNoise return value>

#line 110
mul r0.y, r0.y, l(0.125000)
add r1.w, r0.y, r2.y  // r1.w <- <WorleyFbm return value>

#line 21 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\LowFreqPerlinWorleyCS.hlsl"
mov r1.w, r1.w  // r1.w <- color.w

#line 22
nop 
mov r0.x, r0.x
mov r0.y, l(0)
mov r0.z, l(1.000000)
mov r1.x, r1.x
mov r0.w, l(1.000000)

#line 21 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\PerlinWorleyNoise.hlsli"
mov r2.x, -r0.y
add r0.x, r0.x, r2.x
mov r0.y, -r0.y
add r0.y, r0.y, r0.z
div r0.x, r0.x, r0.y
mov r0.y, -r1.x
add r0.y, r0.y, r0.w
mul r0.x, r0.y, r0.x
add r1.y, r1.x, r0.x  // r1.y <- <Remap return value>

#line 22 "C:\Users\2240225\Desktop\3Dsoftbody\Shader\LowFreqPerlinWorleyCS.hlsl"
mov r1.y, r1.y  // r1.y <- color.x

#line 24
store_uav_typed u0.xyzw, vThreadID.xyzz, r1.yxzw

#line 25
ret 
// Approximately 928 instruction slots used
