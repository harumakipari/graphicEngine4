//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16
//   float4 cameraPositon;              // Offset:   80 Size:    16 [unused]
//   float4 colorLight;                 // Offset:   96 Size:    16
//   row_major float4x4 view;           // Offset:  112 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:  176 Size:    64 [unused]
//   row_major float4x4 inverseProjection;// Offset:  240 Size:    64 [unused]
//   row_major float4x4 inverseViewProjection;// Offset:  304 Size:    64 [unused]
//   float iblIntensity;                // Offset:  368 Size:     4 [unused]
//   bool enableSSAO;                   // Offset:  372 Size:     4 [unused]
//   float reflectionIntensity;         // Offset:  376 Size:     4 [unused]
//   float time;                        // Offset:  380 Size:     4 [unused]
//   bool enableCascadedShadowMaps;     // Offset:  384 Size:     4 [unused]
//   bool enableSSR;                    // Offset:  388 Size:     4 [unused]
//   bool enableFog;                    // Offset:  392 Size:     4 [unused]
//   bool enableBloom;                  // Offset:  396 Size:     4 [unused]
//   row_major float4x4 invView;        // Offset:  400 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// linearBorderBlackSamplerState     sampler      NA          NA             s3      1 
// colorMap                          texture  float4          2d             t0      1 
// normalMap                         texture  float4          2d             t2      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[7], immediateIndexed
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 16 "C:\Users\2240225\Desktop\graphicEngine2\Shader\GBufferPS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s3  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 17
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t2.xyzw, s3
mov r1.xyz, r1.xyzx  // r1.x <- normal.x; r1.y <- normal.y; r1.z <- normal.z

#line 18
mov r2.xyz, l(0,0,0,0)  // r2.x <- lig.x; r2.y <- lig.y; r2.z <- lig.z

#line 19
mul r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.x, r1.xyzx, cb1[4].xyzx
max r1.x, r1.x, l(0.000000)
mul r1.xyz, r1.xxxx, cb1[6].xyzx
add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- lig.x; r1.y <- lig.y; r1.z <- lig.z

#line 20
add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)

#line 21
mov r0.xyzw, r0.xyzw  // r0.x <- finalColor.x; r0.y <- finalColor.y; r0.z <- finalColor.z; r0.w <- finalColor.w

#line 22
mul r0.xyz, r1.xyzx, r0.xyzx

#line 23
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 15 instruction slots used
